'\"macro stdmacro
.if n .pH g3e.elf_fill @(#)elf_fill	40.10 of 5/1/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.\"#ident	"@(#)ci5-doc:req/libelf/fill.man	1.1"
.nr X
.if \nX=0 .ds x} elf_fill 3E "ELF Library" "\&"
.if \nX=1 .ds x} elf_fill 3E "ELF Library"
.if \nX=2 .ds x} elf_fill 3E "" "\&"
.if \nX=3 .ds x} elf_fill "" "" "\&"
.TH \*(x}
.SH NAME
\f4elf_fill\f1 \- set fill byte
.SH SYNOPSIS
\f4cc\f1
[\f2flag\fP \|.\|.\|.] \f2file\fP \|.\|.\|.
\f4\-lelf\f1
[\f2library\fP \|.\|.\|.]
.PP
.nf
.ft 4
#include <libelf.h>
.sp 0.5
void elf_fill(int fill);
.ft 1
.fi
.SH DESCRIPTION
Alignment constraints for
.SM ELF
files sometimes require
the presence of ``holes.''
For example, if the data for one section are required to
begin on an eight-byte boundary, but the preceding section
is too ``short,'' the library must fill the intervening bytes.
These bytes are set to the
.I fill
character.
The library uses zero bytes
unless the application supplies a value.
See
\f4elf_getdata\fP(3E)
for more information about these holes.
.SH "SEE ALSO"
.na
\f4elf\fP(3E),
\f4elf_getdata\fP(3E),
\f4elf_flag\fP(3E),
\f4elf_update\fP(3E)
.SH NOTE
An application can assume control of the object
file organization by setting the
\f4ELF_F_LAYOUT\f1
bit [see
\f4elf_flag\fP(3E)].
When this is done, the library does
.I not
fill holes.
