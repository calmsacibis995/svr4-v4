.if n .pH 386.PI.COLFILE @(#)PI.COLFILE	40.10
.\" Copyright 1991 UNIX System Laboratories, Inc.
.BK "Programmer's Reference Manual"
.CH "Permuted Index"
.H 1 "Permuted Index"
.Px
.xx "" "l3tol, ltol3 convert between" "3-byte integers and long integers" "" l3tol(3C)
.xx "" "x286emul emulate XENIX" "80286" "" x286emul(1)
.xx "integer and base-64 ASCII string" "" "a64l, l64a convert between long" "" a64l(3C)
.xx "" "abort generate an" "abnormal termination signal" "" abort(3C)
.xx "termination signal" "" "abort generate an abnormal" "" abort(3C)
.xx "value" "" "abs, labs return integer absolute" "" abs(3C)
.xx "" "abs, labs return integer" "absolute value" "" abs(3C)
.xx "" "floor, ceiling, remainder," "absolute value functions" "/remainder" floor(3M)
.xx "" "utime set file" "access and modification times" "" utime(2)
.xx "file" "" "access determine accessibility of a" "" access(2)
.xx "" "elf_next sequential archive member" "access" "" elf_next(3E)
.xx "" "elf_rand random archive member" "access" "" elf_rand(3E)
.xx "" "elf object file" "access library" "" elf(3E)
.xx "" "get or set supplementary group" "access list IDs" "/setgroups" getgroups(2)
.xx "" "initialize the supplementary group" "access list" "initgroups" initgroups(3C)
.xx "machine-independent/" "sputl, sgetl" "access long integer data in a" "" sputl(3X)
.xx "" "setutent, endutent, utmpname" "access utmp file entry" "/pututline," getut(3C)
.xx "" "getutmpx, updwtmp, updwtmpx" "access utmpx file entry" "/getutmp," getutx(3C)
.xx "" "access determine" "accessibility of a file" "" access(2)
.xx "" "acct enable or disable process" "accounting" "" acct(2)
.xx "accounting" "" "acct enable or disable process" "" acct(2)
.xx "" "/cos, cosf, tan, tanf, asin, asinf," "acos, acosf, atan, atanf, atan2,/" "" trig(3M)
.xx "" "/cosf, tan, tanf, asin, asinf, acos," "acosf, atan, atanf, atan2, atan2f/" "" trig(3M)
.xx "" "/cosh, coshf, tanh, tanhf, asinh," "acosh, atanh hyperbolic functions" "" sinh(3M)
.xx "" "print current SCCS file editing" "activity" "sact" sact(1)
.xx "" "atexit" "add program termination routine" "" atexit(3C)
.xx "" "putenv change or" "add value to environment" "" putenv(3C)
.xx "object" "dlsym get the" "address of a symbol in shared" "" dlsym(3X)
.xx "" "mlockall, munlockall lock or unlock" "address space" "" mlockall(3C)
.xx "severity levels for an application/" "" "addseverity build a list of" "" addseverity(3C)
.xx "synchronization of the system/" "" "adjtime correct the time to allow" "" adjtime(2)
.xx "files" "" "admin create and administer SCCS" "" admin(1)
.xx "" "admin create and" "administer SCCS files" "" admin(1)
.xx "" "uadmin" "administrative control" "" uadmin(2)
.xx "and match/" "regexp: compile, step," "advance regular expression compile" "" regexp(5)
.xx "and match/" "regexpr: compile, step," "advance regular expression compile" "" regexpr(3G)
.xx "" "alarm set a process" "alarm clock" "" alarm(2)
.xx "" "" "alarm set a process alarm clock" "" alarm(2)
.xx "" "brk, sbrk change data segment space" "allocation" "" brk(2)
.xx "" "calloc, memalign, valloc, memory" "allocator" "malloc, free, realloc," malloc(3C)
.xx "" "calloc, mallopt, mallinfo memory" "allocator" "malloc, free, realloc," malloc(3X)
.xx "clock" "adjtime correct the time to" "allow synchronization of the system" "" adjtime(2)
.xx "" "sigaltstack set or get signal" "alternate stack context" "" sigaltstack(2)
.xx "Format) files" "" "a.out ELF (Executable and Linking" "" a.out(4)
.xx "" "/a list of severity levels for an" "application for use with fmtmsg" "" addseverity(3C)
.xx "" "coordinate ELF library and" "application versions" "elf_version" elf_version(3E)
.xx "" "" "ar archive file format" "" ar(4)
.xx "library" "" "ar maintain portable archive or" "" ar(1)
.xx "" "ar" "archive file format" "" ar(4)
.xx "" "convert convert" "archive files to common formats" "" convert(1)
.xx "" "elf_next sequential" "archive member access" "" elf_next(3E)
.xx "" "elf_rand random" "archive member access" "" elf_rand(3E)
.xx "" "elf_getarhdr retrieve" "archive member header" "" elf_getarhdr(3E)
.xx "" "ar maintain portable" "archive or library" "" ar(1)
.xx "" "elf_getarsym retrieve" "archive symbol table" "" elf_getarsym(3E)
.xx "" "stdarg handle variable" "argument list" "" stdarg(5)
.xx "" "varargs handle variable" "argument list" "" varargs(5)
.xx "" "formatted output of a variable" "argument list" "/vsprintf print" vprintf(3S)
.xx "" "getopt get option letter from" "argument vector" "" getopt(3C)
.xx "string" "strftime, cftime," "ascftime convert date and time to" "" strftime(3C)
.xx "" "ascii map of" "ASCII character set" "" ascii(5)
.xx "" "" "ascii map of ASCII character set" "" ascii(5)
.xx "" "between long integer and base-64" "ASCII string" "a64l, l64a convert" a64l(3C)
.xx "time to/" "ctime, localtime, gmtime," "asctime, tzset convert date and" "" ctime(3C)
.xx "" "/sin, sinf, cos, cosf, tan, tanf," "asin, asinf, acos, acosf, atan,/" "" trig(3M)
.xx "" "/sinf, cos, cosf, tan, tanf, asin," "asinf, acos, acosf, atan, atanf,/" "" trig(3M)
.xx "" "/sinhf, cosh, coshf, tanh, tanhf," "asinh, acosh, atanh hyperbolic/" "" sinh(3M)
.xx "or SCCS commands" "help" "ask for help with message numbers" "" help(1)
.xx "" "as" "assembler" "" as(1)
.xx "" "" "assert verify program assertion" "" assert(3X)
.xx "" "assert verify program" "assertion" "" assert(3X)
.xx "" "setbuf, setvbuf" "assign buffering to a stream" "" setbuf(3S)
.xx "" "tanf, asin, asinf, acos, acosf," "atan, atanf, atan2, atan2f/" "/tan," trig(3M)
.xx "" "asinf, acos, acosf, atan, atanf," "atan2, atan2f trigonometric/" "/asin," trig(3M)
.xx "" "/acos, acosf, atan, atanf, atan2," "atan2f trigonometric functions" "" trig(3M)
.xx "" "/asin, asinf, acos, acosf, atan," "atanf, atan2, atan2f trigonometric/" "" trig(3M)
.xx "" "coshf, tanh, tanhf, asinh, acosh," "atanh hyperbolic functions" "/cosh," sinh(3M)
.xx "routine" "" "atexit add program termination" "" atexit(3C)
.xx "double-precision/" "strtod, strtold," "atof convert string to" "" strtod(3C)
.xx "" "strtol, strtoul, atol," "atoi convert string to integer" "" strtol(3C)
.xx "integer" "strtol, strtoul," "atol, atoi convert string to" "" strtol(3C)
.xx "" "elf_getbase get the" "base offset for an object file" "" elf_getbase(3E)
.xx "" "signal" "base signals" "" signal(5)
.xx "" "convert between long integer and" "base-64 ASCII string" "a64l, l64a" a64l(3C)
.xx "a path name" "" "basename return the last element of" "" basename(3G)
.xx "" "cb C program" "beautifier" "" cb(1)
.xx "" "bessel: j0, j1, jn, y0, y1, yn" "Bessel functions" "" bessel(3M)
.xx "Bessel functions" "" "bessel: j0, j1, jn, y0, y1, yn" "" bessel(3M)
.xx "delimiter" "" "bgets read stream up to next" "" bgets(3G)
.xx "" "fread, fwrite" "binary input/output" "" fread(3S)
.xx "" "bsearch" "binary search a sorted table" "" bsearch(3C)
.xx "" "tfind, tdelete, twalk manage" "binary search trees" "tsearch," tsearch(3C)
.xx "" "ffs find first set" "bit" "" ffs(3C)
.xx "" "sync update super" "block" "" sync(2)
.xx "" "sigpending examine signals that are" "blocked and pending" "" sigpending(2)
.xx "allocation" "" "brk, sbrk change data segment space" "" brk(2)
.xx "table" "" "bsearch binary search a sorted" "" bsearch(3C)
.xx "" "bufsplit split" "buffer into fields" "" bufsplit(3G)
.xx "" "determine whether a character" "buffer is encrypted" "isencrypt" isencrypt(3G)
.xx "" "stdio standard" "buffered input/output package" "" stdio(3S)
.xx "" "setbuf, setvbuf assign" "buffering to a stream" "" setbuf(3S)
.xx "" "" "bufsplit split buffer into fields" "" bufsplit(3G)
.xx "an application for use/" "addseverity" "build a list of severity levels for" "" addseverity(3C)
.xx "" "elf_fill set fill" "byte" "" elf_fill(3E)
.xx "" "size print section sizes in" "bytes of object files" "" size(1)
.xx "" "swab swap" "bytes" "" swab(3C)
.xx "" "cc" "C compiler" "" cc(1)
.xx "" "cflow generate" "C flowgraph" "" cflow(1)
.xx "" "cb" "C program beautifier" "" cb(1)
.xx "" "lint a" "C program checker" "" lint(1)
.xx "" "cxref generate" "C program cross-reference" "" cxref(1)
.xx "" "cscope interactively examine a" "C program" "" cscope(1)
.xx "" "ctrace" "C program debugger" "" ctrace(1)
.xx "" "mktime converts a tm structure to a" "calendar time" "" mktime(3C)
.xx "" "computes the difference between two" "calendar times" "difftime" difftime(3C)
.xx "" "stat data returned by stat system" "call" "" stat(5)
.xx "allocator" "malloc, free, realloc," "calloc, mallopt, mallinfo memory" "" malloc(3X)
.xx "allocator" "malloc, free, realloc," "calloc, memalign, valloc, memory" "" malloc(3C)
.xx "" "intro introduction to system" "calls and error numbers" "" intro(2)
.xx "" "catclose open/close a message" "catalogue" "catopen," catopen(3C)
.xx "catalogue" "catopen," "catclose open/close a message" "" catopen(3C)
.xx "" "" "catgets read a program message" "" catgets(3C)
.xx "message catalogue" "" "catopen, catclose open/close a" "" catopen(3C)
.xx "" "" "cb C program beautifier" "" cb(1)
.xx "pow, powf, sqrt, sqrtf/" "exp, expf," "cbrt, log, logf, log10, log10f," "" exp(3M)
.xx "" "" "cc C compiler" "" cc(1)
.xx "SCCS delta" "" "cdc change the delta comment of an" "" cdc(1)
.xx "fabs, fabsf, rint,/" "floor, floorf," "ceil, ceilf, copysign, fmod, fmodf," "" floor(3M)
.xx "fabsf, rint,/" "floor, floorf, ceil," "ceilf, copysign, fmod, fmodf, fabs," "" floor(3M)
.xx "" "/fabs, fabsf, rint, remainder floor," "ceiling, remainder, absolute value/" "" floor(3M)
.xx "" "tcflush, tcflow, cfgetospeed," "cfgetispeed, cfsetispeed,/" "/tcdrain," termios(2)
.xx "" "/tcdrain, tcflush, tcflow," "cfgetospeed, cfgetispeed,/" "" termios(2)
.xx "" "" "cflow generate C flowgraph" "" cflow(1)
.xx "" "tcflow, cfgetospeed, cfgetispeed," "cfsetispeed, cfsetospeed,/" "/tcflush," termios(2)
.xx "tcgetsid/" "/cfgetispeed, cfsetispeed," "cfsetospeed, tcgetpgrp, tcsetpgrp," "" termios(2)
.xx "time to string" "strftime," "cftime, ascftime convert date and" "" strftime(3C)
.xx "allocation" "brk, sbrk" "change data segment space" "" brk(2)
.xx "" "chmod, fchmod" "change mode of file" "" chmod(2)
.xx "" "putenv" "change or add value to environment" "" putenv(3C)
.xx "" "sigprocmask" "change or examine signal mask" "" sigprocmask(2)
.xx "" "chown, lchown, fchown" "change owner and group of a file" "" chown(2)
.xx "process" "nice" "change priority of a time-sharing" "" nice(2)
.xx "" "chroot" "change root directory" "" chroot(2)
.xx "" "waitid wait for child process to" "change state" "" waitid(2)
.xx "" "waitpid wait for child process to" "change state" "" waitpid(2)
.xx "delta" "cdc" "change the delta comment of an SCCS" "" cdc(1)
.xx "" "rename" "change the name of a file" "" rename(2)
.xx "" "delta make a delta" "(change) to an SCCS file" "" delta(1)
.xx "" "chdir, fchdir" "change working directory" "" chdir(2)
.xx "" "pipe create an interprocess" "channel" "" pipe(2)
.xx "" "xtproto multiplexed" "channels protocol used by xt driver" "" xtproto(5)
.xx "" "ungetc push" "character back onto input stream" "" ungetc(3S)
.xx "" "isencrypt determine whether a" "character buffer is encrypted" "" isencrypt(3G)
.xx "" "ispunct, isprint, isgraph, isascii" "character handling" "/iscntrl," ctype(3C)
.xx "" "mbtowc, mblen, wctomb multibyte" "character handling" "mbchar:" mbchar(3C)
.xx "" "cuserid get" "character login name of the user" "" cuserid(3S)
.xx "" "getc, getchar, fgetc, getw get" "character or word from a stream" "" getc(3S)
.xx "" "putc, putchar, fputc, putw put" "character or word on a stream" "" putc(3S)
.xx "" "ascii map of ASCII" "character set" "" ascii(5)
.xx "" "_tolower, toascii translate" "characters" "/tolower, _toupper," conv(3C)
.xx "directory" "" "chdir, fchdir change working" "" chdir(2)
.xx "" "lint a C program" "checker" "" lint(1)
.xx "" "times get process and" "child process times" "" times(2)
.xx "" "waitid wait for" "child process to change state" "" waitid(2)
.xx "" "waitpid wait for" "child process to change state" "" waitpid(2)
.xx "" "wait wait for" "child process to stop or terminate" "" wait(2)
.xx "" "" "chmod, fchmod change mode of file" "" chmod(2)
.xx "and group of a file" "" "chown, lchown, fchown change owner" "" chown(2)
.xx "" "" "chroot change root directory" "" chroot(2)
.xx "" "/elf32_xlatetof, elf32_xlatetom" "class-dependent data translation" "" elf_xlate(3E)
.xx "" "/elf32_newehdr retrieve" "class-dependent object file header" "" elf_getehdr(3E)
.xx "table" "/elf32_newphdr retrieve" "class-dependent program header" "" elf_getphdr(3E)
.xx "" "elf_getshdr: elf32_getshdr retrieve" "class-dependent section header" "" elf_getshdr(3E)
.xx "inquiries" "ferror, feof," "clearerr, fileno stream status" "" ferror(3S)
.xx "" "allow synchronization of the system" "clock" "adjtime correct the time to" adjtime(2)
.xx "" "alarm set a process alarm" "clock" "" alarm(2)
.xx "" "" "clock report CPU time used" "" clock(3C)
.xx "" "close" "close a file descriptor" "" close(2)
.xx "" "dlclose" "close a shared object" "" dlclose(3X)
.xx "" "" "close close a file descriptor" "" close(2)
.xx "" "fclose, fflush" "close or flush a stream" "" fclose(3S)
.xx "" "p2open, p2close open," "close pipes to and from a command" "" p2open(3G)
.xx "" "/telldir, seekdir, rewinddir," "closedir directory operations" "" directory(3C)
.xx "" "compressing or expanding escape" "codes" "/strecpy copy strings," strccpy(3G)
.xx "translation" "" "cof2elf COFF to ELF object file" "" cof2elf(1)
.xx "" "cof2elf" "COFF to ELF object file translation" "" cof2elf(1)
.xx "" "strcoll string" "collation" "" strcoll(3C)
.xx "" "" "comb combine SCCS deltas" "" comb(1)
.xx "" "comb" "combine SCCS deltas" "" comb(1)
.xx "" "open, close pipes to and from a" "command" "p2open, p2close" p2open(3G)
.xx "" "system issue a shell" "command" "" system(3S)
.xx "" "help with message numbers or SCCS" "commands" "help ask for" help(1)
.xx "" "install install" "commands" "" install(1M)
.xx "" "intro introduction to programming" "commands" "" intro(1)
.xx "" "cdc change the delta" "comment of an SCCS delta" "" cdc(1)
.xx "" "mcs manipulate the" "comment section of an object file" "" mcs(1)
.xx "" "convert convert archive files to" "common formats" "" convert(1)
.xx "" "stdipc: ftok standard interprocess" "communication package" "" stdipc(3C)
.xx "file" "sccsdiff" "compare two versions of an SCCS" "" sccsdiff(1)
.xx "expression" "regcmp, regex" "compile and execute regular" "" regcmp(3G)
.xx "" "/step, advance regular expression" "compile and match routines" "" regexp(5)
.xx "" "/step, advance regular expression" "compile and match routines" "" regexpr(3G)
.xx "" "regcmp regular expression" "compile" "" regcmp(1)
.xx "expression compile and/" "regexp:" "compile, step, advance regular" "" regexp(5)
.xx "expression compile and/" "regexpr:" "compile, step, advance regular" "" regexpr(3G)
.xx "" "cc C" "compiler" "" cc(1)
.xx "" "yacc yet another" "compiler-compiler" "" yacc(1)
.xx "" "erf, erfc error function and" "complementary error function" "" erf(3M)
.xx "" "/strcadd, strecpy copy strings," "compressing or expanding escape/" "" strccpy(3G)
.xx "" "elf_hash" "compute hash value" "" elf_hash(3E)
.xx "" "div, ldiv" "compute the quotient and remainder" "" div(3C)
.xx "calendar times" "difftime" "computes the difference between two" "" difftime(3C)
.xx "" "fpathconf, pathconf get" "configurable pathname variables" "" fpathconf(2)
.xx "" "sysconf get" "configurable system variables" "" sysconf(3C)
.xx "" "a message on stderr or system" "console" "fmtmsg display" fmtmsg(3C)
.xx "" "langinfo language information" "constants" "" langinfo(5)
.xx "" "file for implementation-specific" "constants" "limits header" limits(4)
.xx "" "math math functions and" "constants" "" math(5)
.xx "" "control maximum system resource" "consumption" "getrlimit, setrlimit" getrlimit(2)
.xx "" "retrieve uninterpreted file" "contents" "elf_rawfile" elf_rawfile(3E)
.xx "" "setcontext get and set current user" "context" "getcontext," getcontext(2)
.xx "" "set or get signal alternate stack" "context" "sigaltstack" sigaltstack(2)
.xx "" "ucontext user" "context" "" ucontext(5)
.xx "" "swapcontext manipulate user" "contexts" "makecontext," makecontext(3C)
.xx "" "elf_cntl" "control a file descriptor" "" elf_cntl(3E)
.xx "" "ioctl" "control device" "" ioctl(2)
.xx "" "fcntl file" "control" "" fcntl(2)
.xx "" "IEEE floating-point environment" "control" "/fpgetsticky, fpsetsticky" fpgetround(3C)
.xx "consumption" "getrlimit, setrlimit" "control maximum system resource" "" getrlimit(2)
.xx "" "memcntl memory management" "control" "" memcntl(2)
.xx "" "jagent host" "control of windowing terminal" "" jagent(5)
.xx "" "msgctl message" "control operations" "" msgctl(2)
.xx "" "semctl semaphore" "control operations" "" semctl(2)
.xx "" "shmctl shared memory" "control operations" "" shmctl(2)
.xx "" "fcntl file" "control options" "" fcntl(5)
.xx "" "priocntl process scheduler" "control" "" priocntl(2)
.xx "" "generalized process scheduler" "control" "priocntlset" priocntlset(2)
.xx "" "uadmin administrative" "control" "" uadmin(2)
.xx "" "vc version" "control" "" vc(1)
.xx "_tolower, toascii translate/" "" "conv: toupper, tolower, _toupper," "" conv(3C)
.xx "formats" "convert" "convert archive files to common" "" convert(1)
.xx "long integers" "l3tol, ltol3" "convert between 3-byte integers and" "" l3tol(3C)
.xx "base-64 ASCII string" "a64l, l64a" "convert between long integer and" "" a64l(3C)
.xx "common formats" "" "convert convert archive files to" "" convert(1)
.xx "" "/localtime, gmtime, asctime, tzset" "convert date and time to string" "" ctime(3C)
.xx "" "strftime, cftime, ascftime" "convert date and time to string" "" strftime(3C)
.xx "" "/ecvtl, fcvt, fcvtl, gcvt, gcvtl" "convert floating-point number to/" "" ecvt(3C)
.xx "" "scanf, fscanf, sscanf" "convert formatted input" "" scanf(3S)
.xx "number" "strtod, strtold, atof" "convert string to double-precision" "" strtod(3C)
.xx "" "strtol, strtoul, atol, atoi" "convert string to integer" "" strtol(3C)
.xx "" "getdate" "convert user format date and time" "" getdate(3C)
.xx "calendar time" "mktime" "converts a tm structure to a" "" mktime(3C)
.xx "application versions" "elf_version" "coordinate ELF library and" "" elf_version(3E)
.xx "" "copylist" "copy a file into memory" "" copylist(3G)
.xx "" "strccpy: streadd, strcadd, strecpy" "copy strings, compressing or/" "" strccpy(3G)
.xx "" "" "copylist copy a file into memory" "" copylist(3G)
.xx "rint,/" "floor, floorf, ceil, ceilf," "copysign, fmod, fmodf, fabs, fabsf," "" floor(3M)
.xx "" "" "core core image file" "" core(4)
.xx "" "core" "core image file" "" core(4)
.xx "synchronization of the/" "adjtime" "correct the time to allow" "" adjtime(2)
.xx "acos, acosf,/" "trig: sin, sinf," "cos, cosf, tan, tanf, asin, asinf," "" trig(3M)
.xx "acosf, atan,/" "trig: sin, sinf, cos," "cosf, tan, tanf, asin, asinf, acos," "" trig(3M)
.xx "acosh, atanh/" "sinh, sinhf," "cosh, coshf, tanh, tanhf, asinh," "" sinh(3M)
.xx "atanh/" "sinh, sinhf, cosh," "coshf, tanh, tanhf, asinh, acosh," "" sinh(3M)
.xx "" "display line-by-line execution" "count profile data" "lprof" lprof(1)
.xx "" "clock report" "CPU time used" "" clock(3C)
.xx "an existing one" "" "creat create a new file or rewrite" "" creat(2)
.xx "" "tmpnam, tempnam" "create a name for a temporary file" "" tmpnam(3S)
.xx "" "mkfifo" "create a new FIFO" "" mkfifo(3C)
.xx "existing one" "creat" "create a new file or rewrite an" "" creat(2)
.xx "" "fork" "create a new process" "" fork(2)
.xx "" "tmpfile" "create a temporary file" "" tmpfile(3S)
.xx "" "pipe" "create an interprocess channel" "" pipe(2)
.xx "" "admin" "create and administer SCCS files" "" admin(1)
.xx "path" "mkdirp, rmdirp" "create, remove directories in a" "" mkdirp(3G)
.xx "" "umask set and get file" "creation mask" "" umask(2)
.xx "" "cxref generate C program" "cross-reference" "" cxref(1)
.xx "functions" "" "crypt password and file encryption" "" crypt(3X)
.xx "encryption" "" "crypt, setkey, encrypt generate" "" crypt(3C)
.xx "program" "" "cscope interactively examine a C" "" cscope(1)
.xx "terminal" "" "ctermid generate file name for" "" ctermid(3S)
.xx "tzset convert date and time to/" "" "ctime, localtime, gmtime, asctime," "" ctime(3C)
.xx "" "" "ctrace C program debugger" "" ctrace(1)
.xx "isupper, isalpha, isalnum,/" "" "ctype: isdigit, isxdigit, islower," "" ctype(3C)
.xx "" "sact print" "current SCCS file editing activity" "" sact(1)
.xx "" "uname get name of" "current UNIX system" "" uname(2)
.xx "" "getcontext, setcontext get and set" "current user context" "" getcontext(2)
.xx "" "the slot in the utmp file of the" "current user" "ttyslot find" ttyslot(3C)
.xx "" "getcwd get pathname of" "current working directory" "" getcwd(3C)
.xx "the user" "" "cuserid get character login name of" "" cuserid(3S)
.xx "cross-reference" "" "cxref generate C program" "" cxref(1)
.xx "" "elf_rawdata get section" "data" "elf_getdata, elf_newdata," elf_getdata(3E)
.xx "" "retrieve file identification" "data" "elf_getident" elf_getident(3E)
.xx "" "sputl, sgetl access long integer" "data in a machine-independent/" "" sputl(3X)
.xx "" "execution count profile" "data" "lprof display line-by-line" lprof(1)
.xx "" "memory or unlock process, text, or" "data" "plock lock into" plock(2)
.xx "" "prof display profile" "data" "" prof(1)
.xx "" "stat" "data returned by stat system call" "" stat(5)
.xx "" "brk, sbrk change" "data segment space allocation" "" brk(2)
.xx "" "elf32_xlatetom class-dependent" "data translation" "/elf32_xlatetof," elf_xlate(3E)
.xx "" "nl_types native language" "data types" "" nl_types(5)
.xx "" "types primitive system" "data types" "" types(5)
.xx "" "getdate convert user format" "date and time" "" getdate(3C)
.xx "" "settimeofday get or set the" "date and time" "gettimeofday," gettimeofday(3C)
.xx "" "gmtime, asctime, tzset convert" "date and time to string" "/localtime," ctime(3C)
.xx "" "strftime, cftime, ascftime convert" "date and time to string" "" strftime(3C)
.xx "" "ctrace C program" "debugger" "" ctrace(1)
.xx "" "sdb symbolic" "debugger" "" sdb(1)
.xx "" "strip strip symbol table," "debugging and line number/" "" strip(1)
.xx "" "timezone set" "default system time zone" "" timezone(4)
.xx "" "bgets read stream up to next" "delimiter" "" bgets(3G)
.xx "" "change the delta comment of an SCCS" "delta" "cdc" cdc(1)
.xx "" "delta make a" "delta (change) to an SCCS file" "" delta(1)
.xx "" "cdc change the" "delta comment of an SCCS delta" "" cdc(1)
.xx "" "rmdel remove a" "delta from an SCCS file" "" rmdel(1)
.xx "SCCS file" "" "delta make a delta (change) to an" "" delta(1)
.xx "" "comb combine SCCS" "deltas" "" comb(1)
.xx "" "ldd list dynamic" "dependencies" "" ldd(1)
.xx "" "close close a file" "descriptor" "" close(2)
.xx "" "dup duplicate an open file" "descriptor" "" dup(2)
.xx "" "dup2 duplicate an open file" "descriptor" "" dup2(3C)
.xx "" "elf_begin make a file" "descriptor" "" elf_begin(3E)
.xx "" "elf_cntl control a file" "descriptor" "" elf_cntl(3E)
.xx "" "elf_update update an ELF" "descriptor" "" elf_update(3E)
.xx "" "sigaction" "detailed signal management" "" sigaction(2)
.xx "" "access" "determine accessibility of a file" "" access(2)
.xx "" "elf_kind" "determine file type" "" elf_kind(3E)
.xx "" "mincore" "determine residency of memory pages" "" mincore(2)
.xx "" "/fpclassl, unordered, unorderedl" "determine type of floating-point/" "" isnan(3C)
.xx "buffer is encrypted" "isencrypt" "determine whether a character" "" isencrypt(3G)
.xx "" "ioctl control" "device" "" ioctl(2)
.xx "" "makedev, major, minor manage a" "device number" "" makedev(3C)
.xx "" "dlerror get" "diagnostic information" "" dlerror(3X)
.xx "times" "difftime computes the" "difference between two calendar" "" difftime(3C)
.xx "between two calendar times" "" "difftime computes the difference" "" difftime(3C)
.xx "" "mkdirp, rmdirp create, remove" "directories in a path" "" mkdirp(3G)
.xx "" "search for named file in named" "directories" "pathfind" pathfind(3G)
.xx "" "chdir, fchdir change working" "directory" "" chdir(2)
.xx "" "chroot change root" "directory" "" chroot(2)
.xx "system independent/" "getdents read" "directory entries and put in a file" "" getdents(2)
.xx "" "unlink remove" "directory entry" "" unlink(2)
.xx "" "get pathname of current working" "directory" "getcwd" getcwd(3C)
.xx "" "mkdir make a" "directory" "" mkdir(2)
.xx "" "dirname report the parent" "directory name of a file path name" "" dirname(3G)
.xx "telldir, seekdir, rewinddir,/" "" "directory: opendir, readdir," "" directory(3C)
.xx "" "seekdir, rewinddir, closedir" "directory operations" "/telldir," directory(3C)
.xx "file" "mknod make a" "directory, or a special or ordinary" "" mknod(2)
.xx "" "rmdir remove a" "directory" "" rmdir(2)
.xx "name of a file path name" "" "dirname report the parent directory" "" dirname(3G)
.xx "" "" "dis object code disassembler" "" dis(1)
.xx "" "acct enable or" "disable process accounting" "" acct(2)
.xx "" "dis object code" "disassembler" "" dis(1)
.xx "system console" "fmtmsg" "display a message on stderr or" "" fmtmsg(3C)
.xx "count profile data" "lprof" "display line-by-line execution" "" lprof(1)
.xx "" "prof" "display profile data" "" prof(1)
.xx "" "hypot Euclidean" "distance function" "" hypot(3M)
.xx "" "/seed48, lcong48 generate uniformly" "distributed pseudo-random numbers" "" drand48(3C)
.xx "remainder" "" "div, ldiv compute the quotient and" "" div(3C)
.xx "" "" "dlclose close a shared object" "" dlclose(3X)
.xx "" "" "dlerror get diagnostic information" "" dlerror(3X)
.xx "" "" "dlopen open a shared object" "" dlopen(3X)
.xx "in shared object" "" "dlsym get the address of a symbol" "" dlsym(3X)
.xx "" "strtold, atof convert string to" "double-precision number" "strtod," strtod(3C)
.xx "mrand48, jrand48, srand48, seed48,/" "" "drand48, erand48, lrand48, nrand48," "" drand48(3C)
.xx "" "channels protocol used by xt" "driver" "xtproto multiplexed" xtproto(5)
.xx "object file" "" "dump dump selected parts of an" "" dump(1)
.xx "file" "dump" "dump selected parts of an object" "" dump(1)
.xx "descriptor" "" "dup duplicate an open file" "" dup(2)
.xx "descriptor" "" "dup2 duplicate an open file" "" dup2(3C)
.xx "" "dup" "duplicate an open file descriptor" "" dup(2)
.xx "" "dup2" "duplicate an open file descriptor" "" dup2(3C)
.xx "" "ldd list" "dynamic dependencies" "" ldd(1)
.xx "gcvtl convert floating-point/" "" "ecvt, ecvtl, fcvt, fcvtl, gcvt," "" ecvt(3C)
.xx "convert floating-point/" "ecvt," "ecvtl, fcvt, fcvtl, gcvt, gcvtl" "" ecvt(3C)
.xx "" "end, etext," "edata last locations in program" "" end(3C)
.xx "" "sact print current SCCS file" "editing activity" "" sact(1)
.xx "" "ld link" "editor for object files" "" ld(1)
.xx "" "effective user, real group, and" "effective group IDs" "/get real user," getuid(2)
.xx "" "/getgid, getegid get real user," "effective user, real group, and/" "" getuid(2)
.xx "" "new process in a virtual memory" "efficient way" "vfork spawn" vfork(2)
.xx "" "insque, remque insert/remove" "element from a queue" "" insque(3C)
.xx "" "basename return the last" "element of a path name" "" basename(3G)
.xx "" "elf_update update an" "ELF descriptor" "" elf_update(3E)
.xx "files" "a.out" "ELF (Executable and Linking Format)" "" a.out(4)
.xx "versions" "elf_version coordinate" "ELF library and application" "" elf_version(3E)
.xx "" "" "elf object file access library" "" elf(3E)
.xx "" "cof2elf COFF to" "ELF object file translation" "" cof2elf(1)
.xx "object file type" "elf_fsize:" "elf32_fsize return the size of an" "" elf_fsize(3E)
.xx "retrieve/" "elf_getehdr:" "elf32_getehdr, elf32_newehdr" "" elf_getehdr(3E)
.xx "retrieve/" "elf_getphdr:" "elf32_getphdr, elf32_newphdr" "" elf_getphdr(3E)
.xx "class-dependent/" "elf_getshdr:" "elf32_getshdr retrieve" "" elf_getshdr(3E)
.xx "" "elf_getehdr: elf32_getehdr," "elf32_newehdr retrieve/" "" elf_getehdr(3E)
.xx "" "elf_getphdr: elf32_getphdr," "elf32_newphdr retrieve/" "" elf_getphdr(3E)
.xx "class-dependent data/" "elf_xlate:" "elf32_xlatetof, elf32_xlatetom" "" elf_xlate(3E)
.xx "" "elf_xlate: elf32_xlatetof," "elf32_xlatetom class-dependent data/" "" elf_xlate(3E)
.xx "" "" "elf_begin make a file descriptor" "" elf_begin(3E)
.xx "" "" "elf_cntl control a file descriptor" "" elf_cntl(3E)
.xx "" "" "elf_end finish using an object file" "" elf_end(3E)
.xx "handling" "" "elf_errmsg, elf_errno error" "" elf_errmsg(3E)
.xx "" "elf_errmsg," "elf_errno error handling" "" elf_errmsg(3E)
.xx "" "" "elf_fill set fill byte" "" elf_fill(3E)
.xx "elf_flagelf, elf_flagphdr,/" "" "elf_flagdata, elf_flagehdr," "" elf_flagdata(3E)
.xx "elf_flagphdr,/" "elf_flagdata," "elf_flagehdr, elf_flagelf," "" elf_flagdata(3E)
.xx "" "elf_flagdata, elf_flagehdr," "elf_flagelf, elf_flagphdr,/" "" elf_flagdata(3E)
.xx "" "/elf_flagehdr, elf_flagelf," "elf_flagphdr, elf_flagscn,/" "" elf_flagdata(3E)
.xx "" "/elf_flagelf, elf_flagphdr," "elf_flagscn, elf_flagshdr/" "" elf_flagdata(3E)
.xx "" "/elf_flagphdr, elf_flagscn," "elf_flagshdr manipulate flags" "" elf_flagdata(3E)
.xx "size of an object file type" "" "elf_fsize: elf32_fsize return the" "" elf_fsize(3E)
.xx "member header" "" "elf_getarhdr retrieve archive" "" elf_getarhdr(3E)
.xx "symbol table" "" "elf_getarsym retrieve archive" "" elf_getarsym(3E)
.xx "an object file" "" "elf_getbase get the base offset for" "" elf_getbase(3E)
.xx "elf_rawdata get section data" "" "elf_getdata, elf_newdata," "" elf_getdata(3E)
.xx "elf32_newehdr retrieve/" "" "elf_getehdr: elf32_getehdr," "" elf_getehdr(3E)
.xx "identification data" "" "elf_getident retrieve file" "" elf_getident(3E)
.xx "elf32_newphdr retrieve/" "" "elf_getphdr: elf32_getphdr," "" elf_getphdr(3E)
.xx "elf_nextscn get section/" "" "elf_getscn, elf_ndxscn, elf_newscn," "" elf_getscn(3E)
.xx "class-dependent section header" "" "elf_getshdr: elf32_getshdr retrieve" "" elf_getshdr(3E)
.xx "" "" "elf_hash compute hash value" "" elf_hash(3E)
.xx "" "" "elf_kind determine file type" "" elf_kind(3E)
.xx "get section/" "elf_getscn," "elf_ndxscn, elf_newscn, elf_nextscn" "" elf_getscn(3E)
.xx "section data" "elf_getdata," "elf_newdata, elf_rawdata get" "" elf_getdata(3E)
.xx "" "elf_getscn, elf_ndxscn," "elf_newscn, elf_nextscn get section/" "" elf_getscn(3E)
.xx "access" "" "elf_next sequential archive member" "" elf_next(3E)
.xx "" "elf_getscn, elf_ndxscn, elf_newscn," "elf_nextscn get section information" "" elf_getscn(3E)
.xx "access" "" "elf_rand random archive member" "" elf_rand(3E)
.xx "" "elf_getdata, elf_newdata," "elf_rawdata get section data" "" elf_getdata(3E)
.xx "file contents" "" "elf_rawfile retrieve uninterpreted" "" elf_rawfile(3E)
.xx "" "" "elf_strptr make a string pointer" "" elf_strptr(3E)
.xx "" "" "elf_update update an ELF descriptor" "" elf_update(3E)
.xx "and application versions" "" "elf_version coordinate ELF library" "" elf_version(3E)
.xx "elf32_xlatetom class-dependent/" "" "elf_xlate: elf32_xlatetof," "" elf_xlate(3E)
.xx "" "x286emul" "emulate XENIX 80286" "" x286emul(1)
.xx "accounting" "acct" "enable or disable process" "" acct(2)
.xx "" "crypt, setkey," "encrypt generate encryption" "" crypt(3C)
.xx "" "whether a character buffer is" "encrypted" "isencrypt determine" isencrypt(3G)
.xx "" "crypt, setkey, encrypt generate" "encryption" "" crypt(3C)
.xx "" "crypt password and file" "encryption functions" "" crypt(3X)
.xx "program" "" "end, etext, edata last locations in" "" end(3C)
.xx "" "/getgrgid, getgrnam\^, setgrent," "endgrent, fgetgrent get group file/" "" getgrent(3C)
.xx "" "/getpwuid, getpwnam, setpwent," "endpwent, fgetpwent manipulate/" "" getpwent(3C)
.xx "" "getspent, getspnam\^, setspent," "endspent, fgetspent, lckpwdf,/" "" getspent(3C)
.xx "" "/getutline, pututline, setutent," "endutent, utmpname access utmp file/" "" getut(3C)
.xx "" "/getutxline, pututxline, setutxent," "endutxent, utmpxname, getutmp,/" "" getutx(3C)
.xx "" "getdents read directory" "entries and put in a file system/" "" getdents(2)
.xx "" "nlist get" "entries from name list" "" nlist(3E)
.xx "" "utmp, wtmp utmp and wtmp" "entry formats" "" utmp(4)
.xx "" "utmpx, wtmpx utmpx and wtmpx" "entry formats" "" utmpx(4)
.xx "" "endgrent, fgetgrent get group file" "entry" "/getgrnam\^, setgrent," getgrent(3C)
.xx "" "getmntany get mnttab file" "entry" "getmntent," getmntent(3C)
.xx "" "fgetpwent manipulate password file" "entry" "/setpwent, endpwent," getpwent(3C)
.xx "" "manipulate shadow password file" "entry" "/fgetspent, lckpwdf, ulckpwdf" getspent(3C)
.xx "" "endutent, utmpname access utmp file" "entry" "/pututline, setutent," getut(3C)
.xx "" "updwtmp, updwtmpx access utmpx file" "entry" "/getutmp, getutmpx," getutx(3C)
.xx "" "getvfsany get vfstab file" "entry" "/getvfsfile, getvfsspec," getvfsent(3C)
.xx "" "putpwent write password file" "entry" "" putpwent(3C)
.xx "" "putspent write shadow password file" "entry" "" putspent(3C)
.xx "" "unlink remove directory" "entry" "" unlink(2)
.xx "" "" "environ user environment" "" environ(5)
.xx "" "fpsetsticky IEEE floating-point" "environment control" "/fpgetsticky," fpgetround(3C)
.xx "" "environ user" "environment" "" environ(5)
.xx "" "getenv return value for" "environment name" "" getenv(3C)
.xx "" "putenv change or add value to" "environment" "" putenv(3C)
.xx "jrand48, srand48, seed48,/" "drand48," "erand48, lrand48, nrand48, mrand48," "" drand48(3C)
.xx "complementary error function" "" "erf, erfc error function and" "" erf(3M)
.xx "complementary error function" "erf," "erfc error function and" "" erf(3M)
.xx "error function" "erf, erfc" "error function and complementary" "" erf(3M)
.xx "" "error function and complementary" "error function" "erf, erfc" erf(3M)
.xx "" "elf_errmsg, elf_errno" "error handling" "" elf_errmsg(3E)
.xx "" "strerror get" "error message string" "" strerror(3C)
.xx "" "perror print system" "error messages" "" perror(3C)
.xx "" "introduction to system calls and" "error numbers" "intro" intro(2)
.xx "" "matherr" "error-handling function" "" matherr(3M)
.xx "" "strings, compressing or expanding" "escape codes" "/strcadd, strecpy copy" strccpy(3G)
.xx "program" "end," "etext, edata last locations in" "" end(3C)
.xx "" "hypot" "Euclidean distance function" "" hypot(3M)
.xx "" "cscope interactively" "examine a C program" "" cscope(1)
.xx "" "sigprocmask change or" "examine signal mask" "" sigprocmask(2)
.xx "and pending" "sigpending" "examine signals that are blocked" "" sigpending(2)
.xx "execlp, execvp execute a file" "" "exec: execl, execv, execle, execve," "" exec(2)
.xx "execlp, execvp execute a/" "exec:" "execl, execv, execle, execve," "" exec(2)
.xx "execute a file" "exec: execl, execv," "execle, execve, execlp, execvp" "" exec(2)
.xx "" "exec: execl, execv, execle, execve," "execlp, execvp execute a file" "" exec(2)
.xx "files" "a.out ELF" "(Executable and Linking Format)" "" a.out(4)
.xx "" "execle, execve, execlp, execvp" "execute a file" "exec: execl, execv," exec(2)
.xx "" "regcmp, regex compile and" "execute regular expression" "" regcmp(3G)
.xx "" "lprof display line-by-line" "execution count profile data" "" lprof(1)
.xx "" "sleep suspend" "execution for interval" "" sleep(3C)
.xx "" "monitor prepare" "execution profile" "" monitor(3C)
.xx "" "profil" "execution time profile" "" profil(2)
.xx "execvp execute a file" "exec: execl," "execv, execle, execve, execlp," "" exec(2)
.xx "file" "exec: execl, execv, execle," "execve, execlp, execvp execute a" "" exec(2)
.xx "" "execv, execle, execve, execlp," "execvp execute a file" "exec: execl," exec(2)
.xx "" "create a new file or rewrite an" "existing one" "creat" creat(2)
.xx "" "" "exit, _exit terminate process" "" exit(2)
.xx "" "exit," "_exit terminate process" "" exit(2)
.xx "log10f, pow, powf, sqrt, sqrtf/" "" "exp, expf, cbrt, log, logf, log10," "" exp(3M)
.xx "" "copy strings, compressing or" "expanding escape codes" "/strecpy" strccpy(3G)
.xx "log10f, pow, powf, sqrt,/" "exp," "expf, cbrt, log, logf, log10," "" exp(3M)
.xx "" "/log10f, pow, powf, sqrt, sqrtf" "exponential, logarithm, power,/" "" exp(3M)
.xx "" "/compile, step, advance regular" "expression compile and match/" "" regexp(5)
.xx "" "/compile, step, advance regular" "expression compile and match/" "" regexpr(3G)
.xx "" "regcmp regular" "expression compile" "" regcmp(1)
.xx "" "regex compile and execute regular" "expression" "regcmp," regcmp(3G)
.xx "" "/ceil, ceilf, copysign, fmod, fmodf," "fabs, fabsf, rint, remainder floor,/" "" floor(3M)
.xx "" "/ceilf, copysign, fmod, fmodf, fabs," "fabsf, rint, remainder floor,/" "" floor(3M)
.xx "" "data in a machine-independent" "fashion" "/sgetl access long integer" sputl(3X)
.xx "" "chdir," "fchdir change working directory" "" chdir(2)
.xx "" "chmod," "fchmod change mode of file" "" chmod(2)
.xx "file" "chown, lchown," "fchown change owner and group of a" "" chown(2)
.xx "stream" "" "fclose, fflush close or flush a" "" fclose(3S)
.xx "" "" "fcntl file control" "" fcntl(2)
.xx "" "" "fcntl file control options" "" fcntl(5)
.xx "floating-point number/" "ecvt, ecvtl," "fcvt, fcvtl, gcvt, gcvtl convert" "" ecvt(3C)
.xx "floating-point/" "ecvt, ecvtl, fcvt," "fcvtl, gcvt, gcvtl convert" "" ecvt(3C)
.xx "" "fopen, freopen," "fdopen open a stream" "" fopen(3S)
.xx "status inquiries" "ferror," "feof, clearerr, fileno stream" "" ferror(3S)
.xx "stream status inquiries" "" "ferror, feof, clearerr, fileno" "" ferror(3S)
.xx "" "fclose," "fflush close or flush a stream" "" fclose(3S)
.xx "" "" "ffs find first set bit" "" ffs(3C)
.xx "from a stream" "getc, getchar," "fgetc, getw get character or word" "" getc(3S)
.xx "" "/getgrnam\^, setgrent, endgrent," "fgetgrent get group file entry" "" getgrent(3C)
.xx "in a stream" "fsetpos," "fgetpos reposition a file pointer" "" fsetpos(3C)
.xx "" "/getpwnam, setpwent, endpwent," "fgetpwent manipulate password file/" "" getpwent(3C)
.xx "" "gets," "fgets get a string from a stream" "" gets(3S)
.xx "" "/getspnam\^, setspent, endspent," "fgetspent, lckpwdf, ulckpwdf/" "" getspent(3C)
.xx "" "bufsplit split buffer into" "fields" "" bufsplit(3G)
.xx "" "mkfifo create a new" "FIFO" "" mkfifo(3C)
.xx "" "utime set" "file access and modification times" "" utime(2)
.xx "" "elf object" "file access library" "" elf(3E)
.xx "" "access determine accessibility of a" "file" "" access(2)
.xx "" "chmod, fchmod change mode of" "file" "" chmod(2)
.xx "" "fchown change owner and group of a" "file" "chown, lchown," chown(2)
.xx "" "elf_rawfile retrieve uninterpreted" "file contents" "" elf_rawfile(3E)
.xx "" "fcntl" "file control" "" fcntl(2)
.xx "" "fcntl" "file control options" "" fcntl(5)
.xx "" "core core image" "file" "" core(4)
.xx "" "umask set and get" "file creation mask" "" umask(2)
.xx "" "make a delta (change) to an SCCS" "file" "delta" delta(1)
.xx "" "close close a" "file descriptor" "" close(2)
.xx "" "dup duplicate an open" "file descriptor" "" dup(2)
.xx "" "dup2 duplicate an open" "file descriptor" "" dup2(3C)
.xx "" "elf_begin make a" "file descriptor" "" elf_begin(3E)
.xx "" "elf_cntl control a" "file descriptor" "" elf_cntl(3E)
.xx "" "dump selected parts of an object" "file" "dump" dump(1)
.xx "" "sact print current SCCS" "file editing activity" "" sact(1)
.xx "" "elf_end finish using an object" "file" "" elf_end(3E)
.xx "" "get the base offset for an object" "file" "elf_getbase" elf_getbase(3E)
.xx "" "crypt password and" "file encryption functions" "" crypt(3X)
.xx "" "endgrent, fgetgrent get group" "file entry" "/getgrnam\^, setgrent," getgrent(3C)
.xx "" "getmntent, getmntany get mnttab" "file entry" "" getmntent(3C)
.xx "" "fgetpwent manipulate password" "file entry" "/setpwent, endpwent," getpwent(3C)
.xx "" "ulckpwdf manipulate shadow password" "file entry" "/fgetspent, lckpwdf," getspent(3C)
.xx "" "endutent, utmpname access utmp" "file entry" "/pututline, setutent," getut(3C)
.xx "" "updwtmp, updwtmpx access utmpx" "file entry" "/getutmp, getutmpx," getutx(3C)
.xx "" "getvfsspec, getvfsany get vfstab" "file entry" "getvfsent, getvfsfile," getvfsent(3C)
.xx "" "putpwent write password" "file entry" "" putpwent(3C)
.xx "" "putspent write shadow password" "file entry" "" putspent(3C)
.xx "" "execve, execlp, execvp execute a" "file" "exec: execl, execv, execle," exec(2)
.xx "constants" "limits header" "file for implementation-specific" "" limits(4)
.xx "" "ar archive" "file format" "" ar(4)
.xx "" "intro introduction to" "file formats" "" intro(4)
.xx "" "get get a version of an SCCS" "file" "" get(1)
.xx "" "retrieve class-dependent object" "file header" "/elf32_newehdr" elf_getehdr(3E)
.xx "" "elf_getident retrieve" "file identification data" "" elf_getident(3E)
.xx "" "pathfind search for named" "file in named directories" "" pathfind(3G)
.xx "" "copylist copy a" "file into memory" "" copylist(3G)
.xx "" "link link to a" "file" "" link(2)
.xx "" "the comment section of an object" "file" "mcs manipulate" mcs(1)
.xx "" "directory, or a special or ordinary" "file" "mknod make a" mknod(2)
.xx "" "ctermid generate" "file name for terminal" "" ctermid(3S)
.xx "" "mktemp make a unique" "file name" "" mktemp(3C)
.xx "" "realpath returns the real" "file name" "" realpath(3C)
.xx "" "nm print name list of an object" "file" "" nm(1)
.xx "" "ttyslot find the slot in the utmp" "file of the current user" "" ttyslot(3C)
.xx "" "creat create a new" "file or rewrite an existing one" "" creat(2)
.xx "" "the parent directory name of a" "file path name" "dirname report" dirname(3G)
.xx "" "fseek, rewind, ftell reposition a" "file pointer in a stream" "" fseek(3S)
.xx "" "fsetpos, fgetpos reposition a" "file pointer in a stream" "" fsetpos(3C)
.xx "" "lseek move read/write" "file pointer" "" lseek(2)
.xx "" "prs print an SCCS" "file" "" prs(1)
.xx "" "read read from" "file" "" read(2)
.xx "" "remove remove" "file" "" remove(3C)
.xx "" "rename change the name of a" "file" "" rename(2)
.xx "" "rmdel remove a delta from an SCCS" "file" "" rmdel(1)
.xx "" "compare two versions of an SCCS" "file" "sccsdiff" sccsdiff(1)
.xx "" "sccsfile format of SCCS" "file" "" sccsfile(4)
.xx "" "stat, lstat, fstat get" "file status" "" stat(2)
.xx "" "number information from an object" "file" "/table, debugging and line" strip(1)
.xx "" "symlink make a symbolic link to a" "file" "" symlink(2)
.xx "" "/read directory entries and put in a" "file system independent format" "" getdents(2)
.xx "" "statvfs, fstatvfs get" "file system information" "" statvfs(2)
.xx "" "mount mount a" "file system" "" mount(2)
.xx "" "ustat get" "file system statistics" "" ustat(2)
.xx "" "sysfs get" "file system type information" "" sysfs(2)
.xx "" "umount unmount a" "file system" "" umount(2)
.xx "" "tmpfile create a temporary" "file" "" tmpfile(3S)
.xx "" "create a name for a temporary" "file" "tmpnam, tempnam" tmpnam(3S)
.xx "" "truncate, ftruncate set a" "file to a specified length" "" truncate(3C)
.xx "" "cof2elf COFF to ELF object" "file translation" "" cof2elf(1)
.xx "" "ftw, nftw walk a" "file tree" "" ftw(3C)
.xx "" "return the size of an object" "file type" "elf_fsize: elf32_fsize" elf_fsize(3E)
.xx "" "elf_kind determine" "file type" "" elf_kind(3E)
.xx "" "undo a previous get of an SCCS" "file" "unget" unget(1)
.xx "" "val validate an SCCS" "file" "" val(1)
.xx "" "write, writev write on a" "file" "" write(2)
.xx "" "ferror, feof, clearerr," "fileno stream status inquiries" "" ferror(3S)
.xx "" "admin create and administer SCCS" "files" "" admin(1)
.xx "" "ELF (Executable and Linking Format)" "files" "a.out" a.out(4)
.xx "the physical/" "fsync synchronize a" "file's in-memory state with that on" "" fsync(2)
.xx "" "ld link editor for object" "files" "" ld(1)
.xx "" "lockf record locking on" "files" "" lockf(3C)
.xx "" "section sizes in bytes of object" "files" "size print" size(1)
.xx "" "convert convert archive" "files to common formats" "" convert(1)
.xx "" "elf_fill set" "fill byte" "" elf_fill(3E)
.xx "" "ffs" "find first set bit" "" ffs(3C)
.xx "" "ttyname, isatty" "find name of a terminal" "" ttyname(3C)
.xx "object library" "lorder" "find ordering relation for an" "" lorder(1)
.xx "the current user" "ttyslot" "find the slot in the utmp file of" "" ttyslot(3C)
.xx "" "elf_end" "finish using an object file" "" elf_end(3E)
.xx "" "isnan, isnand, isnanf, isnanl," "finite, finitel, fpclass, fpclassl,/" "" isnan(3C)
.xx "" "isnand, isnanf, isnanl, finite," "finitel, fpclass, fpclassl,/" "isnan," isnan(3C)
.xx "" "elf_flagshdr manipulate" "flags" "/elf_flagphdr, elf_flagscn," elf_flagdata(3E)
.xx "" "/fpgetsticky, fpsetsticky IEEE" "floating-point environment control" "" fpgetround(3C)
.xx "" "unorderedl determine type of" "floating-point number" "/unordered," isnan(3C)
.xx "" "/fcvt, fcvtl, gcvt, gcvtl convert" "floating-point number to string" "" ecvt(3C)
.xx "" "scalb, scalbl manipulate parts of" "floating-point numbers" "/nextafter," frexp(3C)
.xx "" "/fmodf, fabs, fabsf, rint, remainder" "floor, ceiling, remainder, absolute/" "" floor(3M)
.xx "copysign, fmod, fmodf, fabs,/" "" "floor, floorf, ceil, ceilf," "" floor(3M)
.xx "fmod, fmodf, fabs, fabsf,/" "floor," "floorf, ceil, ceilf, copysign," "" floor(3M)
.xx "" "cflow generate C" "flowgraph" "" cflow(1)
.xx "" "fclose, fflush close or" "flush a stream" "" fclose(3S)
.xx "" "/floorf, ceil, ceilf, copysign," "fmod, fmodf, fabs, fabsf, rint,/" "" floor(3M)
.xx "" "/ceil, ceilf, copysign, fmod," "fmodf, fabs, fabsf, rint, remainder/" "" floor(3M)
.xx "" "for an application for use with" "fmtmsg" "/a list of severity levels" addseverity(3C)
.xx "or system console" "" "fmtmsg display a message on stderr" "" fmtmsg(3C)
.xx "stream" "" "fopen, freopen, fdopen open a" "" fopen(3S)
.xx "" "tcsetpgrp set terminal" "foreground process group id" "" tcsetpgrp(3C)
.xx "" "" "fork create a new process" "" fork(2)
.xx "" "ar archive file" "format" "" ar(4)
.xx "" "getdate convert user" "format date and time" "" getdate(3C)
.xx "" "a.out ELF (Executable and Linking" "Format) files" "" a.out(4)
.xx "" "put in a file system independent" "format" "/read directory entries and" getdents(2)
.xx "" "sccsfile" "format of SCCS file" "" sccsfile(4)
.xx "" "convert archive files to common" "formats" "convert" convert(1)
.xx "" "intro introduction to file" "formats" "" intro(4)
.xx "" "utmp, wtmp utmp and wtmp entry" "formats" "" utmp(4)
.xx "" "utmpx, wtmpx utmpx and wtmpx entry" "formats" "" utmpx(4)
.xx "" "scanf, fscanf, sscanf convert" "formatted input" "" scanf(3S)
.xx "" "vprintf, vfprintf, vsprintf print" "formatted output of a variable/" "" vprintf(3S)
.xx "" "printf, fprintf, sprintf print" "formatted output" "" printf(3S)
.xx "" "localeconv get numeric" "formatting information" "" localeconv(3C)
.xx "configurable pathname variables" "" "fpathconf, pathconf get" "" fpathconf(2)
.xx "" "/isnanf, isnanl, finite, finitel," "fpclass, fpclassl, unordered,/" "" isnan(3C)
.xx "" "/isnanl, finite, finitel, fpclass," "fpclassl, unordered, unorderedl/" "" isnan(3C)
.xx "" "fpgetround, fpsetround," "fpgetmask, fpsetmask, fpgetsticky,/" "" fpgetround(3C)
.xx "fpsetmask, fpgetsticky,/" "" "fpgetround, fpsetround, fpgetmask," "" fpgetround(3C)
.xx "" "/fpsetround, fpgetmask, fpsetmask," "fpgetsticky, fpsetsticky IEEE/" "" fpgetround(3C)
.xx "output" "printf," "fprintf, sprintf print formatted" "" printf(3S)
.xx "" "fpgetround, fpsetround, fpgetmask," "fpsetmask, fpgetsticky, fpsetsticky/" "" fpgetround(3C)
.xx "fpgetsticky,/" "fpgetround," "fpsetround, fpgetmask, fpsetmask," "" fpgetround(3C)
.xx "" "/fpgetmask, fpsetmask, fpgetsticky," "fpsetsticky IEEE floating-point/" "" fpgetround(3C)
.xx "on a stream" "putc, putchar," "fputc, putw put character or word" "" putc(3S)
.xx "" "puts," "fputs put a string on a stream" "" puts(3S)
.xx "" "" "fread, fwrite binary input/output" "" fread(3S)
.xx "mallinfo memory allocator" "malloc," "free, realloc, calloc, mallopt," "" malloc(3X)
.xx "valloc, memory allocator" "malloc," "free, realloc, calloc, memalign," "" malloc(3C)
.xx "" "fopen," "freopen, fdopen open a stream" "" fopen(3S)
.xx "modf, modff, modfl, nextafter,/" "" "frexp, frexpl, ldexp, ldexpl, logb," "" frexp(3C)
.xx "modff, modfl, nextafter,/" "frexp," "frexpl, ldexp, ldexpl, logb, modf," "" frexp(3C)
.xx "input" "scanf," "fscanf, sscanf convert formatted" "" scanf(3S)
.xx "file pointer in a stream" "" "fseek, rewind, ftell reposition a" "" fseek(3S)
.xx "pointer in a stream" "" "fsetpos, fgetpos reposition a file" "" fsetpos(3C)
.xx "" "stat, lstat," "fstat get file status" "" stat(2)
.xx "information" "statvfs," "fstatvfs get file system" "" statvfs(2)
.xx "in-memory state with that on the/" "" "fsync synchronize a file's" "" fsync(2)
.xx "a stream" "fseek, rewind," "ftell reposition a file pointer in" "" fseek(3S)
.xx "communication package" "stdipc:" "ftok standard interprocess" "" stdipc(3C)
.xx "length" "truncate," "ftruncate set a file to a specified" "" truncate(3C)
.xx "" "" "ftw, nftw walk a file tree" "" ftw(3C)
.xx "function" "erf, erfc error" "function and complementary error" "" erf(3M)
.xx "" "function and complementary error" "function" "erf, erfc error" erf(3M)
.xx "" "gamma, lgamma log gamma" "function" "" gamma(3M)
.xx "" "hypot Euclidean distance" "function" "" hypot(3M)
.xx "" "libwindows windowing terminal" "function library" "" libwindows(3X)
.xx "" "matherr error-handling" "function" "" matherr(3M)
.xx "" "prof profile within a" "function" "" prof(5)
.xx "" "math math" "functions and constants" "" math(5)
.xx "" "intro introduction to" "functions and libraries" "" intro(3)
.xx "" "j0, j1, jn, y0, y1, yn Bessel" "functions" "bessel:" bessel(3M)
.xx "" "crypt password and file encryption" "functions" "" crypt(3X)
.xx "" "logarithm, power, square root" "functions" "/sqrt, sqrtf exponential," exp(3M)
.xx "" "ceiling, remainder, absolute value" "functions" "/rint, remainder floor," floor(3M)
.xx "" "mbstowcs, wcstombs multibyte string" "functions" "mbstring:" mbstring(3C)
.xx "" "asinh, acosh, atanh hyperbolic" "functions" "/coshf, tanh, tanhf," sinh(3M)
.xx "" "sysi86 machine specific" "functions" "" sysi86(2)
.xx "" "atanf, atan2, atan2f trigonometric" "functions" "/acos, acosf, atan," trig(3M)
.xx "" "fread," "fwrite binary input/output" "" fread(3S)
.xx "" "gamma, lgamma log" "gamma function" "" gamma(3M)
.xx "" "" "gamma, lgamma log gamma function" "" gamma(3M)
.xx "number/" "ecvt, ecvtl, fcvt, fcvtl," "gcvt, gcvtl convert floating-point" "" ecvt(3C)
.xx "to/" "ecvt, ecvtl, fcvt, fcvtl, gcvt," "gcvtl convert floating-point number" "" ecvt(3C)
.xx "" "/tcgetpgrp, tcsetpgrp, tcgetsid" "general terminal interface" "" termios(2)
.xx "control" "priocntlset" "generalized process scheduler" "" priocntlset(2)
.xx "signal" "abort" "generate an abnormal termination" "" abort(3C)
.xx "" "cflow" "generate C flowgraph" "" cflow(1)
.xx "" "cxref" "generate C program cross-reference" "" cxref(1)
.xx "" "crypt, setkey, encrypt" "generate encryption" "" crypt(3C)
.xx "" "ctermid" "generate file name for terminal" "" ctermid(3S)
.xx "lexical tasks" "lex" "generate programs for simple" "" lex(1)
.xx "" "/jrand48, srand48, seed48, lcong48" "generate uniformly distributed/" "" drand48(3C)
.xx "" "siginfo signal" "generation information" "" siginfo(5)
.xx "" "rand, srand simple random-number" "generator" "" rand(3C)
.xx "character or word from a stream" "" "getc, getchar, fgetc, getw get" "" getc(3S)
.xx "or word from a stream" "getc," "getchar, fgetc, getw get character" "" getc(3S)
.xx "current user context" "" "getcontext, setcontext get and set" "" getcontext(2)
.xx "working directory" "" "getcwd get pathname of current" "" getcwd(3C)
.xx "and time" "" "getdate convert user format date" "" getdate(3C)
.xx "put in a file system independent/" "" "getdents read directory entries and" "" getdents(2)
.xx "user,/" "getuid, geteuid, getgid," "getegid get real user, effective" "" getuid(2)
.xx "name" "" "getenv return value for environment" "" getenv(3C)
.xx "user, effective user, real/" "getuid," "geteuid, getgid, getegid get real" "" getuid(2)
.xx "effective user,/" "getuid, geteuid," "getgid, getegid get real user," "" getuid(2)
.xx "setgrent, endgrent, fgetgrent get/" "" "getgrent, getgrgid, getgrnam\^," "" getgrent(3C)
.xx "endgrent, fgetgrent get/" "getgrent," "getgrgid, getgrnam\^, setgrent," "" getgrent(3C)
.xx "fgetgrent get/" "getgrent, getgrgid," "getgrnam\^, setgrent, endgrent," "" getgrent(3C)
.xx "supplementary group access list/" "" "getgroups, setgroups get or set" "" getgroups(2)
.xx "of interval timer" "" "getitimer, setitimer get/set value" "" getitimer(3C)
.xx "" "" "getlogin get login name" "" getlogin(3C)
.xx "" "getmntent," "getmntany get mnttab file entry" "" getmntent(3C)
.xx "file entry" "" "getmntent, getmntany get mnttab" "" getmntent(3C)
.xx "stream" "" "getmsg get next message off a" "" getmsg(2)
.xx "argument vector" "" "getopt get option letter from" "" getopt(3C)
.xx "" "" "getpass read a password" "" getpass(3C)
.xx "and/" "getpid, getpgrp, getppid," "getpgid get process, process group," "" getpid(2)
.xx "process, process group,/" "getpid," "getpgrp, getppid, getpgid get" "" getpid(2)
.xx "get process, process group, and/" "" "getpid, getpgrp, getppid, getpgid" "" getpid(2)
.xx "process group,/" "getpid, getpgrp," "getppid, getpgid get process," "" getpid(2)
.xx "" "" "getpw get name from UID" "" getpw(3C)
.xx "setpwent, endpwent, fgetpwent/" "" "getpwent, getpwuid, getpwnam," "" getpwent(3C)
.xx "fgetpwent/" "getpwent, getpwuid," "getpwnam, setpwent, endpwent," "" getpwent(3C)
.xx "endpwent, fgetpwent/" "getpwent," "getpwuid, getpwnam, setpwent," "" getpwent(3C)
.xx "maximum system resource/" "" "getrlimit, setrlimit control" "" getrlimit(2)
.xx "stream" "" "gets, fgets get a string from a" "" gets(3S)
.xx "" "getitimer, setitimer" "get/set value of interval timer" "" getitimer(3C)
.xx "" "" "getsid get session ID" "" getsid(2)
.xx "endspent, fgetspent, lckpwdf,/" "" "getspent, getspnam\^, setspent," "" getspent(3C)
.xx "fgetspent, lckpwdf,/" "getspent," "getspnam\^, setspent, endspent," "" getspent(3C)
.xx "string" "" "getsubopt parse suboptions from a" "" getsubopt(3C)
.xx "set the date and time" "" "gettimeofday, settimeofday get or" "" gettimeofday(3C)
.xx "" "" "gettxt retrieve a text string" "" gettxt(3C)
.xx "get real user, effective user,/" "" "getuid, geteuid, getgid, getegid" "" getuid(2)
.xx "getutline, pututline, setutent,/" "" "getut: getutent, getutid," "" getut(3C)
.xx "pututline, setutent,/" "getut:" "getutent, getutid, getutline," "" getut(3C)
.xx "setutent,/" "getut: getutent," "getutid, getutline, pututline," "" getut(3C)
.xx "" "getut: getutent, getutid," "getutline, pututline, setutent,/" "" getut(3C)
.xx "" "/setutxent, endutxent, utmpxname," "getutmp, getutmpx, updwtmp,/" "" getutx(3C)
.xx "" "/endutxent, utmpxname, getutmp," "getutmpx, updwtmp, updwtmpx access/" "" getutx(3C)
.xx "getutxline, pututxline, setutxent,/" "" "getutx: getutxent, getutxid," "" getutx(3C)
.xx "pututxline, setutxent,/" "getutx:" "getutxent, getutxid, getutxline," "" getutx(3C)
.xx "setutxent,/" "getutx: getutxent," "getutxid, getutxline, pututxline," "" getutx(3C)
.xx "" "getutx: getutxent, getutxid," "getutxline, pututxline, setutxent,/" "" getutx(3C)
.xx "" "getvfsent, getvfsfile, getvfsspec," "getvfsany get vfstab file entry" "" getvfsent(3C)
.xx "getvfsany get vfstab file entry" "" "getvfsent, getvfsfile, getvfsspec," "" getvfsent(3C)
.xx "get vfstab file entry" "getvfsent," "getvfsfile, getvfsspec, getvfsany" "" getvfsent(3C)
.xx "file entry" "getvfsent, getvfsfile," "getvfsspec, getvfsany get vfstab" "" getvfsent(3C)
.xx "stream" "getc, getchar, fgetc," "getw get character or word from a" "" getc(3S)
.xx "" "gmatch shell" "global pattern matching" "" gmatch(3G)
.xx "matching" "" "gmatch shell global pattern" "" gmatch(3G)
.xx "and time to/" "ctime, localtime," "gmtime, asctime, tzset convert date" "" ctime(3C)
.xx "" "setjmp, longjmp non-local" "goto" "" setjmp(3C)
.xx "" "sigsetjmp, siglongjmp a non-local" "goto with signal state" "" sigsetjmp(3C)
.xx "" "setgroups get or set supplementary" "group access list IDs" "getgroups," getgroups(2)
.xx "" "initialize the supplementary" "group access list" "initgroups" initgroups(3C)
.xx "" "/get real user, effective user, real" "group, and effective group IDs" "" getuid(2)
.xx "" "/getpgid get process, process" "group, and parent process IDs" "" getpid(2)
.xx "" "setgrent, endgrent, fgetgrent get" "group file entry" "/getgrnam\^," getgrent(3C)
.xx "" "setpgid set process" "group ID" "" setpgid(2)
.xx "" "setpgrp set process" "group ID" "" setpgrp(2)
.xx "" "set terminal foreground process" "group id" "tcsetpgrp" tcsetpgrp(3C)
.xx "" "user, real group, and effective" "group IDs" "/get real user, effective" getuid(2)
.xx "" "setuid, setgid set user and" "group IDs" "" setuid(2)
.xx "" "lchown, fchown change owner and" "group of a file" "chown," chown(2)
.xx "" "send a signal to a process or a" "group of processes" "kill" kill(2)
.xx "" "send a signal to a process or a" "group of processes" "/sigsendset" sigsend(2)
.xx "" "maintain, update, and regenerate" "groups of programs" "make" make(1)
.xx "" "ssignal," "gsignal software signals" "" ssignal(3C)
.xx "" "stdarg" "handle variable argument list" "" stdarg(5)
.xx "" "varargs" "handle variable argument list" "" varargs(5)
.xx "" "isprint, isgraph, isascii character" "handling" "/iscntrl, ispunct," ctype(3C)
.xx "" "elf_errmsg, elf_errno error" "handling" "" elf_errmsg(3E)
.xx "" "mblen, wctomb multibyte character" "handling" "mbchar: mbtowc," mbchar(3C)
.xx "" "hsearch, hcreate, hdestroy manage" "hash search tables" "" hsearch(3C)
.xx "" "elf_hash compute" "hash value" "" elf_hash(3E)
.xx "search tables" "hsearch," "hcreate, hdestroy manage hash" "" hsearch(3C)
.xx "" "hsearch, hcreate," "hdestroy manage hash search tables" "" hsearch(3C)
.xx "" "retrieve archive member" "header" "elf_getarhdr" elf_getarhdr(3E)
.xx "" "class-dependent object file" "header" "/elf32_newehdr retrieve" elf_getehdr(3E)
.xx "" "retrieve class-dependent section" "header" "elf_getshdr: elf32_getshdr" elf_getshdr(3E)
.xx "implementation-specific/" "limits" "header file for" "" limits(4)
.xx "" "retrieve class-dependent program" "header table" "/elf32_newphdr" elf_getphdr(3E)
.xx "numbers or SCCS commands" "" "help ask for help with message" "" help(1)
.xx "commands" "help ask for" "help with message numbers or SCCS" "" help(1)
.xx "" "layers protocol used between" "host and windowing terminal under/" "" layers(5)
.xx "" "jagent" "host control of windowing terminal" "" jagent(5)
.xx "hash search tables" "" "hsearch, hcreate, hdestroy manage" "" hsearch(3C)
.xx "" "tanh, tanhf, asinh, acosh, atanh" "hyperbolic functions" "/cosh, coshf," sinh(3M)
.xx "" "" "hypot Euclidean distance function" "" hypot(3M)
.xx "" "getsid get session" "ID" "" getsid(2)
.xx "" "setpgid set process group" "ID" "" setpgid(2)
.xx "" "setpgrp set process group" "ID" "" setpgrp(2)
.xx "" "setsid set session" "ID" "" setsid(2)
.xx "" "terminal foreground process group" "id" "tcsetpgrp set" tcsetpgrp(3C)
.xx "" "elf_getident retrieve file" "identification data" "" elf_getident(3E)
.xx "" "what print" "identification strings" "" what(1)
.xx "" "shmget get shared memory segment" "identifier" "" shmget(2)
.xx "" "set supplementary group access list" "IDs" "getgroups, setgroups get or" getgroups(2)
.xx "" "process group, and parent process" "IDs" "/getppid, getpgid get process," getpid(2)
.xx "" "real group, and effective group" "IDs" "/get real user, effective user," getuid(2)
.xx "" "setuid, setgid set user and group" "IDs" "" setuid(2)
.xx "" "/fpsetmask, fpgetsticky, fpsetsticky" "IEEE floating-point environment/" "" fpgetround(3C)
.xx "" "core core" "image file" "" core(4)
.xx "" "limits header file for" "implementation-specific constants" "" limits(4)
.xx "" "entries and put in a file system" "independent format" "/read directory" getdents(2)
.xx "" "langinfo language" "information constants" "" langinfo(5)
.xx "" "dlerror get diagnostic" "information" "" dlerror(3X)
.xx "" "elf_newscn, elf_nextscn get section" "information" "/elf_ndxscn," elf_getscn(3E)
.xx "" "/table, debugging and line number" "information from an object file" "" strip(1)
.xx "" "localeconv get numeric formatting" "information" "" localeconv(3C)
.xx "" "nl_langinfo language" "information" "" nl_langinfo(3C)
.xx "" "siginfo signal generation" "information" "" siginfo(5)
.xx "" "statvfs, fstatvfs get file system" "information" "" statvfs(2)
.xx "" "sysinfo get and set system" "information strings" "" sysinfo(2)
.xx "" "sysfs get file system type" "information" "" sysfs(2)
.xx "supplementary group access list" "" "initgroups initialize the" "" initgroups(3C)
.xx "access list" "initgroups" "initialize the supplementary group" "" initgroups(3C)
.xx "" "popen, pclose" "initiate pipe to/from a process" "" popen(3S)
.xx "" "fsync synchronize a file's" "in-memory state with that on the/" "" fsync(2)
.xx "" "fscanf, sscanf convert formatted" "input" "scanf," scanf(3S)
.xx "" "ungetc push character back onto" "input stream" "" ungetc(3S)
.xx "" "fread, fwrite binary" "input/output" "" fread(3S)
.xx "" "poll" "input/output multiplexing" "" poll(2)
.xx "" "stdio standard buffered" "input/output package" "" stdio(3S)
.xx "" "clearerr, fileno stream status" "inquiries" "ferror, feof," ferror(3S)
.xx "" "insque, remque" "insert/remove element from a queue" "" insque(3C)
.xx "element from a queue" "" "insque, remque insert/remove" "" insque(3C)
.xx "process until signal" "sigsuspend" "install a signal mask and suspend" "" sigsuspend(2)
.xx "" "install" "install commands" "" install(1M)
.xx "" "" "install install commands" "" install(1M)
.xx "" "abs, labs return" "integer absolute value" "" abs(3C)
.xx "" "a64l, l64a convert between long" "integer and base-64 ASCII string" "" a64l(3C)
.xx "" "sputl, sgetl access long" "integer data in a/" "" sputl(3X)
.xx "" "atol, atoi convert string to" "integer" "strtol, strtoul," strtol(3C)
.xx "" "l3tol, ltol3 convert between 3-byte" "integers and long integers" "" l3tol(3C)
.xx "" "between 3-byte integers and long" "integers" "l3tol, ltol3 convert" l3tol(3C)
.xx "" "cscope" "interactively examine a C program" "" cscope(1)
.xx "" "tcgetsid general terminal" "interface" "/tcgetpgrp, tcsetpgrp," termios(2)
.xx "" "pipe create an" "interprocess channel" "" pipe(2)
.xx "" "stdipc: ftok standard" "interprocess communication package" "" stdipc(3C)
.xx "" "sleep suspend execution for" "interval" "" sleep(3C)
.xx "" "setitimer get/set value of" "interval timer" "getitimer," getitimer(3C)
.xx "" "" "intro introduction to file formats" "" intro(4)
.xx "libraries" "" "intro introduction to functions and" "" intro(3)
.xx "libraries" "" "intro introduction to math" "" intro(3M)
.xx "" "" "intro introduction to miscellany" "" intro(5)
.xx "commands" "" "intro introduction to programming" "" intro(1)
.xx "and error numbers" "" "intro introduction to system calls" "" intro(2)
.xx "" "intro" "introduction to file formats" "" intro(4)
.xx "libraries" "intro" "introduction to functions and" "" intro(3)
.xx "" "intro" "introduction to math libraries" "" intro(3M)
.xx "" "intro" "introduction to miscellany" "" intro(5)
.xx "commands" "intro" "introduction to programming" "" intro(1)
.xx "error numbers" "intro" "introduction to system calls and" "" intro(2)
.xx "" "" "ioctl control device" "" ioctl(2)
.xx "" "/islower, isupper, isalpha," "isalnum, isspace, iscntrl, ispunct,/" "" ctype(3C)
.xx "" "/isxdigit, islower, isupper," "isalpha, isalnum, isspace, iscntrl,/" "" ctype(3C)
.xx "" "/iscntrl, ispunct, isprint, isgraph," "isascii character handling" "" ctype(3C)
.xx "" "ttyname," "isatty find name of a terminal" "" ttyname(3C)
.xx "" "/isupper, isalpha, isalnum, isspace," "iscntrl, ispunct, isprint, isgraph,/" "" ctype(3C)
.xx "isupper, isalpha, isalnum,/" "ctype:" "isdigit, isxdigit, islower," "" ctype(3C)
.xx "character buffer is encrypted" "" "isencrypt determine whether a" "" isencrypt(3G)
.xx "" "/isspace, iscntrl, ispunct, isprint," "isgraph, isascii character handling" "" ctype(3C)
.xx "isspace,/" "ctype: isdigit, isxdigit," "islower, isupper, isalpha, isalnum," "" ctype(3C)
.xx "finite, finitel, fpclass,/" "" "isnan, isnand, isnanf, isnanl," "" isnan(3C)
.xx "finitel, fpclass, fpclassl,/" "isnan," "isnand, isnanf, isnanl, finite," "" isnan(3C)
.xx "fpclass, fpclassl,/" "isnan, isnand," "isnanf, isnanl, finite, finitel," "" isnan(3C)
.xx "fpclassl,/" "isnan, isnand, isnanf," "isnanl, finite, finitel, fpclass," "" isnan(3C)
.xx "" "/isalnum, isspace, iscntrl, ispunct," "isprint, isgraph, isascii character/" "" ctype(3C)
.xx "" "/isalpha, isalnum, isspace, iscntrl," "ispunct, isprint, isgraph, isascii/" "" ctype(3C)
.xx "" "/islower, isupper, isalpha, isalnum," "isspace, iscntrl, ispunct, isprint,/" "" ctype(3C)
.xx "" "system" "issue a shell command" "" system(3S)
.xx "" "ctype: isdigit, isxdigit, islower," "isupper, isalpha, isalnum, isspace,/" "" ctype(3C)
.xx "isalpha, isalnum,/" "ctype: isdigit," "isxdigit, islower, isupper," "" ctype(3C)
.xx "functions" "bessel:" "j0, j1, jn, y0, y1, yn Bessel" "" bessel(3M)
.xx "" "bessel: j0," "j1, jn, y0, y1, yn Bessel functions" "" bessel(3M)
.xx "terminal" "" "jagent host control of windowing" "" jagent(5)
.xx "" "bessel: j0, j1," "jn, y0, y1, yn Bessel functions" "" bessel(3M)
.xx "" "/erand48, lrand48, nrand48, mrand48," "jrand48, srand48, seed48, lcong48/" "" drand48(3C)
.xx "a group of processes" "" "kill send a signal to a process or" "" kill(2)
.xx "integers and long integers" "" "l3tol, ltol3 convert between 3-byte" "" l3tol(3C)
.xx "and base-64 ASCII string" "a64l," "l64a convert between long integer" "" a64l(3C)
.xx "" "abs," "labs return integer absolute value" "" abs(3C)
.xx "constants" "" "langinfo language information" "" langinfo(5)
.xx "" "nl_types native" "language data types" "" nl_types(5)
.xx "" "langinfo" "language information constants" "" langinfo(5)
.xx "" "nl_langinfo" "language information" "" nl_langinfo(3C)
.xx "" "strftime" "language specific strings" "" strftime(4)
.xx "and windowing terminal under/" "" "layers protocol used between host" "" layers(5)
.xx "" "host and windowing terminal under" "layers(1)" "/protocol used between" layers(5)
.xx "group of a file" "chown," "lchown, fchown change owner and" "" chown(2)
.xx "" "/setspent, endspent, fgetspent," "lckpwdf, ulckpwdf manipulate shadow/" "" getspent(3C)
.xx "" "/mrand48, jrand48, srand48, seed48," "lcong48 generate uniformly/" "" drand48(3C)
.xx "" "" "ld link editor for object files" "" ld(1)
.xx "" "" "ldd list dynamic dependencies" "" ldd(1)
.xx "modfl, nextafter,/" "frexp, frexpl," "ldexp, ldexpl, logb, modf, modff," "" frexp(3C)
.xx "nextafter,/" "frexp, frexpl, ldexp," "ldexpl, logb, modf, modff, modfl," "" frexp(3C)
.xx "remainder" "div," "ldiv compute the quotient and" "" div(3C)
.xx "" "ftruncate set a file to a specified" "length" "truncate," truncate(3C)
.xx "" "getopt get option" "letter from argument vector" "" getopt(3C)
.xx "with/" "/build a list of severity" "levels for an application for use" "" addseverity(3C)
.xx "lexical tasks" "" "lex generate programs for simple" "" lex(1)
.xx "" "lex generate programs for simple" "lexical tasks" "" lex(1)
.xx "" "lsearch," "lfind linear search and update" "" lsearch(3C)
.xx "" "gamma," "lgamma log gamma function" "" gamma(3M)
.xx "" "intro introduction to functions and" "libraries" "" intro(3)
.xx "" "intro introduction to math" "libraries" "" intro(3M)
.xx "" "elf_version coordinate ELF" "library and application versions" "" elf_version(3E)
.xx "" "ar maintain portable archive or" "library" "" ar(1)
.xx "" "elf object file access" "library" "" elf(3E)
.xx "" "windowing terminal function" "library" "libwindows" libwindows(3X)
.xx "" "ordering relation for an object" "library" "lorder find" lorder(1)
.xx "function library" "" "libwindows windowing terminal" "" libwindows(3X)
.xx "implementation-specific constants" "" "limits header file for" "" limits(4)
.xx "" "ulimit get and set user" "limits" "" ulimit(2)
.xx "" "/strip symbol table, debugging and" "line number information from an/" "" strip(1)
.xx "" "lsearch, lfind" "linear search and update" "" lsearch(3C)
.xx "profile data" "lprof display" "line-by-line execution count" "" lprof(1)
.xx "" "ld" "link editor for object files" "" ld(1)
.xx "" "" "link link to a file" "" link(2)
.xx "" "read the value of a symbolic" "link" "readlink" readlink(2)
.xx "" "link" "link to a file" "" link(2)
.xx "" "symlink make a symbolic" "link to a file" "" symlink(2)
.xx "" "a.out ELF (Executable and" "Linking Format) files" "" a.out(4)
.xx "" "" "lint a C program checker" "" lint(1)
.xx "" "ldd" "list dynamic dependencies" "" ldd(1)
.xx "" "or set supplementary group access" "list IDs" "getgroups, setgroups get" getgroups(2)
.xx "" "the supplementary group access" "list" "initgroups initialize" initgroups(3C)
.xx "" "nlist get entries from name" "list" "" nlist(3E)
.xx "" "nm print name" "list of an object file" "" nm(1)
.xx "application/" "addseverity build a" "list of severity levels for an" "" addseverity(3C)
.xx "" "stdarg handle variable argument" "list" "" stdarg(5)
.xx "" "varargs handle variable argument" "list" "" varargs(5)
.xx "" "output of a variable argument" "list" "/vsprintf print formatted" vprintf(3S)
.xx "" "modify and query a program's" "locale" "setlocale" setlocale(3C)
.xx "information" "" "localeconv get numeric formatting" "" localeconv(3C)
.xx "convert date and time to/" "ctime," "localtime, gmtime, asctime, tzset" "" ctime(3C)
.xx "" "end, etext, edata last" "locations in program" "" end(3C)
.xx "text, or data" "plock" "lock into memory or unlock process," "" plock(2)
.xx "" "mlockall, munlockall" "lock or unlock address space" "" mlockall(3C)
.xx "" "mlock, munlock" "lock (or unlock) pages in memory" "" mlock(3C)
.xx "" "" "lockf record locking on files" "" lockf(3C)
.xx "" "maillock manage" "lockfile for user's mailbox" "" maillock(3X)
.xx "" "lockf record" "locking on files" "" lockf(3C)
.xx "" "gamma, lgamma" "log gamma function" "" gamma(3M)
.xx "powf, sqrt, sqrtf/" "exp, expf, cbrt," "log, logf, log10, log10f, pow," "" exp(3M)
.xx "sqrtf/" "exp, expf, cbrt, log, logf," "log10, log10f, pow, powf, sqrt," "" exp(3M)
.xx "" "exp, expf, cbrt, log, logf, log10," "log10f, pow, powf, sqrt, sqrtf/" "" exp(3M)
.xx "" "/pow, powf, sqrt, sqrtf exponential," "logarithm, power, square root/" "" exp(3M)
.xx "" "frexp, frexpl, ldexp, ldexpl," "logb, modf, modff, modfl,/" "" frexp(3C)
.xx "sqrt, sqrtf/" "exp, expf, cbrt, log," "logf, log10, log10f, pow, powf," "" exp(3M)
.xx "" "getlogin get" "login name" "" getlogin(3C)
.xx "" "cuserid get character" "login name of the user" "" cuserid(3S)
.xx "" "setjmp," "longjmp non-local goto" "" setjmp(3C)
.xx "an object library" "" "lorder find ordering relation for" "" lorder(1)
.xx "execution count profile data" "" "lprof display line-by-line" "" lprof(1)
.xx "srand48, seed48,/" "drand48, erand48," "lrand48, nrand48, mrand48, jrand48," "" drand48(3C)
.xx "update" "" "lsearch, lfind linear search and" "" lsearch(3C)
.xx "" "" "lseek move read/write file pointer" "" lseek(2)
.xx "" "stat," "lstat, fstat get file status" "" stat(2)
.xx "integers and long integers" "l3tol," "ltol3 convert between 3-byte" "" l3tol(3C)
.xx "" "" "m4 macro processor" "" m4(1)
.xx "" "sysi86" "machine specific functions" "" sysi86(2)
.xx "" "values" "machine-dependent values" "" values(5)
.xx "" "sgetl access long integer data in a" "machine-independent fashion" "sputl," sputl(3X)
.xx "" "m4" "macro processor" "" m4(1)
.xx "" "maillock manage lockfile for user's" "mailbox" "" maillock(3X)
.xx "mailbox" "" "maillock manage lockfile for user's" "" maillock(3X)
.xx "library" "ar" "maintain portable archive or" "" ar(1)
.xx "groups of programs" "make" "maintain, update, and regenerate" "" make(1)
.xx "" "makedev," "major, minor manage a device number" "" makedev(3C)
.xx "user contexts" "" "makecontext, swapcontext manipulate" "" makecontext(3C)
.xx "device number" "" "makedev, major, minor manage a" "" makedev(3C)
.xx "" "free, realloc, calloc, mallopt," "mallinfo memory allocator" "malloc," malloc(3X)
.xx "mallopt, mallinfo memory allocator" "" "malloc, free, realloc, calloc," "" malloc(3X)
.xx "memalign, valloc, memory allocator" "" "malloc, free, realloc, calloc," "" malloc(3C)
.xx "" "malloc, free, realloc, calloc," "mallopt, mallinfo memory allocator" "" malloc(3X)
.xx "" "makedev, major, minor" "manage a device number" "" makedev(3C)
.xx "" "tsearch, tfind, tdelete, twalk" "manage binary search trees" "" tsearch(3C)
.xx "" "hsearch, hcreate, hdestroy" "manage hash search tables" "" hsearch(3C)
.xx "" "maillock" "manage lockfile for user's mailbox" "" maillock(3X)
.xx "" "swapctl" "manage swap space" "" swapctl(2)
.xx "" "memcntl memory" "management control" "" memcntl(2)
.xx "" "sigaction detailed signal" "management" "" sigaction(2)
.xx "" "sigpause simplified signal" "management" "/sigrelse, sigignore," signal(2)
.xx "" "elf_flagscn, elf_flagshdr" "manipulate flags" "/elf_flagphdr," elf_flagdata(3E)
.xx "" "/modfl, nextafter, scalb, scalbl" "manipulate parts of floating-point/" "" frexp(3C)
.xx "" "/setpwent, endpwent, fgetpwent" "manipulate password file entry" "" getpwent(3C)
.xx "" "/sigaddset, sigdelset, sigismember" "manipulate sets of signals" "" sigemptyset(3C)
.xx "entry" "/fgetspent, lckpwdf, ulckpwdf" "manipulate shadow password file" "" getspent(3C)
.xx "an object file" "mcs" "manipulate the comment section of" "" mcs(1)
.xx "" "makecontext, swapcontext" "manipulate user contexts" "" makecontext(3C)
.xx "" "strfind, strrspn, strtrns string" "manipulations" "str:" str(3G)
.xx "" "ascii" "map of ASCII character set" "" ascii(5)
.xx "" "mmap" "map pages of memory" "" mmap(2)
.xx "" "mprotect set protection of memory" "mapping" "" mprotect(2)
.xx "signal" "sigsuspend install a signal" "mask and suspend process until" "" sigsuspend(2)
.xx "" "change or examine signal" "mask" "sigprocmask" sigprocmask(2)
.xx "" "umask set and get file creation" "mask" "" umask(2)
.xx "" "regular expression compile and" "match routines" "/step, advance" regexp(5)
.xx "" "regular expression compile and" "match routines" "/step, advance" regexpr(3G)
.xx "" "gmatch shell global pattern" "matching" "" gmatch(3G)
.xx "" "math" "math functions and constants" "" math(5)
.xx "" "intro introduction to" "math libraries" "" intro(3M)
.xx "" "" "math math functions and constants" "" math(5)
.xx "" "" "matherr error-handling function" "" matherr(3M)
.xx "" "getrlimit, setrlimit control" "maximum system resource consumption" "" getrlimit(2)
.xx "multibyte character handling" "" "mbchar: mbtowc, mblen, wctomb" "" mbchar(3C)
.xx "handling" "mbchar: mbtowc," "mblen, wctomb multibyte character" "" mbchar(3C)
.xx "functions" "mbstring:" "mbstowcs, wcstombs multibyte string" "" mbstring(3C)
.xx "multibyte string functions" "" "mbstring: mbstowcs, wcstombs" "" mbstring(3C)
.xx "character handling" "mbchar:" "mbtowc, mblen, wctomb multibyte" "" mbchar(3C)
.xx "of an object file" "" "mcs manipulate the comment section" "" mcs(1)
.xx "" "state with that on the physical" "medium" "/a file's in-memory" fsync(2)
.xx "" "malloc, free, realloc, calloc," "memalign, valloc, memory allocator" "" malloc(3C)
.xx "" "elf_next sequential archive" "member access" "" elf_next(3E)
.xx "" "elf_rand random archive" "member access" "" elf_rand(3E)
.xx "" "elf_getarhdr retrieve archive" "member header" "" elf_getarhdr(3E)
.xx "" "offsetof offset of structure" "member" "" offsetof(3C)
.xx "memmove, memset memory/" "memory:" "memccpy, memchr, memcmp, memcpy," "" memory(3C)
.xx "memset memory/" "memory: memccpy," "memchr, memcmp, memcpy, memmove," "" memory(3C)
.xx "memory/" "memory: memccpy, memchr," "memcmp, memcpy, memmove, memset" "" memory(3C)
.xx "" "" "memcntl memory management control" "" memcntl(2)
.xx "" "memory: memccpy, memchr, memcmp," "memcpy, memmove, memset memory/" "" memory(3C)
.xx "" "/memccpy, memchr, memcmp, memcpy," "memmove, memset memory operations" "" memory(3C)
.xx "" "realloc, calloc, memalign, valloc," "memory allocator" "malloc, free," malloc(3C)
.xx "" "realloc, calloc, mallopt, mallinfo" "memory allocator" "malloc, free," malloc(3X)
.xx "" "shmctl shared" "memory control operations" "" shmctl(2)
.xx "" "copylist copy a file into" "memory" "" copylist(3G)
.xx "" "spawn new process in a virtual" "memory efficient way" "vfork" vfork(2)
.xx "" "memcntl" "memory management control" "" memcntl(2)
.xx "" "mprotect set protection of" "memory mapping" "" mprotect(2)
.xx "memcpy, memmove, memset memory/" "" "memory: memccpy, memchr, memcmp," "" memory(3C)
.xx "" "munlock lock (or unlock) pages in" "memory" "mlock," mlock(3C)
.xx "" "mmap map pages of" "memory" "" mmap(2)
.xx "" "munmap unmap pages of" "memory" "" munmap(2)
.xx "" "memcmp, memcpy, memmove, memset" "memory operations" "/memccpy, memchr," memory(3C)
.xx "" "shmop: shmat, shmdt shared" "memory operations" "" shmop(2)
.xx "data" "plock lock into" "memory or unlock process, text, or" "" plock(2)
.xx "" "mincore determine residency of" "memory pages" "" mincore(2)
.xx "" "shmget get shared" "memory segment identifier" "" shmget(2)
.xx "" "msync synchronize" "memory with physical storage" "" msync(3C)
.xx "" "memchr, memcmp, memcpy, memmove," "memset memory operations" "/memccpy," memory(3C)
.xx "" "catopen, catclose open/close a" "message catalogue" "" catopen(3C)
.xx "" "catgets read a program" "message" "" catgets(3C)
.xx "" "msgctl" "message control operations" "" msgctl(2)
.xx "" "help ask for help with" "message numbers or SCCS commands" "" help(1)
.xx "" "getmsg get next" "message off a stream" "" getmsg(2)
.xx "" "putmsg send a" "message on a stream" "" putmsg(2)
.xx "" "fmtmsg display a" "message on stderr or system console" "" fmtmsg(3C)
.xx "" "msgop: msgsnd, msgrcv" "message operations" "" msgop(2)
.xx "" "msgget get" "message queue" "" msgget(2)
.xx "" "strerror get error" "message string" "" strerror(3C)
.xx "" "perror print system error" "messages" "" perror(3C)
.xx "" "psignal, psiginfo system signal" "messages" "" psignal(3C)
.xx "memory pages" "" "mincore determine residency of" "" mincore(2)
.xx "" "makedev, major," "minor manage a device number" "" makedev(3C)
.xx "" "intro introduction to" "miscellany" "" intro(5)
.xx "" "" "mkdir make a directory" "" mkdir(2)
.xx "directories in a path" "" "mkdirp, rmdirp create, remove" "" mkdirp(3G)
.xx "" "" "mkfifo create a new FIFO" "" mkfifo(3C)
.xx "special or ordinary file" "" "mknod make a directory, or a" "" mknod(2)
.xx "" "" "mktemp make a unique file name" "" mktemp(3C)
.xx "calendar time" "" "mktime converts a tm structure to a" "" mktime(3C)
.xx "pages in memory" "" "mlock, munlock lock (or unlock)" "" mlock(3C)
.xx "address space" "" "mlockall, munlockall lock or unlock" "" mlockall(3C)
.xx "" "" "mmap map pages of memory" "" mmap(2)
.xx "" "getmntent, getmntany get" "mnttab file entry" "" getmntent(3C)
.xx "" "chmod, fchmod change" "mode of file" "" chmod(2)
.xx "" "frexp, frexpl, ldexp, ldexpl, logb," "modf, modff, modfl, nextafter,/" "" frexp(3C)
.xx "" "/frexpl, ldexp, ldexpl, logb, modf," "modff, modfl, nextafter, scalb,/" "" frexp(3C)
.xx "" "/ldexp, ldexpl, logb, modf, modff," "modfl, nextafter, scalb, scalbl/" "" frexp(3C)
.xx "" "utime set file access and" "modification times" "" utime(2)
.xx "" "setlocale" "modify and query a program's locale" "" setlocale(3C)
.xx "" "" "monitor prepare execution profile" "" monitor(3C)
.xx "" "mount" "mount a file system" "" mount(2)
.xx "" "" "mount mount a file system" "" mount(2)
.xx "" "lseek" "move read/write file pointer" "" lseek(2)
.xx "mapping" "" "mprotect set protection of memory" "" mprotect(2)
.xx "" "drand48, erand48, lrand48, nrand48," "mrand48, jrand48, srand48, seed48,/" "" drand48(3C)
.xx "" "" "msgctl message control operations" "" msgctl(2)
.xx "" "" "msgget get message queue" "" msgget(2)
.xx "operations" "" "msgop: msgsnd, msgrcv message" "" msgop(2)
.xx "" "msgop: msgsnd," "msgrcv message operations" "" msgop(2)
.xx "" "msgop:" "msgsnd, msgrcv message operations" "" msgop(2)
.xx "physical storage" "" "msync synchronize memory with" "" msync(3C)
.xx "" "mbchar: mbtowc, mblen, wctomb" "multibyte character handling" "" mbchar(3C)
.xx "" "mbstring: mbstowcs, wcstombs" "multibyte string functions" "" mbstring(3C)
.xx "by xt driver" "xtproto" "multiplexed channels protocol used" "" xtproto(5)
.xx "" "poll input/output" "multiplexing" "" poll(2)
.xx "memory" "mlock," "munlock lock (or unlock) pages in" "" mlock(3C)
.xx "space" "mlockall," "munlockall lock or unlock address" "" mlockall(3C)
.xx "" "" "munmap unmap pages of memory" "" munmap(2)
.xx "" "return the last element of a path" "name" "basename" basename(3G)
.xx "" "directory name of a file path" "name" "dirname report the parent" dirname(3G)
.xx "" "tmpnam, tempnam create a" "name for a temporary file" "" tmpnam(3S)
.xx "" "ctermid generate file" "name for terminal" "" ctermid(3S)
.xx "" "getpw get" "name from UID" "" getpw(3C)
.xx "" "getenv return value for environment" "name" "" getenv(3C)
.xx "" "getlogin get login" "name" "" getlogin(3C)
.xx "" "nlist get entries from" "name list" "" nlist(3E)
.xx "" "nm print" "name list of an object file" "" nm(1)
.xx "" "mktemp make a unique file" "name" "" mktemp(3C)
.xx "" "dirname report the parent directory" "name of a file path name" "" dirname(3G)
.xx "" "rename change the" "name of a file" "" rename(2)
.xx "" "ttyname, isatty find" "name of a terminal" "" ttyname(3C)
.xx "" "uname get" "name of current UNIX system" "" uname(2)
.xx "" "cuserid get character login" "name of the user" "" cuserid(3S)
.xx "" "realpath returns the real file" "name" "" realpath(3C)
.xx "" "pathfind search for named file in" "named directories" "" pathfind(3G)
.xx "" "pathfind search for" "named file in named directories" "" pathfind(3G)
.xx "" "nl_types" "native language data types" "" nl_types(5)
.xx "" "bgets read stream up to" "next delimiter" "" bgets(3G)
.xx "" "getmsg get" "next message off a stream" "" getmsg(2)
.xx "" "/ldexpl, logb, modf, modff, modfl," "nextafter, scalb, scalbl manipulate/" "" frexp(3C)
.xx "" "ftw," "nftw walk a file tree" "" ftw(3C)
.xx "time-sharing process" "" "nice change priority of a" "" nice(2)
.xx "" "" "nlist get entries from name list" "" nlist(3E)
.xx "" "" "nl_langinfo language information" "" nl_langinfo(3C)
.xx "" "" "nl_types native language data types" "" nl_types(5)
.xx "file" "" "nm print name list of an object" "" nm(1)
.xx "" "setjmp, longjmp" "non-local goto" "" setjmp(3C)
.xx "" "sigsetjmp, siglongjmp a" "non-local goto with signal state" "" sigsetjmp(3C)
.xx "seed48,/" "drand48, erand48, lrand48," "nrand48, mrand48, jrand48, srand48," "" drand48(3C)
.xx "" "/symbol table, debugging and line" "number information from an object/" "" strip(1)
.xx "" "determine type of floating-point" "number" "/unordered, unorderedl" isnan(3C)
.xx "" "major, minor manage a device" "number" "makedev," makedev(3C)
.xx "" "convert string to double-precision" "number" "strtod, strtold, atof" strtod(3C)
.xx "" "gcvt, gcvtl convert floating-point" "number to string" "/fcvt, fcvtl," ecvt(3C)
.xx "" "uniformly distributed pseudo-random" "numbers" "/seed48, lcong48 generate" drand48(3C)
.xx "" "manipulate parts of floating-point" "numbers" "/nextafter, scalb, scalbl" frexp(3C)
.xx "" "to system calls and error" "numbers" "intro introduction" intro(2)
.xx "" "help ask for help with message" "numbers or SCCS commands" "" help(1)
.xx "" "localeconv get" "numeric formatting information" "" localeconv(3C)
.xx "" "dis" "object code disassembler" "" dis(1)
.xx "" "dlclose close a shared" "object" "" dlclose(3X)
.xx "" "dlopen open a shared" "object" "" dlopen(3X)
.xx "" "the address of a symbol in shared" "object" "dlsym get" dlsym(3X)
.xx "" "elf" "object file access library" "" elf(3E)
.xx "" "dump dump selected parts of an" "object file" "" dump(1)
.xx "" "elf_end finish using an" "object file" "" elf_end(3E)
.xx "" "get the base offset for an" "object file" "elf_getbase" elf_getbase(3E)
.xx "" "retrieve class-dependent" "object file header" "/elf32_newehdr" elf_getehdr(3E)
.xx "" "the comment section of an" "object file" "mcs manipulate" mcs(1)
.xx "" "nm print name list of an" "object file" "" nm(1)
.xx "" "and line number information from an" "object file" "/table, debugging" strip(1)
.xx "" "cof2elf COFF to ELF" "object file translation" "" cof2elf(1)
.xx "" "elf32_fsize return the size of an" "object file type" "elf_fsize:" elf_fsize(3E)
.xx "" "ld link editor for" "object files" "" ld(1)
.xx "" "print section sizes in bytes of" "object files" "size" size(1)
.xx "" "find ordering relation for an" "object library" "lorder" lorder(1)
.xx "" "elf_getbase get the base" "offset for an object file" "" elf_getbase(3E)
.xx "" "offsetof" "offset of structure member" "" offsetof(3C)
.xx "" "" "offsetof offset of structure member" "" offsetof(3C)
.xx "" "ungetc push character back" "onto input stream" "" ungetc(3S)
.xx "" "dlopen" "open a shared object" "" dlopen(3X)
.xx "" "fopen, freopen, fdopen" "open a stream" "" fopen(3S)
.xx "command" "p2open, p2close" "open, close pipes to and from a" "" p2open(3G)
.xx "" "dup duplicate an" "open file descriptor" "" dup(2)
.xx "" "dup2 duplicate an" "open file descriptor" "" dup2(3C)
.xx "" "open" "open for reading or writing" "" open(2)
.xx "" "" "open open for reading or writing" "" open(2)
.xx "" "catopen, catclose" "open/close a message catalogue" "" catopen(3C)
.xx "rewinddir, closedir/" "directory:" "opendir, readdir, telldir, seekdir," "" directory(3C)
.xx "" "rewinddir, closedir directory" "operations" "/telldir, seekdir," directory(3C)
.xx "" "memcpy, memmove, memset memory" "operations" "/memchr, memcmp," memory(3C)
.xx "" "msgctl message control" "operations" "" msgctl(2)
.xx "" "msgop: msgsnd, msgrcv message" "operations" "" msgop(2)
.xx "" "semctl semaphore control" "operations" "" semctl(2)
.xx "" "semop semaphore" "operations" "" semop(2)
.xx "" "shmctl shared memory control" "operations" "" shmctl(2)
.xx "" "shmop: shmat, shmdt shared memory" "operations" "" shmop(2)
.xx "" "strcspn, strtok, strstr string" "operations" "/strpbrk, strspn," string(3C)
.xx "" "getopt get" "option letter from argument vector" "" getopt(3C)
.xx "" "fcntl file control" "options" "" fcntl(5)
.xx "" "mlock, munlock lock" "(or unlock) pages in memory" "" mlock(3C)
.xx "library" "lorder find" "ordering relation for an object" "" lorder(1)
.xx "" "make a directory, or a special or" "ordinary file" "mknod" mknod(2)
.xx "" "/vfprintf, vsprintf print formatted" "output of a variable argument list" "" vprintf(3S)
.xx "" "fprintf, sprintf print formatted" "output" "printf," printf(3S)
.xx "" "chown, lchown, fchown change" "owner and group of a file" "" chown(2)
.xx "from a command" "p2open," "p2close open, close pipes to and" "" p2open(3G)
.xx "to and from a command" "" "p2open, p2close open, close pipes" "" p2open(3G)
.xx "" "standard buffered input/output" "package" "stdio" stdio(3S)
.xx "" "standard interprocess communication" "package" "stdipc: ftok" stdipc(3C)
.xx "" "mlock, munlock lock (or unlock)" "pages in memory" "" mlock(3C)
.xx "" "determine residency of memory" "pages" "mincore" mincore(2)
.xx "" "mmap map" "pages of memory" "" mmap(2)
.xx "" "munmap unmap" "pages of memory" "" munmap(2)
.xx "path name" "dirname report the" "parent directory name of a file" "" dirname(3G)
.xx "" "get process, process group, and" "parent process IDs" "/getpgid" getpid(2)
.xx "" "getsubopt" "parse suboptions from a string" "" getsubopt(3C)
.xx "" "dump dump selected" "parts of an object file" "" dump(1)
.xx "" "/nextafter, scalb, scalbl manipulate" "parts of floating-point numbers" "" frexp(3C)
.xx "functions" "crypt" "password and file encryption" "" crypt(3X)
.xx "" "endpwent, fgetpwent manipulate" "password file entry" "/setpwent," getpwent(3C)
.xx "" "lckpwdf, ulckpwdf manipulate shadow" "password file entry" "/fgetspent," getspent(3C)
.xx "" "putpwent write" "password file entry" "" putpwent(3C)
.xx "" "putspent write shadow" "password file entry" "" putspent(3C)
.xx "" "getpass read a" "password" "" getpass(3C)
.xx "" "create, remove directories in a" "path" "mkdirp, rmdirp" mkdirp(3G)
.xx "" "return the last element of a" "path name" "basename" basename(3G)
.xx "" "the parent directory name of a file" "path name" "dirname report" dirname(3G)
.xx "variables" "fpathconf," "pathconf get configurable pathname" "" fpathconf(2)
.xx "named directories" "" "pathfind search for named file in" "" pathfind(3G)
.xx "directory" "getcwd get" "pathname of current working" "" getcwd(3C)
.xx "" "pathconf get configurable" "pathname variables" "fpathconf," fpathconf(2)
.xx "" "gmatch shell global" "pattern matching" "" gmatch(3G)
.xx "" "" "pause suspend process until signal" "" pause(2)
.xx "process" "popen," "pclose initiate pipe to/from a" "" popen(3S)
.xx "" "signals that are blocked and" "pending" "sigpending examine" sigpending(2)
.xx "" "" "perror print system error messages" "" perror(3C)
.xx "" "in-memory state with that on the" "physical medium" "/a file's" fsync(2)
.xx "" "msync synchronize memory with" "physical storage" "" msync(3C)
.xx "" "" "pipe create an interprocess channel" "" pipe(2)
.xx "" "popen, pclose initiate" "pipe to/from a process" "" popen(3S)
.xx "" "p2open, p2close open, close" "pipes to and from a command" "" p2open(3G)
.xx "process, text, or data" "" "plock lock into memory or unlock" "" plock(2)
.xx "" "elf_strptr make a string" "pointer" "" elf_strptr(3E)
.xx "" "rewind, ftell reposition a file" "pointer in a stream" "fseek," fseek(3S)
.xx "" "fsetpos, fgetpos reposition a file" "pointer in a stream" "" fsetpos(3C)
.xx "" "lseek move read/write file" "pointer" "" lseek(2)
.xx "" "" "poll input/output multiplexing" "" poll(2)
.xx "a process" "" "popen, pclose initiate pipe to/from" "" popen(3S)
.xx "" "ar maintain" "portable archive or library" "" ar(1)
.xx "" "/cbrt, log, logf, log10, log10f," "pow, powf, sqrt, sqrtf exponential,/" "" exp(3M)
.xx "" "sqrt, sqrtf exponential, logarithm," "power, square root functions" "/powf," exp(3M)
.xx "" "/log, logf, log10, log10f, pow," "powf, sqrt, sqrtf exponential,/" "" exp(3M)
.xx "" "monitor" "prepare execution profile" "" monitor(3C)
.xx "" "unget undo a" "previous get of an SCCS file" "" unget(1)
.xx "" "types" "primitive system data types" "" types(5)
.xx "" "prs" "print an SCCS file" "" prs(1)
.xx "activity" "sact" "print current SCCS file editing" "" sact(1)
.xx "" "vprintf, vfprintf, vsprintf" "print formatted output of a/" "" vprintf(3S)
.xx "" "printf, fprintf, sprintf" "print formatted output" "" printf(3S)
.xx "" "what" "print identification strings" "" what(1)
.xx "" "nm" "print name list of an object file" "" nm(1)
.xx "object files" "size" "print section sizes in bytes of" "" size(1)
.xx "" "perror" "print system error messages" "" perror(3C)
.xx "formatted output" "" "printf, fprintf, sprintf print" "" printf(3S)
.xx "" "" "priocntl process scheduler control" "" priocntl(2)
.xx "scheduler control" "" "priocntlset generalized process" "" priocntlset(2)
.xx "" "nice change" "priority of a time-sharing process" "" nice(2)
.xx "" "acct enable or disable" "process accounting" "" acct(2)
.xx "" "alarm set a" "process alarm clock" "" alarm(2)
.xx "" "times get" "process and child process times" "" times(2)
.xx "" "exit, _exit terminate" "process" "" exit(2)
.xx "" "fork create a new" "process" "" fork(2)
.xx "IDs" "/getppid, getpgid get process," "process group, and parent process" "" getpid(2)
.xx "" "setpgid set" "process group ID" "" setpgid(2)
.xx "" "setpgrp set" "process group ID" "" setpgrp(2)
.xx "" "tcsetpgrp set terminal foreground" "process group id" "" tcsetpgrp(3C)
.xx "" "process, process group, and parent" "process IDs" "/getppid, getpgid get" getpid(2)
.xx "efficient way" "vfork spawn new" "process in a virtual memory" "" vfork(2)
.xx "" "change priority of a time-sharing" "process" "nice" nice(2)
.xx "" "kill send a signal to a" "process or a group of processes" "" kill(2)
.xx "" "/sigsendset send a signal to a" "process or a group of processes" "" sigsend(2)
.xx "" "pclose initiate pipe to/from a" "process" "popen," popen(3S)
.xx "" "/getpgrp, getppid, getpgid get" "process, process group, and parent/" "" getpid(2)
.xx "" "priocntl" "process scheduler control" "" priocntl(2)
.xx "" "priocntlset generalized" "process scheduler control" "" priocntlset(2)
.xx "" "plock lock into memory or unlock" "process, text, or data" "" plock(2)
.xx "" "times get process and child" "process times" "" times(2)
.xx "" "waitid wait for child" "process to change state" "" waitid(2)
.xx "" "waitpid wait for child" "process to change state" "" waitpid(2)
.xx "" "wait wait for child" "process to stop or terminate" "" wait(2)
.xx "" "ptrace" "process trace" "" ptrace(2)
.xx "" "pause suspend" "process until signal" "" pause(2)
.xx "" "install a signal mask and suspend" "process until signal" "sigsuspend" sigsuspend(2)
.xx "" "a signal to a process or a group of" "processes" "kill send" kill(2)
.xx "" "a signal to a process or a group of" "processes" "sigsend, sigsendset send" sigsend(2)
.xx "" "m4 macro" "processor" "" m4(1)
.xx "" "" "prof display profile data" "" prof(1)
.xx "" "" "prof profile within a function" "" prof(5)
.xx "" "" "profil execution time profile" "" profil(2)
.xx "" "line-by-line execution count" "profile data" "lprof display" lprof(1)
.xx "" "prof display" "profile data" "" prof(1)
.xx "" "monitor prepare execution" "profile" "" monitor(3C)
.xx "" "profil execution time" "profile" "" profil(2)
.xx "" "prof" "profile within a function" "" prof(5)
.xx "" "assert verify" "program assertion" "" assert(3X)
.xx "" "cb C" "program beautifier" "" cb(1)
.xx "" "lint a C" "program checker" "" lint(1)
.xx "" "cxref generate C" "program cross-reference" "" cxref(1)
.xx "" "cscope interactively examine a C" "program" "" cscope(1)
.xx "" "ctrace C" "program debugger" "" ctrace(1)
.xx "" "end, etext, edata last locations in" "program" "" end(3C)
.xx "" "retrieve class-dependent" "program header table" "/elf32_newphdr" elf_getphdr(3E)
.xx "" "catgets read a" "program message" "" catgets(3C)
.xx "" "raise send signal to" "program" "" raise(3C)
.xx "" "atexit add" "program termination routine" "" atexit(3C)
.xx "" "intro introduction to" "programming commands" "" intro(1)
.xx "" "lex generate" "programs for simple lexical tasks" "" lex(1)
.xx "" "setlocale modify and query a" "program's locale" "" setlocale(3C)
.xx "" "update, and regenerate groups of" "programs" "make maintain," make(1)
.xx "" "mprotect set" "protection of memory mapping" "" mprotect(2)
.xx "windowing terminal under/" "layers" "protocol used between host and" "" layers(5)
.xx "" "xtproto multiplexed channels" "protocol used by xt driver" "" xtproto(5)
.xx "" "" "prs print an SCCS file" "" prs(1)
.xx "" "generate uniformly distributed" "pseudo-random numbers" "/lcong48" drand48(3C)
.xx "" "psignal," "psiginfo system signal messages" "" psignal(3C)
.xx "messages" "" "psignal, psiginfo system signal" "" psignal(3C)
.xx "" "" "ptrace process trace" "" ptrace(2)
.xx "stream" "ungetc" "push character back onto input" "" ungetc(3S)
.xx "" "puts, fputs" "put a string on a stream" "" puts(3S)
.xx "" "putc, putchar, fputc, putw" "put character or word on a stream" "" putc(3S)
.xx "" "getdents read directory entries and" "put in a file system independent/" "" getdents(2)
.xx "character or word on a stream" "" "putc, putchar, fputc, putw put" "" putc(3S)
.xx "or word on a stream" "putc," "putchar, fputc, putw put character" "" putc(3S)
.xx "environment" "" "putenv change or add value to" "" putenv(3C)
.xx "" "" "putmsg send a message on a stream" "" putmsg(2)
.xx "" "" "putpwent write password file entry" "" putpwent(3C)
.xx "stream" "" "puts, fputs put a string on a" "" puts(3S)
.xx "entry" "" "putspent write shadow password file" "" putspent(3C)
.xx "" "/getutent, getutid, getutline," "pututline, setutent, endutent,/" "" getut(3C)
.xx "" "/getutxent, getutxid, getutxline," "pututxline, setutxent, endutxent,/" "" getutx(3C)
.xx "stream" "putc, putchar, fputc," "putw put character or word on a" "" putc(3S)
.xx "" "" "qsort quicker sort" "" qsort(3C)
.xx "" "setlocale modify and" "query a program's locale" "" setlocale(3C)
.xx "" "remque insert/remove element from a" "queue" "insque," insque(3C)
.xx "" "msgget get message" "queue" "" msgget(2)
.xx "" "qsort" "quicker sort" "" qsort(3C)
.xx "" "div, ldiv compute the" "quotient and remainder" "" div(3C)
.xx "" "" "raise send signal to program" "" raise(3C)
.xx "generator" "" "rand, srand simple random-number" "" rand(3C)
.xx "" "elf_rand" "random archive member access" "" elf_rand(3E)
.xx "" "rand, srand simple" "random-number generator" "" rand(3C)
.xx "" "getpass" "read a password" "" getpass(3C)
.xx "" "catgets" "read a program message" "" catgets(3C)
.xx "file system independent/" "getdents" "read directory entries and put in a" "" getdents(2)
.xx "" "read" "read from file" "" read(2)
.xx "" "" "read read from file" "" read(2)
.xx "" "bgets" "read stream up to next delimiter" "" bgets(3G)
.xx "" "readlink" "read the value of a symbolic link" "" readlink(2)
.xx "rewinddir,/" "directory: opendir," "readdir, telldir, seekdir," "" directory(3C)
.xx "" "open open for" "reading or writing" "" open(2)
.xx "symbolic link" "" "readlink read the value of a" "" readlink(2)
.xx "" "lseek move" "read/write file pointer" "" lseek(2)
.xx "" "realpath returns the" "real file name" "" realpath(3C)
.xx "" "/get real user, effective user," "real group, and effective group IDs" "" getuid(2)
.xx "" "/geteuid, getgid, getegid get" "real user, effective user, real/" "" getuid(2)
.xx "memory allocator" "malloc, free," "realloc, calloc, mallopt, mallinfo" "" malloc(3X)
.xx "memory allocator" "malloc, free," "realloc, calloc, memalign, valloc," "" malloc(3C)
.xx "" "" "realpath returns the real file name" "" realpath(3C)
.xx "" "lockf" "record locking on files" "" lockf(3C)
.xx "regular expression" "" "regcmp, regex compile and execute" "" regcmp(3G)
.xx "" "" "regcmp regular expression compile" "" regcmp(1)
.xx "" "make maintain, update, and" "regenerate groups of programs" "" make(1)
.xx "expression" "regcmp," "regex compile and execute regular" "" regcmp(3G)
.xx "regular expression compile and/" "" "regexp: compile, step, advance" "" regexp(5)
.xx "regular expression compile and/" "" "regexpr: compile, step, advance" "" regexpr(3G)
.xx "" "regexp: compile, step, advance" "regular expression compile and/" "" regexp(5)
.xx "" "regexpr: compile, step, advance" "regular expression compile and/" "" regexpr(3G)
.xx "" "regcmp" "regular expression compile" "" regcmp(1)
.xx "" "regcmp, regex compile and execute" "regular expression" "" regcmp(3G)
.xx "" "lorder find ordering" "relation for an object library" "" lorder(1)
.xx "" "/rint, remainder floor, ceiling," "remainder, absolute value functions" "" floor(3M)
.xx "" "div, ldiv compute the quotient and" "remainder" "" div(3C)
.xx "" "/fmod, fmodf, fabs, fabsf, rint," "remainder floor, ceiling,/" "" floor(3M)
.xx "" "rmdel" "remove a delta from an SCCS file" "" rmdel(1)
.xx "" "rmdir" "remove a directory" "" rmdir(2)
.xx "" "mkdirp, rmdirp create," "remove directories in a path" "" mkdirp(3G)
.xx "" "unlink" "remove directory entry" "" unlink(2)
.xx "" "remove" "remove file" "" remove(3C)
.xx "" "" "remove remove file" "" remove(3C)
.xx "queue" "insque," "remque insert/remove element from a" "" insque(3C)
.xx "" "" "rename change the name of a file" "" rename(2)
.xx "" "clock" "report CPU time used" "" clock(3C)
.xx "a file path name" "dirname" "report the parent directory name of" "" dirname(3G)
.xx "stream" "fseek, rewind, ftell" "reposition a file pointer in a" "" fseek(3S)
.xx "stream" "fsetpos, fgetpos" "reposition a file pointer in a" "" fsetpos(3C)
.xx "" "mincore determine" "residency of memory pages" "" mincore(2)
.xx "" "setrlimit control maximum system" "resource consumption" "getrlimit," getrlimit(2)
.xx "" "gettxt" "retrieve a text string" "" gettxt(3C)
.xx "" "elf_getarhdr" "retrieve archive member header" "" elf_getarhdr(3E)
.xx "" "elf_getarsym" "retrieve archive symbol table" "" elf_getarsym(3E)
.xx "file/" "/elf32_getehdr, elf32_newehdr" "retrieve class-dependent object" "" elf_getehdr(3E)
.xx "" "/elf32_getphdr, elf32_newphdr" "retrieve class-dependent program/" "" elf_getphdr(3E)
.xx "header" "elf_getshdr: elf32_getshdr" "retrieve class-dependent section" "" elf_getshdr(3E)
.xx "" "elf_getident" "retrieve file identification data" "" elf_getident(3E)
.xx "contents" "elf_rawfile" "retrieve uninterpreted file" "" elf_rawfile(3E)
.xx "" "abs, labs" "return integer absolute value" "" abs(3C)
.xx "name" "basename" "return the last element of a path" "" basename(3G)
.xx "type" "elf_fsize: elf32_fsize" "return the size of an object file" "" elf_fsize(3E)
.xx "" "getenv" "return value for environment name" "" getenv(3C)
.xx "" "stat data" "returned by stat system call" "" stat(5)
.xx "" "realpath" "returns the real file name" "" realpath(3C)
.xx "pointer in a stream" "fseek," "rewind, ftell reposition a file" "" fseek(3S)
.xx "" "/opendir, readdir, telldir, seekdir," "rewinddir, closedir directory/" "" directory(3C)
.xx "" "creat create a new file or" "rewrite an existing one" "" creat(2)
.xx "" "/copysign, fmod, fmodf, fabs, fabsf," "rint, remainder floor, ceiling,/" "" floor(3M)
.xx "file" "" "rmdel remove a delta from an SCCS" "" rmdel(1)
.xx "" "" "rmdir remove a directory" "" rmdir(2)
.xx "in a path" "mkdirp," "rmdirp create, remove directories" "" mkdirp(3G)
.xx "" "chroot change" "root directory" "" chroot(2)
.xx "" "logarithm, power, square" "root functions" "/sqrtf exponential," exp(3M)
.xx "" "atexit add program termination" "routine" "" atexit(3C)
.xx "" "expression compile and match" "routines" "/step, advance regular" regexp(5)
.xx "" "expression compile and match" "routines" "/step, advance regular" regexpr(3G)
.xx "editing activity" "" "sact print current SCCS file" "" sact(1)
.xx "allocation" "brk," "sbrk change data segment space" "" brk(2)
.xx "" "/modf, modff, modfl, nextafter," "scalb, scalbl manipulate parts of/" "" frexp(3C)
.xx "" "modff, modfl, nextafter, scalb," "scalbl manipulate parts of/" "/modf," frexp(3C)
.xx "formatted input" "" "scanf, fscanf, sscanf convert" "" scanf(3S)
.xx "" "for help with message numbers or" "SCCS commands" "help ask" help(1)
.xx "" "cdc change the delta comment of an" "SCCS delta" "" cdc(1)
.xx "" "comb combine" "SCCS deltas" "" comb(1)
.xx "" "delta make a delta (change) to an" "SCCS file" "" delta(1)
.xx "" "sact print current" "SCCS file editing activity" "" sact(1)
.xx "" "get get a version of an" "SCCS file" "" get(1)
.xx "" "prs print an" "SCCS file" "" prs(1)
.xx "" "rmdel remove a delta from an" "SCCS file" "" rmdel(1)
.xx "" "sccsdiff compare two versions of an" "SCCS file" "" sccsdiff(1)
.xx "" "sccsfile format of" "SCCS file" "" sccsfile(4)
.xx "" "unget undo a previous get of an" "SCCS file" "" unget(1)
.xx "" "val validate an" "SCCS file" "" val(1)
.xx "" "admin create and administer" "SCCS files" "" admin(1)
.xx "SCCS file" "" "sccsdiff compare two versions of an" "" sccsdiff(1)
.xx "" "" "sccsfile format of SCCS file" "" sccsfile(4)
.xx "" "priocntl process" "scheduler control" "" priocntl(2)
.xx "" "priocntlset generalized process" "scheduler control" "" priocntlset(2)
.xx "" "" "sdb symbolic debugger" "" sdb(1)
.xx "" "bsearch binary" "search a sorted table" "" bsearch(3C)
.xx "" "lsearch, lfind linear" "search and update" "" lsearch(3C)
.xx "directories" "pathfind" "search for named file in named" "" pathfind(3G)
.xx "" "hcreate, hdestroy manage hash" "search tables" "hsearch," hsearch(3C)
.xx "" "tfind, tdelete, twalk manage binary" "search trees" "tsearch," tsearch(3C)
.xx "" "elf_newdata, elf_rawdata get" "section data" "elf_getdata," elf_getdata(3E)
.xx "" "retrieve class-dependent" "section header" "/elf32_getshdr" elf_getshdr(3E)
.xx "" "elf_newscn, elf_nextscn get" "section information" "/elf_ndxscn," elf_getscn(3E)
.xx "" "mcs manipulate the comment" "section of an object file" "" mcs(1)
.xx "files" "size print" "section sizes in bytes of object" "" size(1)
.xx "" "/nrand48, mrand48, jrand48, srand48," "seed48, lcong48 generate uniformly/" "" drand48(3C)
.xx "" "/opendir, readdir, telldir," "seekdir, rewinddir, closedir/" "" directory(3C)
.xx "" "shmget get shared memory" "segment identifier" "" shmget(2)
.xx "" "brk, sbrk change data" "segment space allocation" "" brk(2)
.xx "" "dump dump" "selected parts of an object file" "" dump(1)
.xx "" "semctl" "semaphore control operations" "" semctl(2)
.xx "" "semop" "semaphore operations" "" semop(2)
.xx "" "semget get set of" "semaphores" "" semget(2)
.xx "" "" "semctl semaphore control operations" "" semctl(2)
.xx "" "" "semget get set of semaphores" "" semget(2)
.xx "" "" "semop semaphore operations" "" semop(2)
.xx "" "putmsg" "send a message on a stream" "" putmsg(2)
.xx "group of processes" "kill" "send a signal to a process or a" "" kill(2)
.xx "group of/" "sigsend, sigsendset" "send a signal to a process or a" "" sigsend(2)
.xx "" "raise" "send signal to program" "" raise(3C)
.xx "" "elf_next" "sequential archive member access" "" elf_next(3E)
.xx "" "getsid get" "session ID" "" getsid(2)
.xx "" "setsid set" "session ID" "" setsid(2)
.xx "" "truncate, ftruncate" "set a file to a specified length" "" truncate(3C)
.xx "" "alarm" "set a process alarm clock" "" alarm(2)
.xx "" "umask" "set and get file creation mask" "" umask(2)
.xx "" "ascii map of ASCII character" "set" "" ascii(5)
.xx "" "ffs find first" "set bit" "" ffs(3C)
.xx "" "getcontext, setcontext get and" "set current user context" "" getcontext(2)
.xx "" "timezone" "set default system time zone" "" timezone(4)
.xx "times" "utime" "set file access and modification" "" utime(2)
.xx "" "elf_fill" "set fill byte" "" elf_fill(3E)
.xx "" "semget get" "set of semaphores" "" semget(2)
.xx "context" "sigaltstack" "set or get signal alternate stack" "" sigaltstack(2)
.xx "" "setpgid" "set process group ID" "" setpgid(2)
.xx "" "setpgrp" "set process group ID" "" setpgrp(2)
.xx "" "mprotect" "set protection of memory mapping" "" mprotect(2)
.xx "" "setsid" "set session ID" "" setsid(2)
.xx "IDs" "getgroups, setgroups get or" "set supplementary group access list" "" getgroups(2)
.xx "" "sysinfo get and" "set system information strings" "" sysinfo(2)
.xx "group id" "tcsetpgrp" "set terminal foreground process" "" tcsetpgrp(3C)
.xx "" "gettimeofday, settimeofday get or" "set the date and time" "" gettimeofday(3C)
.xx "" "stime" "set time" "" stime(2)
.xx "" "setuid, setgid" "set user and group IDs" "" setuid(2)
.xx "" "ulimit get and" "set user limits" "" ulimit(2)
.xx "a stream" "" "setbuf, setvbuf assign buffering to" "" setbuf(3S)
.xx "context" "getcontext," "setcontext get and set current user" "" getcontext(2)
.xx "" "setuid," "setgid set user and group IDs" "" setuid(2)
.xx "" "getgrent, getgrgid, getgrnam\^," "setgrent, endgrent, fgetgrent get/" "" getgrent(3C)
.xx "group access list IDs" "getgroups," "setgroups get or set supplementary" "" getgroups(2)
.xx "timer" "getitimer," "setitimer get/set value of interval" "" getitimer(3C)
.xx "" "" "setjmp, longjmp non-local goto" "" setjmp(3C)
.xx "" "crypt," "setkey, encrypt generate encryption" "" crypt(3C)
.xx "program's locale" "" "setlocale modify and query a" "" setlocale(3C)
.xx "" "" "setpgid set process group ID" "" setpgid(2)
.xx "" "" "setpgrp set process group ID" "" setpgrp(2)
.xx "" "getpwent, getpwuid, getpwnam," "setpwent, endpwent, fgetpwent/" "" getpwent(3C)
.xx "resource consumption" "getrlimit," "setrlimit control maximum system" "" getrlimit(2)
.xx "" "sigdelset, sigismember manipulate" "sets of signals" "/sigaddset," sigemptyset(3C)
.xx "" "" "setsid set session ID" "" setsid(2)
.xx "lckpwdf,/" "getspent, getspnam\^," "setspent, endspent, fgetspent," "" getspent(3C)
.xx "and time" "gettimeofday," "settimeofday get or set the date" "" gettimeofday(3C)
.xx "IDs" "" "setuid, setgid set user and group" "" setuid(2)
.xx "" "/getutid, getutline, pututline," "setutent, endutent, utmpname access/" "" getut(3C)
.xx "" "/getutxid, getutxline, pututxline," "setutxent, endutxent, utmpxname,/" "" getutx(3C)
.xx "stream" "setbuf," "setvbuf assign buffering to a" "" setbuf(3S)
.xx "for/" "addseverity build a list of" "severity levels for an application" "" addseverity(3C)
.xx "machine-independent fashion" "sputl," "sgetl access long integer data in a" "" sputl(3X)
.xx "" "/lckpwdf, ulckpwdf manipulate" "shadow password file entry" "" getspent(3C)
.xx "" "putspent write" "shadow password file entry" "" putspent(3C)
.xx "" "shmctl" "shared memory control operations" "" shmctl(2)
.xx "" "shmop: shmat, shmdt" "shared memory operations" "" shmop(2)
.xx "" "shmget get" "shared memory segment identifier" "" shmget(2)
.xx "" "dlclose close a" "shared object" "" dlclose(3X)
.xx "" "dlopen open a" "shared object" "" dlopen(3X)
.xx "" "get the address of a symbol in" "shared object" "dlsym" dlsym(3X)
.xx "" "system issue a" "shell command" "" system(3S)
.xx "" "gmatch" "shell global pattern matching" "" gmatch(3G)
.xx "operations" "shmop:" "shmat, shmdt shared memory" "" shmop(2)
.xx "operations" "" "shmctl shared memory control" "" shmctl(2)
.xx "" "shmop: shmat," "shmdt shared memory operations" "" shmop(2)
.xx "identifier" "" "shmget get shared memory segment" "" shmget(2)
.xx "operations" "" "shmop: shmat, shmdt shared memory" "" shmop(2)
.xx "management" "" "sigaction detailed signal" "" sigaction(2)
.xx "" "sigemptyset, sigfillset," "sigaddset, sigdelset, sigismember/" "" sigemptyset(3C)
.xx "alternate stack context" "" "sigaltstack set or get signal" "" sigaltstack(2)
.xx "" "sigemptyset, sigfillset, sigaddset," "sigdelset, sigismember manipulate/" "" sigemptyset(3C)
.xx "sigdelset, sigismember manipulate/" "" "sigemptyset, sigfillset, sigaddset," "" sigemptyset(3C)
.xx "sigismember/" "sigemptyset," "sigfillset, sigaddset, sigdelset," "" sigemptyset(3C)
.xx "sigpause/" "signal, sigset," "sighold, sigrelse, sigignore," "" signal(2)
.xx "" "signal, sigset, sighold, sigrelse," "sigignore, sigpause simplified/" "" signal(2)
.xx "information" "" "siginfo signal generation" "" siginfo(5)
.xx "" "/sigfillset, sigaddset, sigdelset," "sigismember manipulate sets of/" "" sigemptyset(3C)
.xx "signal state" "sigsetjmp," "siglongjmp a non-local goto with" "" sigsetjmp(3C)
.xx "" "generate an abnormal termination" "signal" "abort" abort(3C)
.xx "" "sigaltstack set or get" "signal alternate stack context" "" sigaltstack(2)
.xx "" "" "signal base signals" "" signal(5)
.xx "" "siginfo" "signal generation information" "" siginfo(5)
.xx "" "sigaction detailed" "signal management" "" sigaction(2)
.xx "" "sigignore, sigpause simplified" "signal management" "/sigrelse," signal(2)
.xx "until signal" "sigsuspend install a" "signal mask and suspend process" "" sigsuspend(2)
.xx "" "sigprocmask change or examine" "signal mask" "" sigprocmask(2)
.xx "" "psignal, psiginfo system" "signal messages" "" psignal(3C)
.xx "" "pause suspend process until" "signal" "" pause(2)
.xx "sigignore, sigpause simplified/" "" "signal, sigset, sighold, sigrelse," "" signal(2)
.xx "" "mask and suspend process until" "signal" "sigsuspend install a signal" sigsuspend(2)
.xx "" "siglongjmp a non-local goto with" "signal state" "sigsetjmp," sigsetjmp(3C)
.xx "processes" "kill send a" "signal to a process or a group of" "" kill(2)
.xx "" "sigsend, sigsendset send a" "signal to a process or a group of/" "" sigsend(2)
.xx "" "raise send" "signal to program" "" raise(3C)
.xx "" "sigismember manipulate sets of" "signals" "/sigaddset, sigdelset," sigemptyset(3C)
.xx "" "signal base" "signals" "" signal(5)
.xx "" "ssignal, gsignal software" "signals" "" ssignal(3C)
.xx "pending" "sigpending examine" "signals that are blocked and" "" sigpending(2)
.xx "" "sighold, sigrelse, sigignore," "sigpause simplified signal/" "/sigset," signal(2)
.xx "blocked and pending" "" "sigpending examine signals that are" "" sigpending(2)
.xx "signal mask" "" "sigprocmask change or examine" "" sigprocmask(2)
.xx "" "signal, sigset, sighold," "sigrelse, sigignore, sigpause/" "" signal(2)
.xx "to a process or a group of/" "" "sigsend, sigsendset send a signal" "" sigsend(2)
.xx "process or a group of/" "sigsend," "sigsendset send a signal to a" "" sigsend(2)
.xx "sigignore, sigpause/" "signal," "sigset, sighold, sigrelse," "" signal(2)
.xx "goto with signal state" "" "sigsetjmp, siglongjmp a non-local" "" sigsetjmp(3C)
.xx "and suspend process until signal" "" "sigsuspend install a signal mask" "" sigsuspend(2)
.xx "" "lex generate programs for" "simple lexical tasks" "" lex(1)
.xx "" "rand, srand" "simple random-number generator" "" rand(3C)
.xx "" "/sigrelse, sigignore, sigpause" "simplified signal management" "" signal(2)
.xx "asin, asinf, acos, acosf,/" "trig:" "sin, sinf, cos, cosf, tan, tanf," "" trig(3M)
.xx "asinf, acos, acosf,/" "trig: sin," "sinf, cos, cosf, tan, tanf, asin," "" trig(3M)
.xx "tanhf, asinh, acosh, atanh/" "" "sinh, sinhf, cosh, coshf, tanh," "" sinh(3M)
.xx "asinh, acosh, atanh/" "sinh," "sinhf, cosh, coshf, tanh, tanhf," "" sinh(3M)
.xx "" "elf_fsize: elf32_fsize return the" "size of an object file type" "" elf_fsize(3E)
.xx "of object files" "" "size print section sizes in bytes" "" size(1)
.xx "" "size print section" "sizes in bytes of object files" "" size(1)
.xx "interval" "" "sleep suspend execution for" "" sleep(3C)
.xx "current user" "ttyslot find the" "slot in the utmp file of the" "" ttyslot(3C)
.xx "" "ssignal, gsignal" "software signals" "" ssignal(3C)
.xx "" "qsort quicker" "sort" "" qsort(3C)
.xx "" "tsort topological" "sort" "" tsort(1)
.xx "" "bsearch binary search a" "sorted table" "" bsearch(3C)
.xx "" "brk, sbrk change data segment" "space allocation" "" brk(2)
.xx "" "munlockall lock or unlock address" "space" "mlockall," mlockall(3C)
.xx "" "swapctl manage swap" "space" "" swapctl(2)
.xx "memory efficient way" "vfork" "spawn new process in a virtual" "" vfork(2)
.xx "" "mknod make a directory, or a" "special or ordinary file" "" mknod(2)
.xx "" "sysi86 machine" "specific functions" "" sysi86(2)
.xx "" "strftime language" "specific strings" "" strftime(4)
.xx "" "truncate, ftruncate set a file to a" "specified length" "" truncate(3C)
.xx "" "bufsplit" "split buffer into fields" "" bufsplit(3G)
.xx "" "printf, fprintf," "sprintf print formatted output" "" printf(3S)
.xx "data in a machine-independent/" "" "sputl, sgetl access long integer" "" sputl(3X)
.xx "" "/logf, log10, log10f, pow, powf," "sqrt, sqrtf exponential, logarithm,/" "" exp(3M)
.xx "" "/log10, log10f, pow, powf, sqrt," "sqrtf exponential, logarithm,/" "" exp(3M)
.xx "" "exponential, logarithm, power," "square root functions" "/sqrt, sqrtf" exp(3M)
.xx "generator" "rand," "srand simple random-number" "" rand(3C)
.xx "" "/lrand48, nrand48, mrand48, jrand48," "srand48, seed48, lcong48 generate/" "" drand48(3C)
.xx "" "scanf, fscanf," "sscanf convert formatted input" "" scanf(3S)
.xx "" "" "ssignal, gsignal software signals" "" ssignal(3C)
.xx "" "set or get signal alternate" "stack context" "sigaltstack" sigaltstack(2)
.xx "package" "stdio" "standard buffered input/output" "" stdio(3S)
.xx "package" "stdipc: ftok" "standard interprocess communication" "" stdipc(3C)
.xx "call" "" "stat data returned by stat system" "" stat(5)
.xx "" "" "stat, lstat, fstat get file status" "" stat(2)
.xx "" "stat data returned by" "stat system call" "" stat(5)
.xx "" "ustat get file system" "statistics" "" ustat(2)
.xx "" "feof, clearerr, fileno stream" "status inquiries" "ferror," ferror(3S)
.xx "" "stat, lstat, fstat get file" "status" "" stat(2)
.xx "" "wstat wait" "status" "" wstat(5)
.xx "information" "" "statvfs, fstatvfs get file system" "" statvfs(2)
.xx "list" "" "stdarg handle variable argument" "" stdarg(5)
.xx "" "fmtmsg display a message on" "stderr or system console" "" fmtmsg(3C)
.xx "input/output package" "" "stdio standard buffered" "" stdio(3S)
.xx "communication package" "" "stdipc: ftok standard interprocess" "" stdipc(3C)
.xx "compile and match/" "regexp: compile," "step, advance regular expression" "" regexp(5)
.xx "compile and/" "regexpr: compile," "step, advance regular expression" "" regexpr(3G)
.xx "" "" "stime set time" "" stime(2)
.xx "" "wait wait for child process to" "stop or terminate" "" wait(2)
.xx "" "synchronize memory with physical" "storage" "msync" msync(3C)
.xx "string manipulations" "" "str: strfind, strrspn, strtrns" "" str(3G)
.xx "compressing or/" "strccpy: streadd," "strcadd, strecpy copy strings," "" strccpy(3G)
.xx "strncmp, strcpy, strncpy,/" "string:" "strcat, strdup, strncat, strcmp," "" string(3C)
.xx "copy strings, compressing or/" "" "strccpy: streadd, strcadd, strecpy" "" strccpy(3G)
.xx "" "/strncmp, strcpy, strncpy, strlen," "strchr, strrchr, strpbrk, strspn,/" "" string(3C)
.xx "" "string: strcat, strdup, strncat," "strcmp, strncmp, strcpy, strncpy,/" "" string(3C)
.xx "" "" "strcoll string collation" "" strcoll(3C)
.xx "" "/strdup, strncat, strcmp, strncmp," "strcpy, strncpy, strlen, strchr,/" "" string(3C)
.xx "" "/strchr, strrchr, strpbrk, strspn," "strcspn, strtok, strstr string/" "" string(3C)
.xx "strcpy, strncpy,/" "string: strcat," "strdup, strncat, strcmp, strncmp," "" string(3C)
.xx "strings, compressing or/" "strccpy:" "streadd, strcadd, strecpy copy" "" strccpy(3G)
.xx "" "fclose, fflush close or flush a" "stream" "" fclose(3S)
.xx "" "fopen, freopen, fdopen open a" "stream" "" fopen(3S)
.xx "" "reposition a file pointer in a" "stream" "fseek, rewind, ftell" fseek(3S)
.xx "" "reposition a file pointer in a" "stream" "fsetpos, fgetpos" fsetpos(3C)
.xx "" "getw get character or word from a" "stream" "getc, getchar, fgetc," getc(3S)
.xx "" "getmsg get next message off a" "stream" "" getmsg(2)
.xx "" "gets, fgets get a string from a" "stream" "" gets(3S)
.xx "" "putw put character or word on a" "stream" "putc, putchar, fputc," putc(3S)
.xx "" "putmsg send a message on a" "stream" "" putmsg(2)
.xx "" "puts, fputs put a string on a" "stream" "" puts(3S)
.xx "" "setvbuf assign buffering to a" "stream" "setbuf," setbuf(3S)
.xx "" "ferror, feof, clearerr, fileno" "stream status inquiries" "" ferror(3S)
.xx "" "push character back onto input" "stream" "ungetc" ungetc(3S)
.xx "" "bgets read" "stream up to next delimiter" "" bgets(3G)
.xx "or/" "strccpy: streadd, strcadd," "strecpy copy strings, compressing" "" strccpy(3G)
.xx "" "" "strerror get error message string" "" strerror(3C)
.xx "manipulations" "str:" "strfind, strrspn, strtrns string" "" str(3G)
.xx "date and time to string" "" "strftime, cftime, ascftime convert" "" strftime(3C)
.xx "" "" "strftime language specific strings" "" strftime(4)
.xx "" "long integer and base-64 ASCII" "string" "a64l, l64a convert between" a64l(3C)
.xx "" "strcoll" "string collation" "" strcoll(3C)
.xx "" "tzset convert date and time to" "string" "/localtime, gmtime, asctime," ctime(3C)
.xx "" "convert floating-point number to" "string" "/fcvt, fcvtl, gcvt, gcvtl" ecvt(3C)
.xx "" "gets, fgets get a" "string from a stream" "" gets(3S)
.xx "" "mbstowcs, wcstombs multibyte" "string functions" "mbstring:" mbstring(3C)
.xx "" "getsubopt parse suboptions from a" "string" "" getsubopt(3C)
.xx "" "gettxt retrieve a text" "string" "" gettxt(3C)
.xx "" "str: strfind, strrspn, strtrns" "string manipulations" "" str(3G)
.xx "" "puts, fputs put a" "string on a stream" "" puts(3S)
.xx "" "strspn, strcspn, strtok, strstr" "string operations" "/strpbrk," string(3C)
.xx "" "elf_strptr make a" "string pointer" "" elf_strptr(3E)
.xx "strcmp, strncmp, strcpy, strncpy,/" "" "string: strcat, strdup, strncat," "" string(3C)
.xx "" "strerror get error message" "string" "" strerror(3C)
.xx "" "ascftime convert date and time to" "string" "strftime, cftime," strftime(3C)
.xx "" "strtod, strtold, atof convert" "string to double-precision number" "" strtod(3C)
.xx "" "strtol, strtoul, atol, atoi convert" "string to integer" "" strtol(3C)
.xx "" "strxfrm" "string transformation" "" strxfrm(3C)
.xx "" "/streadd, strcadd, strecpy copy" "strings, compressing or expanding/" "" strccpy(3G)
.xx "" "strftime language specific" "strings" "" strftime(4)
.xx "" "get and set system information" "strings" "sysinfo" sysinfo(2)
.xx "" "what print identification" "strings" "" what(1)
.xx "and line number information from/" "" "strip strip symbol table, debugging" "" strip(1)
.xx "line number information from/" "strip" "strip symbol table, debugging and" "" strip(1)
.xx "" "/strcmp, strncmp, strcpy, strncpy," "strlen, strchr, strrchr, strpbrk,/" "" string(3C)
.xx "strncpy,/" "string: strcat, strdup," "strncat, strcmp, strncmp, strcpy," "" string(3C)
.xx "" "/strcat, strdup, strncat, strcmp," "strncmp, strcpy, strncpy, strlen,/" "" string(3C)
.xx "" "/strncat, strcmp, strncmp, strcpy," "strncpy, strlen, strchr, strrchr,/" "" string(3C)
.xx "" "/strncpy, strlen, strchr, strrchr," "strpbrk, strspn, strcspn, strtok,/" "" string(3C)
.xx "" "/strcpy, strncpy, strlen, strchr," "strrchr, strpbrk, strspn, strcspn,/" "" string(3C)
.xx "manipulations" "str: strfind," "strrspn, strtrns string" "" str(3G)
.xx "" "/strlen, strchr, strrchr, strpbrk," "strspn, strcspn, strtok, strstr/" "" string(3C)
.xx "" "strpbrk, strspn, strcspn, strtok," "strstr string operations" "/strrchr," string(3C)
.xx "string to double-precision number" "" "strtod, strtold, atof convert" "" strtod(3C)
.xx "" "/strrchr, strpbrk, strspn, strcspn," "strtok, strstr string operations" "" string(3C)
.xx "string to integer" "" "strtol, strtoul, atol, atoi convert" "" strtol(3C)
.xx "double-precision number" "strtod," "strtold, atof convert string to" "" strtod(3C)
.xx "to integer" "strtol," "strtoul, atol, atoi convert string" "" strtol(3C)
.xx "" "str: strfind, strrspn," "strtrns string manipulations" "" str(3G)
.xx "" "offsetof offset of" "structure member" "" offsetof(3C)
.xx "" "mktime converts a tm" "structure to a calendar time" "" mktime(3C)
.xx "" "" "strxfrm string transformation" "" strxfrm(3C)
.xx "" "getsubopt parse" "suboptions from a string" "" getsubopt(3C)
.xx "" "sync update" "super block" "" sync(2)
.xx "" "getgroups, setgroups get or set" "supplementary group access list IDs" "" getgroups(2)
.xx "" "initgroups initialize the" "supplementary group access list" "" initgroups(3C)
.xx "" "sleep" "suspend execution for interval" "" sleep(3C)
.xx "" "pause" "suspend process until signal" "" pause(2)
.xx "" "/install a signal mask and" "suspend process until signal" "" sigsuspend(2)
.xx "" "" "swab swap bytes" "" swab(3C)
.xx "" "swab" "swap bytes" "" swab(3C)
.xx "" "swapctl manage" "swap space" "" swapctl(2)
.xx "contexts" "makecontext," "swapcontext manipulate user" "" makecontext(3C)
.xx "" "" "swapctl manage swap space" "" swapctl(2)
.xx "" "dlsym get the address of a" "symbol in shared object" "" dlsym(3X)
.xx "number information/" "strip strip" "symbol table, debugging and line" "" strip(1)
.xx "" "elf_getarsym retrieve archive" "symbol table" "" elf_getarsym(3E)
.xx "" "sdb" "symbolic debugger" "" sdb(1)
.xx "" "readlink read the value of a" "symbolic link" "" readlink(2)
.xx "" "symlink make a" "symbolic link to a file" "" symlink(2)
.xx "file" "" "symlink make a symbolic link to a" "" symlink(2)
.xx "" "" "sync update super block" "" sync(2)
.xx "" "adjtime correct the time to allow" "synchronization of the system clock" "" adjtime(2)
.xx "state with that on the/" "fsync" "synchronize a file's in-memory" "" fsync(2)
.xx "storage" "msync" "synchronize memory with physical" "" msync(3C)
.xx "variables" "" "sysconf get configurable system" "" sysconf(3C)
.xx "information" "" "sysfs get file system type" "" sysfs(2)
.xx "" "" "sysi86 machine specific functions" "" sysi86(2)
.xx "information strings" "" "sysinfo get and set system" "" sysinfo(2)
.xx "" "stat data returned by stat" "system call" "" stat(5)
.xx "" "intro introduction to" "system calls and error numbers" "" intro(2)
.xx "" "to allow synchronization of the" "system clock" "/correct the time" adjtime(2)
.xx "" "display a message on stderr or" "system console" "fmtmsg" fmtmsg(3C)
.xx "" "types primitive" "system data types" "" types(5)
.xx "" "perror print" "system error messages" "" perror(3C)
.xx "" "directory entries and put in a file" "system independent format" "/read" getdents(2)
.xx "" "statvfs, fstatvfs get file" "system information" "" statvfs(2)
.xx "" "sysinfo get and set" "system information strings" "" sysinfo(2)
.xx "" "" "system issue a shell command" "" system(3S)
.xx "" "mount mount a file" "system" "" mount(2)
.xx "" "/setrlimit control maximum" "system resource consumption" "" getrlimit(2)
.xx "" "psignal, psiginfo" "system signal messages" "" psignal(3C)
.xx "" "ustat get file" "system statistics" "" ustat(2)
.xx "" "timezone set default" "system time zone" "" timezone(4)
.xx "" "sysfs get file" "system type information" "" sysfs(2)
.xx "" "umount unmount a file" "system" "" umount(2)
.xx "" "uname get name of current UNIX" "system" "" uname(2)
.xx "" "sysconf get configurable" "system variables" "" sysconf(3C)
.xx "" "bsearch binary search a sorted" "table" "" bsearch(3C)
.xx "information/" "strip strip symbol" "table, debugging and line number" "" strip(1)
.xx "" "retrieve archive symbol" "table" "elf_getarsym" elf_getarsym(3E)
.xx "" "class-dependent program header" "table" "/elf32_newphdr retrieve" elf_getphdr(3E)
.xx "" "hdestroy manage hash search" "tables" "hsearch, hcreate," hsearch(3C)
.xx "acosf,/" "trig: sin, sinf, cos, cosf," "tan, tanf, asin, asinf, acos," "" trig(3M)
.xx "" "trig: sin, sinf, cos, cosf, tan," "tanf, asin, asinf, acos, acosf,/" "" trig(3M)
.xx "" "sinh, sinhf, cosh, coshf," "tanh, tanhf, asinh, acosh, atanh/" "" sinh(3M)
.xx "" "sinh, sinhf, cosh, coshf, tanh," "tanhf, asinh, acosh, atanh/" "" sinh(3M)
.xx "" "programs for simple lexical" "tasks" "lex generate" lex(1)
.xx "" "tcgetattr, tcsetattr, tcsendbreak," "tcdrain, tcflush, tcflow,/" "termios:" termios(2)
.xx "" "/tcsendbreak, tcdrain, tcflush," "tcflow, cfgetospeed, cfgetispeed,/" "" termios(2)
.xx "" "/tcsetattr, tcsendbreak, tcdrain," "tcflush, tcflow, cfgetospeed,/" "" termios(2)
.xx "tcdrain, tcflush, tcflow,/" "termios:" "tcgetattr, tcsetattr, tcsendbreak," "" termios(2)
.xx "general/" "/cfsetispeed, cfsetospeed," "tcgetpgrp, tcsetpgrp, tcgetsid" "" termios(2)
.xx "" "/cfsetospeed, tcgetpgrp, tcsetpgrp," "tcgetsid general terminal interface" "" termios(2)
.xx "" "termios: tcgetattr, tcsetattr," "tcsendbreak, tcdrain, tcflush,/" "" termios(2)
.xx "tcflush,/" "termios: tcgetattr," "tcsetattr, tcsendbreak, tcdrain," "" termios(2)
.xx "process group id" "" "tcsetpgrp set terminal foreground" "" tcsetpgrp(3C)
.xx "terminal/" "/cfsetospeed, tcgetpgrp," "tcsetpgrp, tcgetsid general" "" termios(2)
.xx "trees" "tsearch, tfind," "tdelete, twalk manage binary search" "" tsearch(3C)
.xx "" "directory: opendir, readdir," "telldir, seekdir, rewinddir,/" "" directory(3C)
.xx "temporary file" "tmpnam," "tempnam create a name for a" "" tmpnam(3S)
.xx "" "tmpfile create a" "temporary file" "" tmpfile(3S)
.xx "" "tmpnam, tempnam create a name for a" "temporary file" "" tmpnam(3S)
.xx "" "ctermid generate file name for" "terminal" "" ctermid(3S)
.xx "id" "tcsetpgrp set" "terminal foreground process group" "" tcsetpgrp(3C)
.xx "" "libwindows windowing" "terminal function library" "" libwindows(3X)
.xx "" "tcsetpgrp, tcgetsid general" "terminal interface" "/tcgetpgrp," termios(2)
.xx "" "jagent host control of windowing" "terminal" "" jagent(5)
.xx "" "ttyname, isatty find name of a" "terminal" "" ttyname(3C)
.xx "" "used between host and windowing" "terminal under layers(1)" "/protocol" layers(5)
.xx "" "exit, _exit" "terminate process" "" exit(2)
.xx "" "wait for child process to stop or" "terminate" "wait" wait(2)
.xx "" "atexit add program" "termination routine" "" atexit(3C)
.xx "" "abort generate an abnormal" "termination signal" "" abort(3C)
.xx "tcsendbreak, tcdrain, tcflush,/" "" "termios: tcgetattr, tcsetattr," "" termios(2)
.xx "" "lock into memory or unlock process," "text, or data" "plock" plock(2)
.xx "" "gettxt retrieve a" "text string" "" gettxt(3C)
.xx "search trees" "tsearch," "tfind, tdelete, twalk manage binary" "" tsearch(3C)
.xx "" "setitimer get/set value of interval" "timer" "getitimer," getitimer(3C)
.xx "" "the difference between two calendar" "times" "difftime computes" difftime(3C)
.xx "times" "" "times get process and child process" "" times(2)
.xx "" "times get process and child process" "times" "" times(2)
.xx "" "set file access and modification" "times" "utime" utime(2)
.xx "" "nice change priority of a" "time-sharing process" "" nice(2)
.xx "zone" "" "timezone set default system time" "" timezone(4)
.xx "" "mktime converts a" "tm structure to a calendar time" "" mktime(3C)
.xx "" "" "tmpfile create a temporary file" "" tmpfile(3S)
.xx "temporary file" "" "tmpnam, tempnam create a name for a" "" tmpnam(3S)
.xx "" "/tolower, _toupper, _tolower," "toascii translate characters" "" conv(3C)
.xx "" "popen, pclose initiate pipe" "to/from a process" "" popen(3S)
.xx "" "conv: toupper, tolower, _toupper," "_tolower, toascii translate/" "" conv(3C)
.xx "toascii translate/" "conv: toupper," "tolower, _toupper, _tolower," "" conv(3C)
.xx "" "tsort" "topological sort" "" tsort(1)
.xx "translate/" "conv: toupper, tolower," "_toupper, _tolower, toascii" "" conv(3C)
.xx "_tolower, toascii translate/" "conv:" "toupper, tolower, _toupper," "" conv(3C)
.xx "" "ptrace process" "trace" "" ptrace(2)
.xx "" "strxfrm string" "transformation" "" strxfrm(3C)
.xx "" "_toupper, _tolower, toascii" "translate characters" "/tolower," conv(3C)
.xx "" "cof2elf COFF to ELF object file" "translation" "" cof2elf(1)
.xx "" "elf32_xlatetom class-dependent data" "translation" "/elf32_xlatetof," elf_xlate(3E)
.xx "" "ftw, nftw walk a file" "tree" "" ftw(3C)
.xx "" "tdelete, twalk manage binary search" "trees" "tsearch, tfind," tsearch(3C)
.xx "tanf, asin, asinf, acos, acosf,/" "" "trig: sin, sinf, cos, cosf, tan," "" trig(3M)
.xx "" "acosf, atan, atanf, atan2, atan2f" "trigonometric functions" "/acos," trig(3M)
.xx "specified length" "" "truncate, ftruncate set a file to a" "" truncate(3C)
.xx "manage binary search trees" "" "tsearch, tfind, tdelete, twalk" "" tsearch(3C)
.xx "" "" "tsort topological sort" "" tsort(1)
.xx "terminal" "" "ttyname, isatty find name of a" "" ttyname(3C)
.xx "file of the current user" "" "ttyslot find the slot in the utmp" "" ttyslot(3C)
.xx "" "tsearch, tfind, tdelete," "twalk manage binary search trees" "" tsearch(3C)
.xx "" "return the size of an object file" "type" "elf_fsize: elf32_fsize" elf_fsize(3E)
.xx "" "elf_kind determine file" "type" "" elf_kind(3E)
.xx "" "sysfs get file system" "type information" "" sysfs(2)
.xx "" "/unordered, unorderedl determine" "type of floating-point number" "" isnan(3C)
.xx "" "nl_types native language data" "types" "" nl_types(5)
.xx "" "" "types primitive system data types" "" types(5)
.xx "" "types primitive system data" "types" "" types(5)
.xx "" "ctime, localtime, gmtime, asctime," "tzset convert date and time to/" "" ctime(3C)
.xx "" "" "uadmin administrative control" "" uadmin(2)
.xx "" "" "ucontext user context" "" ucontext(5)
.xx "" "getpw get name from" "UID" "" getpw(3C)
.xx "file/" "/endspent, fgetspent, lckpwdf," "ulckpwdf manipulate shadow password" "" getspent(3C)
.xx "" "" "ulimit get and set user limits" "" ulimit(2)
.xx "mask" "" "umask set and get file creation" "" umask(2)
.xx "" "" "umount unmount a file system" "" umount(2)
.xx "system" "" "uname get name of current UNIX" "" uname(2)
.xx "" "unget" "undo a previous get of an SCCS file" "" unget(1)
.xx "SCCS file" "" "unget undo a previous get of an" "" unget(1)
.xx "input stream" "" "ungetc push character back onto" "" ungetc(3S)
.xx "" "/srand48, seed48, lcong48 generate" "uniformly distributed pseudo-random/" "" drand48(3C)
.xx "" "elf_rawfile retrieve" "uninterpreted file contents" "" elf_rawfile(3E)
.xx "" "mktemp make a" "unique file name" "" mktemp(3C)
.xx "" "uname get name of current" "UNIX system" "" uname(2)
.xx "" "" "unlink remove directory entry" "" unlink(2)
.xx "" "mlockall, munlockall lock or" "unlock address space" "" mlockall(3C)
.xx "" "mlock, munlock lock (or" "unlock) pages in memory" "" mlock(3C)
.xx "" "plock lock into memory or" "unlock process, text, or data" "" plock(2)
.xx "" "munmap" "unmap pages of memory" "" munmap(2)
.xx "" "umount" "unmount a file system" "" umount(2)
.xx "" "/finite, finitel, fpclass, fpclassl," "unordered, unorderedl determine/" "" isnan(3C)
.xx "" "/fpclass, fpclassl, unordered," "unorderedl determine type of/" "" isnan(3C)
.xx "" "pause suspend process" "until signal" "" pause(2)
.xx "" "a signal mask and suspend process" "until signal" "sigsuspend install" sigsuspend(2)
.xx "" "elf_update" "update an ELF descriptor" "" elf_update(3E)
.xx "programs" "make maintain," "update, and regenerate groups of" "" make(1)
.xx "" "lsearch, lfind linear search and" "update" "" lsearch(3C)
.xx "" "sync" "update super block" "" sync(2)
.xx "" "/utmpxname, getutmp, getutmpx," "updwtmp, updwtmpx access utmpx file/" "" getutx(3C)
.xx "" "/getutmp, getutmpx, updwtmp," "updwtmpx access utmpx file entry" "" getutx(3C)
.xx "" "levels for an application for" "use with fmtmsg" "/a list of severity" addseverity(3C)
.xx "" "setuid, setgid set" "user and group IDs" "" setuid(2)
.xx "" "setcontext get and set current" "user context" "getcontext," getcontext(2)
.xx "" "ucontext" "user context" "" ucontext(5)
.xx "" "makecontext, swapcontext manipulate" "user contexts" "" makecontext(3C)
.xx "" "get character login name of the" "user" "cuserid" cuserid(3S)
.xx "" "/geteuid, getgid, getegid get real" "user, effective user, real group,/" "" getuid(2)
.xx "" "environ" "user environment" "" environ(5)
.xx "" "getdate convert" "user format date and time" "" getdate(3C)
.xx "" "ulimit get and set" "user limits" "" ulimit(2)
.xx "" "/getegid get real user, effective" "user, real group, and effective/" "" getuid(2)
.xx "" "in the utmp file of the current" "user" "ttyslot find the slot" ttyslot(3C)
.xx "" "maillock manage lockfile for" "user's mailbox" "" maillock(3X)
.xx "" "elf_end finish" "using an object file" "" elf_end(3E)
.xx "" "" "ustat get file system statistics" "" ustat(2)
.xx "modification times" "" "utime set file access and" "" utime(2)
.xx "" "utmp, wtmp" "utmp and wtmp entry formats" "" utmp(4)
.xx "" "setutent, endutent, utmpname access" "utmp file entry" "/pututline," getut(3C)
.xx "" "ttyslot find the slot in the" "utmp file of the current user" "" ttyslot(3C)
.xx "formats" "" "utmp, wtmp utmp and wtmp entry" "" utmp(4)
.xx "" "/pututline, setutent, endutent," "utmpname access utmp file entry" "" getut(3C)
.xx "" "utmpx, wtmpx" "utmpx and wtmpx entry formats" "" utmpx(4)
.xx "" "getutmpx, updwtmp, updwtmpx access" "utmpx file entry" "/getutmp," getutx(3C)
.xx "formats" "" "utmpx, wtmpx utmpx and wtmpx entry" "" utmpx(4)
.xx "" "/pututxline, setutxent, endutxent," "utmpxname, getutmp, getutmpx,/" "" getutx(3C)
.xx "" "" "val validate an SCCS file" "" val(1)
.xx "" "val" "validate an SCCS file" "" val(1)
.xx "" "free, realloc, calloc, memalign," "valloc, memory allocator" "malloc," malloc(3C)
.xx "" "abs, labs return integer absolute" "value" "" abs(3C)
.xx "" "elf_hash compute hash" "value" "" elf_hash(3E)
.xx "" "getenv return" "value for environment name" "" getenv(3C)
.xx "" "floor, ceiling, remainder, absolute" "value functions" "/rint, remainder" floor(3M)
.xx "" "readlink read the" "value of a symbolic link" "" readlink(2)
.xx "" "getitimer, setitimer get/set" "value of interval timer" "" getitimer(3C)
.xx "" "putenv change or add" "value to environment" "" putenv(3C)
.xx "" "" "values machine-dependent values" "" values(5)
.xx "" "values machine-dependent" "values" "" values(5)
.xx "list" "" "varargs handle variable argument" "" varargs(5)
.xx "" "stdarg handle" "variable argument list" "" stdarg(5)
.xx "" "varargs handle" "variable argument list" "" varargs(5)
.xx "" "print formatted output of a" "variable argument list" "/vsprintf" vprintf(3S)
.xx "" "pathconf get configurable pathname" "variables" "fpathconf," fpathconf(2)
.xx "" "sysconf get configurable system" "variables" "" sysconf(3C)
.xx "" "" "vc version control" "" vc(1)
.xx "" "get option letter from argument" "vector" "getopt" getopt(3C)
.xx "" "assert" "verify program assertion" "" assert(3X)
.xx "" "vc" "version control" "" vc(1)
.xx "" "get get a" "version of an SCCS file" "" get(1)
.xx "" "ELF library and application" "versions" "elf_version coordinate" elf_version(3E)
.xx "" "sccsdiff compare two" "versions of an SCCS file" "" sccsdiff(1)
.xx "virtual memory efficient way" "" "vfork spawn new process in a" "" vfork(2)
.xx "output of a variable/" "vprintf," "vfprintf, vsprintf print formatted" "" vprintf(3S)
.xx "" "getvfsspec, getvfsany get" "vfstab file entry" "/getvfsfile," getvfsent(3C)
.xx "" "vfork spawn new process in a" "virtual memory efficient way" "" vfork(2)
.xx "formatted output of a variable/" "" "vprintf, vfprintf, vsprintf print" "" vprintf(3S)
.xx "a variable/" "vprintf, vfprintf," "vsprintf print formatted output of" "" vprintf(3S)
.xx "state" "waitid" "wait for child process to change" "" waitid(2)
.xx "state" "waitpid" "wait for child process to change" "" waitpid(2)
.xx "terminate" "wait" "wait for child process to stop or" "" wait(2)
.xx "" "wstat" "wait status" "" wstat(5)
.xx "or terminate" "" "wait wait for child process to stop" "" wait(2)
.xx "change state" "" "waitid wait for child process to" "" waitid(2)
.xx "change state" "" "waitpid wait for child process to" "" waitpid(2)
.xx "" "ftw, nftw" "walk a file tree" "" ftw(3C)
.xx "" "mbstring: mbstowcs," "wcstombs multibyte string functions" "" mbstring(3C)
.xx "" "mbchar: mbtowc, mblen," "wctomb multibyte character handling" "" mbchar(3C)
.xx "encrypted" "isencrypt determine" "whether a character buffer is" "" isencrypt(3G)
.xx "" "libwindows" "windowing terminal function library" "" libwindows(3X)
.xx "" "jagent host control of" "windowing terminal" "" jagent(5)
.xx "" "/protocol used between host and" "windowing terminal under layers(1)" "" layers(5)
.xx "" "prof profile" "within a function" "" prof(5)
.xx "" "fgetc, getw get character or" "word from a stream" "getc, getchar," getc(3S)
.xx "" "fputc, putw put character or" "word on a stream" "putc, putchar," putc(3S)
.xx "" "chdir, fchdir change" "working directory" "" chdir(2)
.xx "" "getcwd get pathname of current" "working directory" "" getcwd(3C)
.xx "" "write, writev" "write on a file" "" write(2)
.xx "" "putpwent" "write password file entry" "" putpwent(3C)
.xx "" "putspent" "write shadow password file entry" "" putspent(3C)
.xx "" "" "write, writev write on a file" "" write(2)
.xx "" "write," "writev write on a file" "" write(2)
.xx "" "open open for reading or" "writing" "" open(2)
.xx "" "" "wstat wait status" "" wstat(5)
.xx "" "utmp, wtmp utmp and" "wtmp entry formats" "" utmp(4)
.xx "" "utmp," "wtmp utmp and wtmp entry formats" "" utmp(4)
.xx "" "utmpx, wtmpx utmpx and" "wtmpx entry formats" "" utmpx(4)
.xx "" "utmpx," "wtmpx utmpx and wtmpx entry formats" "" utmpx(4)
.xx "" "" "x286emul emulate XENIX 80286" "" x286emul(1)
.xx "" "x286emul emulate" "XENIX 80286" "" x286emul(1)
.xx "" "channels protocol used by" "xt driver" "xtproto multiplexed" xtproto(5)
.xx "protocol used by xt driver" "" "xtproto multiplexed channels" "" xtproto(5)
.xx "" "bessel: j0, j1, jn," "y0, y1, yn Bessel functions" "" bessel(3M)
.xx "" "bessel: j0, j1, jn, y0," "y1, yn Bessel functions" "" bessel(3M)
.xx "" "" "yacc yet another compiler-compiler" "" yacc(1)
.xx "" "yacc" "yet another compiler-compiler" "" yacc(1)
.xx "" "bessel: j0, j1, jn, y0, y1," "yn Bessel functions" "" bessel(3M)
.xx "" "timezone set default system time" "zone" "" timezone(4)
