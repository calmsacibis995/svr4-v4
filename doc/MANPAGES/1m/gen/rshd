'\"macro stdmacro
.if n .pH g1a.rshd @(#)rshd	40.7.1.1 of 1/3/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} rshd 1M "TCP/IP" "\&"
.if \nX=1 .ds x} rshd 1M "TCP/IP"
.if \nX=2 .ds x} rshd 1M "" "\&"
.if \nX=3 .ds x} rshd "" "" "\&"
.TH \*(x}
.SH NAME
\f4rshd\f1 \- remote shell server
.SH SYNOPSIS
\f4in.rshd  \f2host\f4.\fPport\f1
.SH DESCRIPTION
\f4rshd\f1
is the server for the
\f4rsh\f1(1)
program.  The server provides remote execution facilities
with authentication based on privileged port numbers.
.LP
\f4rshd\f1
is invoked by
\f4inetd\f1(1M)
each time a shell service is requested, and executes the
following protocol:
.TP
1)
The server checks the client's source port.
If the port is not in the range 0-1023, the server
aborts the connection.  The clients host address (in hex)
and port number (in decimal) are the argument passed to
\f4rshd.\f1
.TP
2)
The server reads characters from the socket up
to a null
( \f4\e0\f1 )
byte.  The resultant string is
interpreted as an
.SM ASCII
number, base 10.
.TP
3)
If the number received in step 1 is non-zero,
it is interpreted as the port number of a secondary
stream to be used for the
\f4stderr\f1.
A second connection is then created to the specified
port on the client's machine.  The source port of this
second connection is also in the range 0-1023.
.TP
4)
The server checks the client's source address.
If the address is associated with a host for which no
corresponding entry exists in the host name data base [see
\f4hosts\f1(4)],
the server aborts the connection.
.TP
5)
A null terminated user name of at most 16 characters
is retrieved on the initial socket.  This user name
is interpreted as a user identity to use on the
\f4server\f1's
machine.
.TP
6)
A null terminated user name of at most 16 characters
is retrieved on the initial socket.  This user name
is interpreted as the user identity on the
\f4client\f1's
machine.
.TP
7)
A null terminated command to be passed to a
shell is retrieved on the initial socket.  The length of
the command is limited by the upper bound on the size of
the system's argument list.
.TP
8)
\f4rshd\f1
then validates the user according to the following steps.
The remote user name is looked up in the password file and a
\f4chdir\f1
is performed to the user's home directory.  If the lookup or
fails, the connection is terminated.  If the
\f4chdir\f1
fails, it does a
\f4chdir\f1
to
\f4/\f1 (root).
If the user is not the super-user, (user
.SM ID
0), the file
\f4/etc/hosts.equiv\f1
is consulted for a list of hosts considered \(lqequivalent\(rq.
If the client's host name is present in this file, the
authentication is considered successful.  If the lookup
fails, or the user is the super-user, then the file \f4.rhosts\f1
in the home directory of the remote user is checked for
the machine name and identity of the user on the client's
machine.  If this lookup fails, the connection is terminated.
.TP
9)
A null byte is returned on the connection associated
with the
\f4stderr\f1
and the command line is passed to the normal login
shell of the user.  The
shell inherits the network connections established by
\f4rshd\f1.
.SH FILES
.PD 0
.TP 20
\f4/etc/hosts.equiv\f1
.PD
.SH SEE ALSO
\f4rsh\f1(1)
.SH DIAGNOSTICS
.LP
The following diagnostic messages are returned on the connection
associated with the
\f4stderr\f1,
after which any network connections are closed.
An error is indicated by a leading byte with a value of
1 (0 is returned in step 9 above upon successful completion
of all the steps prior to the command execution).
.TP
\f4locuser too long\f1
The name of the user on the client's machine is
longer than 16 characters.
.TP
\f4remuser too long\f1
The name of the user on the remote machine is
longer than 16 characters.
.TP
\f4command too long\f1
The command line passed exceeds the size of the argument
list (as configured into the system).
.TP
\f4Hostname for your address unknown.\f1
No entry in the host name database existed for
the client's machine.
.TP
\f4Login incorrect.\f1
No password file entry for the user name existed.
.TP
\f4Permission denied.\f1
The authentication procedure described above failed.
.TP
\f4Can't make pipe.\f1
The pipe needed for the
\f4stderr\f1
was not created.
.TP
\f4Try again.\f1
A
.I fork
by the server failed.
.SH NOTES
.LP
The authentication procedure used here assumes the integrity
of each client machine and the connecting medium.  This is
insecure, but is useful in an \(lqopen\(rq environment.
.LP
A facility to allow all data exchanges
to be encrypted should be present.
.br
.ne 8
