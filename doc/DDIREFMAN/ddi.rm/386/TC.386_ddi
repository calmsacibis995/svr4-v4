.if n .pH 386.TC.386_ddi @(#)TC.386_ddi	40.4
.\" Copyright 1991 UNIX System Laboratories, Inc.
.BK "DDI/DKI Reference Manual"
.CH "Table of Contents"
.H 1 "Table of Contents"
.H 3 "1. Driver Data"
.tC RM "intro" "D1DK" "introduction to driver data"
.tC RM "devflag" "D1D" "driver flags"
.tC RM "info" "D1D" "STREAMS driver and module information"
.tC RM "prefix" "D1DK" "driver prefix"
.H 3 "2. Driver Entry Point Routines"
.tC RM "intro" "D2DK" "introduction to driver entry point routines"
.tC RM "chpoll" "D2DK" "poll entry point for a non-STREAMS character driver"
.tC RM "close" "D2DK" "relinquish access to a device"
.tC RM "halt" "D2D" "shut down the driver when the system shuts down"
.tC RM "init" "D2D" "initialize a device"
.tC RM "intr" "D2D" "process a device interrupt"
.tC RM "ioctl" "D2DK" "control a character device"
.tC RM "mmap" "D2DK" "check virtual mapping for memory-mapped device"
.tC RM "open" "D2DK" "gain access to a device"
.tC RM "print" "D2DK" "display a driver message on the system console"
.tC RM "put" "D2DK" "receive messages from the preceding queue"
.tC RM "read" "D2DK" "read data from a device"
.tC RM "size" "D2DK" "return size of logical block device"
.tC RM "srv" "D2DK" "service queued messages"
.tC RM "start" "D2DK" "initialize a device at system start-up"
.tC RM "strategy" "D2DK" "perform block I/O"
.tC RM "write" "D2DK" "write data to a device"
.H 3 "3. Kernel Utility Routines"
.tC RM "intro" "D3DK" "introduction to kernel utility routines"
.tC RM "adjmsg" "D3DK" "trim bytes from a message"
.tC RM "allocb" "D3DK" "allocate a message block"
.tC RM "ASSERT" "D3DK" "verify assertion"
.tC RM "bcanput" "D3DK" "test for flow control in specified priority band"
.tC RM "bcopy" "D3DK" "copy data between address locations in the kernel"
.tC RM "biodone" "D3DK" "release buffer after block I/O and wakeup processes"
.tC RM "biowait" "D3DK" "suspend processes pending completion of block I/O"
.tC RM "bp_mapin" "D3DK" "allocate virtual address space for buffer page list"
.tC RM "bp_mapout" "D3DK" "deallocate virtual address space for buffer page list"
.tC RM "brelse" "D3DK" "return a buffer to the system's free list"
.tC RM "btop" "D3DK" "convert size in bytes to size in pages (round down)"
.tC RM "btopr" "D3DK" "convert size in bytes to size in pages (round up)"
.tC RM "bufcall" "D3DK" "call a function when a buffer becomes available"
.tC RM "bzero" "D3DK" "clear memory for a given number of bytes"
.tC RM "canput" "D3DK" "test for flow control in a stream"
.tC RM "clrbuf" "D3DK" "erase the contents of a buffer"
.tC RM "cmn_err" "D3DK" "display an error message or panic the system"
.tC RM "copyb" "D3DK" "copy a message block"
.tC RM "copyin" "D3DK" "copy data from a user buffer to a driver buffer"
.tC RM "copymsg" "D3DK" "copy a message"
.tC RM "copyout" "D3DK" "copy data from a driver buffer to a user buffer"
.tC RM "datamsg" "D3DK" "test whether a message is a data message"
.tC RM "delay" "D3DK" "delay process execution for a specified number of clock ticks"
.tC RM "dma_pageio" "D3D" "break up an I/O request into manageable units"
.tC RM "drv_getparm" "D3DK" "retrieve kernel state information"
.tC RM "drv_hztousec" "D3DK" "convert clock ticks to microseconds"
.tC RM "drv_priv" "D3DK" "determine whether credentials are privileged"
.tC RM "drv_setparm" "D3DK" "set kernel state information"
.tC RM "drv_usectohz" "D3DK" "convert microseconds to clock ticks"
.tC RM "drv_usecwait" "D3DK" "busy-wait for specified interval"
.tC RM "dupb" "D3DK" "duplicate a message block"
.tC RM "dupmsg" "D3DK" "duplicate a message"
.tC RM "enableok" "D3DK" "allow a queue to be serviced"
.tC RM "esballoc" "D3DK" "allocate a message block using an externally-supplied buffer"
.tC RM "esbbcall" "D3DK" "call a function when an externally-supplied buffer can be allocated"
.tC RM "etoimajor" "D3DK" "convert external to internal major device number"
.tC RM "flushband" "D3DK" "flush messages in a specified priority band"
.tC RM "flushq" "D3DK" "flush messages on a queue"
.tC RM "freeb" "D3DK" "free a message block"
.tC RM "freemsg" "D3DK" "free a message"
.tC RM "freerbuf" "D3DK" "free a raw buffer header"
.tC RM "geteblk" "D3DK" "get an empty buffer"
.tC RM "getemajor" "D3DK" "get external major device number"
.tC RM "geteminor" "D3DK" "get external minor device number"
.tC RM "geterror" "D3DK" "retrieve error number from a buffer header"
.tC RM "getmajor" "D3DK" "get internal major device number"
.tC RM "getminor" "D3DK" "get internal minor device number"
.tC RM "getq" "D3DK" "get the next message from a queue"
.tC RM "getrbuf" "D3DK" "get a raw buffer header"
.tC RM "hat_getkpfnum" "D3DK" "get physical page ID for kernel virtual address"
.tC RM "hat_getppfnum" "D3D" "get physical page ID for physical address"
.tC RM "inb" "D3D" "read a byte from a 8 bit I/O port"
.tC RM "inl" "D3D" "read a 32 bit word from a 32 bit I/O port"
.tC RM "insq" "D3DK" "insert a message into a queue"
.tC RM "inw" "D3D" "read a 16 bit short word from a 16 bit I/O port"
.tC RM "itoemajor" "D3DK" "convert internal to external major device number"
.tC RM "kmem_alloc" "D3DK" "allocate space from kernel free memory"
.tC RM "kmem_free" "D3DK" "free previously allocated kernel memory"
.tC RM "kmem_zalloc" "D3DK" "allocate and clear space from kernel free memory"
.tC RM "linkb" "D3DK" "concatenate two message blocks"
.tC RM "makedevice" "D3DK" "make device number from major and minor numbers"
.tC RM "max" "D3DK" "return the larger of two integers"
.tC RM "min" "D3DK" "return the lesser of two integers"
.tC RM "msgdsize" "D3DK" "return number of bytes of data in a message"
.tC RM "ngeteblk" "D3DK" "get an empty buffer of the specified size"
.tC RM "noenable" "D3DK" "prevent a queue from being scheduled"
.tC RM "OTHERQ" "D3DK" "get pointer to queue's partner queue"
.tC RM "outb" "D3D" "write a byte to an 8 bit I/O port"
.tC RM "outl" "D3D" "write a 32 bit long word to a 32 bit I/O port"
.tC RM "outw" "D3D" "write a 16 bit short word to a 16 bit I/O port"
.tC RM "physiock" "D3DK" "validate and issue raw I/O request"
.tC RM "physmap" "D3D" "obtain virtual address mapping for physical addresses"
.tC RM "physmap_free" "D3D" "free virtual address mapping for physical addresses"
.tC RM "pollwakeup" "D3DK" "inform polling processes that an event has occurred"
.tC RM "psignal" "D3K" "send signal to a process"
.tC RM "ptob" "D3DK" "convert size in pages to size in bytes"
.tC RM "pullupmsg" "D3DK" "concatenate bytes in a message"
.tC RM "putbq" "D3DK" "place a message at the head of a queue"
.tC RM "putctl" "D3DK" "send a control message to a queue"
.tC RM "putctl1" "D3DK" "send a control message with a one-byte parameter to a queue"
.tC RM "putnext" "D3DK" "send a message to the next queue"
.tC RM "putq" "D3DK" "put a message on a queue"
.tC RM "qenable" "D3DK" "schedule a queue's service routine to be run"
.tC RM "qreply" "D3DK" "send a message in the opposite direction in a stream"
.tC RM "qsize" "D3DK" "find the number of messages on a queue"
.tC RM "RD" "D3DK" "get a pointer to the read queue"
.tC RM "repinsb" "D3D" "read bytes from I/O port to buffer"
.tC RM "repinsd" "D3D" "read 32 bit words from I/O port to buffer"
.tC RM "repinsw" "D3D" "read 16 bit words from I/O port to buffer"
.tC RM "repoutsb" "D3D" "write bytes from buffer to an I/O port"
.tC RM "repoutsd" "D3D" "write 32 bit words from buffer to an I/O port"
.tC RM "repoutsw" "D3D" "write 16 bit words from buffer to an I/O port"
.tC RM "rmalloc" "D3DK" "allocate space from a private space management map"
.tC RM "rmfree" "D3DK" "free space into a private space management map"
.tC RM "rminit" "D3K" "initialize a private space management map"
.tC RM "rmsetwant" "D3K" "set the map's wait flag for a wakeup"
.tC RM "rmvb" "D3DK" "remove a message block from a message"
.tC RM "rmvq" "D3DK" "remove a message from a queue"
.tC RM "SAMESTR" "D3DK" "test if next queue is same type"
.tC RM "sleep" "D3K" "suspend process execution pending occurrence of an event"
.tC RM "spl" "D3D" "block/allow interrupts"
.tC RM "strlog" "D3DK" "submit messages to the log driver"
.tC RM "strqget" "D3DK" "get information about a queue or band of the queue"
.tC RM "strqset" "D3DK" "change information about a queue or band of the queue"
.tC RM "timeout" "D3DK" "execute a function after a specified length of time"
.tC RM "uiomove" "D3DK" "copy data using uio(D4DK) structure"
.tC RM "unbufcall" "D3DK" "cancel a pending bufcall request"
.tC RM "unlinkb" "D3DK" "remove a message block from the head of a message"
.tC RM "untimeout" "D3DK" "cancel previous timeout(D3DK) request"
.tC RM "ureadc" "D3DK" "copy a character to space described by uio(D4DK) structure"
.tC RM "uwritec" "D3DK" "return a character from space described by uio(D4DK) structure"
.tC RM "vtop" "D3D" "convert virtual address to physical address"
.tC RM "wakeup" "D3K" "resume suspended process execution"
.tC RM "WR" "D3DK" "get a pointer to the write queue"
.tC RM "intro" "D3X" "introduction to DMA utility routines"
.tC RM "dma_disable" "D3X" "disable recognition of hardware requests on a DMA channel"
.tC RM "dma_enable" "D3X" "enable recognition of hardware requests on a DMA channel"
.tC RM "dma_free_buf" "D3X" "free a previously allocated DMA buffer descriptor"
.tC RM "dma_free_cb" "D3X" "free a previously allocated DMA command block"
.tC RM "dma_get_buf" "D3X" "allocate a DMA buffer descriptor"
.tC RM "dma_get_best_mode" "D3X" "determine best transfer mode for DMA command"
.tC RM "dma_get_cb" "D3X" "allocate a DMA command block"
.tC RM "dma_prog" "D3X" "program a DMA operation for a subsequent hardware request"
.tC RM "dma_stop" "D3X" "stop software-initiated DMA operation on a channel and release it"
.tC RM "dma_swstart" "D3X" "initiate a DMA operation via software request"
.tC RM "dma_swsetup" "D3X" "program a DMA operation for a subsequent software request"
.H 3 "4. Kernel Data Structures"
.tC RM "intro" "D4DK" "introduction to kernel data structures"
.tC RM "buf" "D4DK" "block I/O data transfer structure"
.tC RM "copyreq" "D4DK" "STREAMS transparent ioctl copy request structure"
.tC RM "copyresp" "D4DK" "STREAMS transparent ioctl copy response structure"
.tC RM "datab" "D4DK" "STREAMS data block structure"
.tC RM "free_rtn" "D4DK" "STREAMS driver's message free routine structure"
.tC RM "iocblk" "D4DK" "STREAMS ioctl structure"
.tC RM "iovec" "D4DK" "data storage structure for I/O using uio(D4DK)"
.tC RM "linkblk" "D4DK" "STREAMS multiplexor link structure"
.tC RM "module_info" "D4DK" "STREAMS driver and module information structure"
.tC RM "msgb" "D4DK" "STREAMS message block structure"
.tC RM "qinit" "D4DK" "STREAMS queue initialization structure"
.tC RM "queue" "D4DK" "STREAMS queue structure"
.tC RM "streamtab" "D4DK" "STREAMS driver and module declaration structure"
.tC RM "stroptions" "D4DK" "stream head option structure"
.tC RM "uio" "D4DK" "scatter/gather I/O request structure"
.tC RM "intro" "D4X" "introduction to DMA data structures"
.tC RM "dma_buf" "D4X" "DMA buffer descriptor structure"
.tC RM "dma_cb" "D4X" "DMA command block structure"
.H 3 "5. Kernel #defines"
.tC RM "intro" "D5DK" "introduction to kernel #define's"
.tC RM "errnos" "D5DK" "error numbers"
.tC RM "messages" "D5DK" "STREAMS messages"
.tC RM "signals" "D5DK" "signal numbers"
.tC RM "ics_agent_cmp" "D3D" "checks for certain board types in the designated slot"
.tC RM "ics_find _rec" "D3D" "reads the interconnect register of the board in the specified slot"
.tC RM "ics_hostid" "D3D" "returns the host id field of the HOST ID record in this board's interconnect space"
.tC RM "ics_rdwr" "D3D" "reads or writes a specified number of interconnect space registers from a given cardslot ID"
.tC RM "ics_read" "D3D" "reads the interconnect register of the board in the specified slot"
.tC RM "ics_write" "D3D" "writes a value into the specified register of the board in the specified slot"
.tC RM "mps_AMPcancel" "D3D" "cancels an ongoing rsvp transaction"
.tC RM "mps_AMPreceive_frag" "D3D" "receives solicited data in fragments when buffer space is not available at the receiving agent"
.tC RM "mps_AMPreceive" "D3D" "receives solicited data that corresponds to an outstanding buffer request"
.tC RM "mps_AMPsend_rsvp" "D3D" "queues request messages for transmission and sets up table entries for reception of reply messages"
.tC RM "mps_AMPsend_data" "D3D" "sends solicited data that is not part of any request-response transaction"
.tC RM "mps_AMPsend_reply" "D3D" "replies to a received request that is part of a request-response transaction"
.tC RM "mps_AMPsend" "D3D" "sends unsolicited messages that are not part of any request-response transaction"
.tC RM "mps_close_chan" "D3D" "closes a previously opened channel"
.tC RM "mps_free_dmabuf" "D3D" "frees a list of data buffer descriptors"
.tC RM "mps_free_msgbuf" "D3D" " puts a buffer back into the free memory pool"
.tC RM "mps_free_tid" "D3D" "frees a previously allocated transaction id"
.tC RM "mps_get_dmabuf" "D3D" "returns a pointer to a list of data buffer descriptors"
.tC RM "mps_get_msgbuf" "D3D" "allocates a message buffer"
.tC RM "mps_get_reply_len" "D3D" "get data length for a solicited reply."
.tC RM "mps_get_soldata" "D3D" "copies user data from the message buffer."
.tC RM "mps_get_tid" "D3D" "allocates transaction ids"
.tC RM "mps_get_unsoldata" "D3D" "copies user data from the message buffer."
.tC RM "mps_mk_bgrant" "D3D" "construct a buffer grant in response to a buffer request."
.tC RM "mps_mk_brdcst" "D3D" "constructs a broadcast message to be sent"
.tC RM "mps_mk_breject" "D3D" "construct a buffer reject in response to a buffer request."
.tC RM "mps_mk_sol" "D3D" "constructs a message to be sent to initiate a solicited data transfer"
.tC RM "mps_mk_solrply" "D3D" "constructs a message to be sent to initiate a solicited data reply"
.tC RM "mps_mk_unsol" "D3D" "constructs an unsolicited message to be sent"
.tC RM "mps_mk_unsolrply" "D3D" "constructs a unsolicited reply message to be sent."
.tC RM "mps_msg: mps_msg_getsrcmid, mps_msg_getmsgtyp, mps_msg_getbrlen, mps_msg_getreqid, mps_msg_getlsnid, mps_msg_getsrcpid, mps_msg_gettrnsid, mps_msg_getudp, mps_msg_iscancel, mps_msg_iseot, mps_msg_iserror, mps_msg_iscompletion, mps_msg_isreq " "D3D" "macros used to decode message handler message"
.tC RM "mps_open_chan" "D3D" "opens a channel"
