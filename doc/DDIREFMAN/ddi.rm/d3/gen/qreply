'\"macro stdmacro
.if n .pH gen.qreply @(#)qreply	40.2 of 1/7/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.nr X
.if \nX=0 .ds x} qreply D3DK "STREAMS" "DDI/DKI" "\&"
.if \nX=1 .ds x} qreply D3DK "STREAMS" "DDI/DKI"
.if \nX=2 .ds x} qreply D3DK "" "\&"
.if \nX=3 .ds x} qreply "" "" "\&"
.TH \*(x}
.IX "\f4qreply\fP(D3DK)"
.SH NAME
\f4qreply\f1 \- send a message in the opposite direction in a stream
.SH SYNOPSIS
.nf
.na
\f4#include <sys/stream.h>
.sp 0.5
void qreply(queue_t *\f2q\f4, mblk_t *\f2bp\f4);\f1
.ad
.fi
.SH ARGUMENTS
.RS 0n 10
.IP "\f2q\f1" 10n
Pointer to the queue from which the message is being sent.
.IP "\f2bp\f1" 10n
Pointer to the message to be sent in the opposite direction.
.RE
.SH DESCRIPTION
\f4qreply\f1 sends a message in the opposite direction
from that which \f2q\f1 is pointing.
It calls the \f4OTHERQ\f1(D3DK)
function to find \f2q\f1's partner, and passes the message
by calling the \f4put\f1(D2DK)
routine of the next queue in the stream after \f2q\f1's partner.
.SH RETURN VALUE
None.
.SH LEVEL
Base or Interrupt.
.SH NOTES
Does not sleep.
.SH SEE ALSO
.na
\f4put\fP(D2DK),
\f4OTHERQ\f1(D3DK),
\f4putnext\f1(D3DK)
.ad
.SH EXAMPLE
See \f4put\fP(D2DK) for an example of \f4qreply\fP.
