'\"!  pic | mmdoc
'\"macro stdmacro
.if n .pH gen.dupb @(#)dupb	40.2 of 1/7/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.nr X
.if \nX=0 .ds x} dupb D3DK "STREAMS" "DDI/DKI" "\&"
.if \nX=1 .ds x} dupb D3DK "STREAMS" "DDI/DKI"
.if \nX=2 .ds x} dupb D3DK "" "\&"
.if \nX=3 .ds x} dupb "" "" "\&"
.TH \*(x}
.IX "\f4dupb\fP(D3DK)"
.IX "STREAMS message blocks"
.IX "message block descriptor"
.SH NAME
\f4dupb\f1 \- duplicate a message block
.SH SYNOPSIS 
.nf
.na
\f4#include <sys/stream.h>
.sp 0.5
mblk_t *dupb(mblk_t *\f2bp\f4);\f1
.ad
.fi
.SH ARGUMENTS
.RS 0n 10
.IP "\f2bp\f1" 10n
Pointer to the message block to be duplicated.
.RE
.SH DESCRIPTION
\f4dupb\f1 creates a new message block structure to reference the message
block pointed to by \f2bp\f1.  Unlike \f4copyb\f1(D3DK), \f4dupb\f1
does not copy
the information in the data block, but creates a new structure to point to it.
.P
.IX "\f4msgb\fP(D4DK)"
The following figure shows how the \f4db_ref\f1 field of the data block structure
has been changed from 1 to 2, 
reflecting the increase in the number of
references to the data block.  The new message block contains the same
information as the first.
Note that \f4b_rptr\f1 and \f4b_wptr\f1 are copied from \f2bp\f1, and
that \f4db_ref\f1 is incremented.
.IX "\f4datab\fP(D4DK)"
.nf
.PS
scale=100
define m0 |
[ box invis ht 24 wid 1 with .sw at 0,0
line -> from 0,0 to 0,24 
] |

define m1 |
[ box invis ht 62 wid 56 with .sw at 0,0
line  from 0,42 to 56,42 dotted
line  from 0,22 to 56,22 dotted
box ht 62 wid 56 with .nw at 0,62 
] |

define m2 |
[ box invis ht 62 wid 86 with .sw at 0,0
box ht 62 wid 86 with .nw at 0,62 
] |

define m3 |
[ box invis ht 62 wid 64 with .sw at 0,0
box ht 62 wid 64 with .nw at 0,62 
"\f4\s8\&b_datap\f1\s0" at 28,47
"\f1\s8\&\f1\s0" at 8,43 ljust
"\f1\s8\&\f1\s0" at 8,33 ljust
"\f4\s8\&b_rptr\f1\s0" at 26,21
"\f4\s8\&b_wptr\f1\s0" at 26,9
] |

box invis ht 242 wid 442 with .sw at 0,0
line  from 64,154 to 120,154 
line -> from 120,154 to 120,178 
line -> from 136,204 to 136,122 
line  from 64,116 to 68,116 
line  from 68,116 to 68,82 
line -> from 68,82 to 94,82 
line  from 64,126 to 80,126 
line  from 80,126 to 80,102 
line -> from 80,102 to 94,102 
m1 with .nw at 296,98
m1 with .nw at 94,122
m0 with .nw at 306,178
line -> from 326,206 to 326,98 
line  from 292,154 to 306,154 
"\f4\s9\&nbp=dupb(bp);\f1\s0" at 150,-7 ljust
line  from 180,242 to 180,16 
line  from 180,16 to 440,16 
line  from 180,16 to 0,16 
"\fH\s8\&Before\f1\s0" at 78,23
"\fH\s8\&After\f1\s0" at 326,23
"\f4\s8\&db_base\f1\s0" at 312,211
"\f4\s8\&db_ref (2)\f1\s0" at 320,227
m2 with .nw at 280,240
box ht 62 wid 86 with .nw at 82,240 
"\f4\s8\&db_base\f1\s0" at 114,211
"\f4\s8\&db_ref (1)\f1\s0" at 122,227
"\f4\s8\&bp\f1\s0" at 228,181 ljust
"\f1\s8\&\f1\s0" at 236,137 ljust
"\f1\s8\&\f1\s0" at 236,147 ljust
m3 with .nw at 364,168
m3 with .nw at 228,168
m3 with .nw at 0,168
line -> from 208,58 to 296,58 
line  from 208,126 to 208,58 
"\f4\s8\&nbp\f1\s0" at 416,181
line  from 228,126 to 208,126 
line -> from 216,78 to 296,78 
line  from 216,118 to 216,78 
line  from 228,118 to 216,118 
line  from 428,118 to 434,118 
line -> from 442,58 to 354,58 
line  from 442,126 to 442,58 
line  from 428,126 to 442,126 
line -> from 434,78 to 354,78 
line  from 434,118 to 434,78 
"\f1\s8\&\f1\s0" at 374,137 ljust
"\f1\s8\&\f1\s0" at 374,147 ljust
line -> from 346,154 to 346,178 
line  from 364,154 to 346,154 
"\f4\s8\&bp\f1\s0" at 0,181 ljust
.PE
.fi
.SH "RETURN VALUE" 
If successful, \f4dupb\f1 returns a pointer to the new message block.
Otherwise, it returns a \f4NULL\f1 pointer.
.SH LEVEL
Base or Interrupt
.SH NOTES
Does not sleep.
.SH "SEE ALSO"
.na
\f4copyb\f1(D3DK),
\f4dupmsg\fP(D3DK),
\f4datab\fP(D4DK),
\f4msgb\fP(D4DK)
.ad
