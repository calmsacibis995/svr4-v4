'\"!  tbl | mmdoc
'\"macro stdmacro
.if n .pH 386.dma_buf @(#)dma_buf	40.3 of 6/24/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.nr X
.if \nX=0 .ds x} dma_buf D4X "" "DDI" "\&"
.if \nX=1 .ds x} dma_buf D4X "" "DDI"
.if \nX=2 .ds x} dma_buf D4X "" "\&"
.if \nX=3 .ds x} dma_buf "" "" "\&"
.TH \*(x}
.IX "\f4dma_buf\fP(D4X)"
.IX "block I/O, \f4dma_buf\fP(D4X)"
.SH NAME
\f4dma_buf\fP \- DMA buffer descriptor structure
.SH SYNOPSIS
.nf
\f4#include <sys/types.h>
#include <sys/dma.h>\fP
.fi
.ad
.SH DESCRIPTION
The DMA buffer descriptor structure is used
to specify the data to be transferred by a DMA operation.
Each DMA operation is controlled by a DMA command block [see \f4dma_cb\fP(D4X)]
structure that includes pointers to two \f4dma_buf\fP structures.
.P
Each \f4dma_buf\fP structure provides the physical address
and size of a data block involved in a DMA transfer.
Scatter/gather operations involving multiple data blocks may be
implemented by linking together multiple \f4dma_buf\fPs in
a singly-linked list.
Each \f4dma_buf\fP includes both the virtual and physical
address of the next DMA buffer descriptor in the list.
.P
DMA buffer descriptor structures should
only be allocated via \f4dma_get_buf\fP(D3X).
Although drivers may access the members listed below,
they should not make any assumptions about the size
of the structure or the contents of other fields in the structure.
.SH STRUCTURE MEMBERS
.TS
lf4p8 2 lf4p8 2 lf4p8.
ushort_t	count;	/* size of block*/
paddr_t	address;	/* physical address of data block */
paddr_t	physical;	/* physical address of next dma_buf */
struct dma_buf	*next_buf;	/* next buffer descriptor */
ushort_t	count_hi;	/* for big blocks */
.TE
.P
The members of the \f4dma_buf\fP structure are:
.P
\f4count\fP specifies the low-order 16 bits of the size
of the data block in bytes.
.P
\f4address\fP specifies the physical address of the data block.
.P
\f4physical\fP specifies the physical address of the next \f4dma_buf\fP
in a linked list of DMA buffers descriptors.
It should be \f4NULL\fP if the buffer descriptor
is the last one in the list.
Note that a DMA buffer descriptor allocated by
\f4dma_get_buf\fP will be zeroed out initially,
thus no explicit initialization is required for this field
if a value of \f4NULL\f1 is desired.
.P
\f4next_buf\fP specifies the virtual address of the next \f4dma_buf\fP
in a linked list of DMA buffer descriptors.
It should be \f4NULL\fP if the buffer descriptor
is the last one in the list.
Note that a DMA buffer descriptor allocated by
\f4dma_get_buf\fP will be zeroed out initially,
thus no explicit initialization is required for this field
if a value of \f4NULL\f1 is desired.
.P
\f4count_hi\fP specifies the high-order 16 bits of the
size of the data block in bytes.
Since a \f4dma_buf\fP allocated by \f4dma_get_buf\fP is
initially zeroed out, no explicit initialization is required
for this field if the size of the data block may be specified
by a \f4ushort_t\fP.
.SH SEE ALSO
.na
\f4dma_free_buf\fP(D3X),
\f4dma_get_buf\fP(D3X),
\f4dma_cb\fP(D4X)
.ad
