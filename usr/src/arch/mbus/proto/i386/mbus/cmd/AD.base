#ident	"@(#)mbus:proto/i386/mbus/cmd/AD.base	1.1.2.3"

trap '[ ! -s /etc/conf/bin/idbuild ] && mv /etc/conf/bin/S.idbuild /etc/conf/bin/idbuild; [ ! -s /etc/conf/bin/idreboot ] && mv /etc/conf/bin/S.idreboot /etc/conf/bin/idreboot; exit 3' 1 2 3 15

PATH=/sbin:/etc:/usr/sbin:/usr/bin
export PATH
set +e
[ -f /opt/unix/PKG_INFO ] || {
	echo "No pkginfo found"
	exit 1

}
cd /
. /opt/unix/PKG_INFO

PKG_RESP_HOME=/opt/unix/pkg
PKG_RESP=/opt/unix/resp
PKG_DEFAULT=/tmp/.deflt.$$
NTAPE='Ntape1:/dev/rmt/c0s0n:::desc="Cartridge Tape Drive" volume="cartridge tape" type="ctape" removable="true" mkdtab="false" capacity="120000" bufsize="20480" norewind="/dev/rmt/c0s0n" erasecmd="/usr/lib/tape/tapecntl -e" display="true" rewindcmd="/usr/lib/tape/tapecntl -w"'

export PKG_HOME PKG_RESP PKG_DEFAULT 
do_flush () {
	STTY=`stty -g`
	stty icanon
	stty $STTY
}
make_default () {
	cat >$PKG_DEFAULT <<-END
	mail=root
	instance=overwrite
	partial=nocheck
	runlevel=nocheck
	idepend=ask
	rdepend=nocheck
	space=ask
	setuid=nocheck
	conflict=nocheck
	list_files=nocheck
	action=nocheck
	basedir=default
	END
	#
	# make sure to get the real type of f0t
	#
	/usr/sadm/sysadm/bin/mkdtab >/dev/null 2>&1 
	sync
}
####
Get_list() {
	list=$1
	def=$2
	[ -z $def ] && def=y
	tmp=
	for i in `eval echo \\$$list`
	do
		echo "\tInstall $i (default $def): \c"
		read ans
			case $def in
			y) case $ans in
					y*|Y*|'') tmp=" $tmp $i";;
					 *) tmp=" $tmp skip";;
				esac
				;;
			n) case $ans in
					y*|Y*) tmp=" $tmp $i";;
					 ''|*) tmp=" $tmp skip";;
				esac
				;;
			esac
	done
	echo "${list}=\" $tmp \"" >/opt/unix/.${list}
}
Get_sys_type () {
	echo "\nPlease insert \c"
	if [ -f /opt/unix/.tape.count ];then
		echo "cartridge tape \c"
	else
		echo "diskette \c"
	fi
	echo "and press <RETURN> to continue:  \c"
	read ans
	echo "\n"
	rm -f /opt/unix/.[A-Z]*
	while :
	do
		for i in $PKG_GROUPS
		do
			case $i in
				HARDWARE) continue;;
			esac
			echo "\nThe $i Package Set contains the following packages:"
			echo "\n\t`eval echo \\$$i`\n"	
			echo "Do you wish to install any of these packages (default n): \c"
			read ans
			case $ans in
			  y*|Y*) echo "\tInstall all packages (default y): \c"
		  			read sel
					case $sel in
					 n*|N*)	Get_list $i y
								;;
						  ''|*)	echo "$i=\" `eval echo \\$$i` \"" >/opt/unix/.${i}
						 		;;
					esac
					;;
			esac
		done
		echo "\nPlease select from the following Hardware specific packages\n"
		Get_list HARDWARE n
		echo "\nCurrent Package Selections are:"
		for i in $PKG_GROUPS
		do
			[ -f /opt/unix/.$i ] && {
				echo "$i:\t\c"
				[ $i = BASIC ] && echo "\t\c"
				while read foo list
				do
					for i in $list
					do
						case $i in
							skip|\") continue;;
						esac
						echo "$i \c"
					done
				done </opt/unix/.$i 
			}
			echo
		done
		echo "\nAre these Correct (default n): \c"
		read ans
		case $ans in 
			y*|Y*)	break;;
		esac
		rm -f /opt/unix/.[A-Z]*
	done
}

####
get_pkgs () {
	echo "\n\nThe question session is complete."
	echo "The packages you have selected will now be installed.\n"
	if [ -f /opt/unix/.tape.count ];then
		PKG_MEDIA=Ntape1
		MACH=`uname -p`
		echo "Searching for Packages, this may take some time.  \c"
		tapecntl -w
		if [ $? -ne 0 ]
		then
			cp /etc/conf/bin/S.idbuild  /etc/conf/bin/idbuild
			cp /etc/conf/bin/S.idreboot /etc/conf/bin/idreboot
			rm -f /etc/conf/bin/S.id*
			rm -f $PKG_DEFAULT
			echo "\n\nUnable to rewind tape."
			exit 1
		fi
		case $MACH in
			386/AT)	tapecntl -p2;;
			386/MB2)tapecntl -p6;; 
			386/MB1)tapecntl -p6;; 
		esac
		echo
		PKG_OPT="-O"
		if (grep '^Ntape' /etc/device.tab >/dev/null 2>&1 )
		then
			:
		else
			echo "$NTAPE" >>/etc/device.tab
		fi
	else
		PKG_MEDIA=diskette1
		PKG_OPT=""
	fi
	
	IDCMD=/etc/conf/bin
	[ -f $IDCMD/S.idbuild ] || cp $IDCMD/idbuild $IDCMD/S.idbuild
	>$IDCMD/idbuild
	[ -f $IDCMD/S.idreboot ] || cp $IDCMD/idreboot $IDCMD/S.idreboot
	>$IDCMD/idreboot
	for i in $PKG_GROUPS
	do
		if [ -f /opt/unix/.$i ];then
			. /opt/unix/.$i
			echo "\nInstalling from The $i Package Set\n"		
			for x in  `eval echo \\$$i`
			do
				case $x in
					skip) [ $PKG_MEDIA = "Ntape1" ] && tapecntl -p1
						  continue
						  ;;
				esac
				[ $PKG_MEDIA  != Ntape1 ] && echo "\nPlease insert the <$x> diskette\n"
				if [ -f $PKG_RESP/$x ];then
					pkgadd $PKG_OPT -d $PKG_MEDIA \
						-r$PKG_RESP/$x -a$PKG_DEFAULT $x
				else
					pkgadd $PKG_OPT -d $PKG_MEDIA -a$PKG_DEFAULT $x
				fi
			done
		else
			echo "\nSkipping $i Package Set\n"		
			for x in `eval echo \\$$i`
			do
				[ $PKG_MEDIA = "Ntape1" ] && tapecntl -p1
			done
		fi
	done
	if [ -f /opt/unix/.tape.count ];then 
		tapecntl -w
		echo "It is safe to remove the cartridge tape."
	fi
	cp /etc/conf/bin/S.idbuild  /etc/conf/bin/idbuild
	cp /etc/conf/bin/S.idreboot /etc/conf/bin/idreboot
	rm -f /etc/conf/bin/S.id*
	rm -f $PKG_DEFAULT
}

make_dummy() {
	pkg=$1
	base=/var/sadm/pkg
	if [ ! -f /opt/unix/.list ];then
		for i in  $PKG_GROUPS
		do
			[ -f /opt/unix/.$i ] && cat /opt/unix/.$i >>/opt/unix/.list
		done
	fi
	if  grep $pkg  /opt/unix/.list >/dev/null 2>&1 ;then
		[ -d $base/$pkg ] || {
			mkdir -p $base/$pkg
			echo "CATEGORY=dummy" >$base/$pkg/pkginfo
			touch /tmp/.${pkg}.in
		}
	fi
}
remove_dummy() {
	pkg=$1
	base=/var/sadm/pkg
	[ -f /tmp/.$pkg.in ] && rm -rf $base/$pkg /tmp/.${pkg}.in
}


make_response () {
	[ -d $PKG_RESP ] || mkdir $PKG_RESP
	cd $PKG_RESP_HOME
	rm -f $PKG_RESP/*
#
# make sure any pkgs which will be installed are present for the
# request scripts, currently other pkgs depend on 
# fmli,oam, and face being present at request script time
#
	make_dummy fmli
	make_dummy oam
	make_dummy face

	for i in  $PKG_GROUPS
	do
		if [ -f /opt/unix/.$i ];then
			. /opt/unix/.$i
			for x in `eval echo \\$$i`
			do
				do_flush
				case $x in
					skip) continue;;
				esac
				if [ -f $PKG_RESP_HOME/$x/install/request ];then
					clear
					pkgask -d $PKG_RESP_HOME -a $PKG_DEFAULT -r $PKG_RESP/$x $x
					if [ $? -eq 0 ];then
						sleep 3
					else
						echo "Type Return to continue"
						read cont
					fi
				fi
			done
		fi
	done
	remove_dummy fmli
	remove_dummy oam
	remove_dummy face
}
make_default
Get_sys_type
make_response
get_pkgs
/etc/conf/bin/idbuild
sync
